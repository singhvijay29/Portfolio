{"ast":null,"code":"'use client';\n\nvar __defProp = Object.defineProperty;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n  return value;\n}; // src/utils.ts\n\n\nimport { useEffect, useLayoutEffect } from \"react\";\n\nfunction sortNodes(nodes) {\n  return nodes.sort((a, b) => {\n    const compare = a.compareDocumentPosition(b);\n\n    if (compare & Node.DOCUMENT_POSITION_FOLLOWING || compare & Node.DOCUMENT_POSITION_CONTAINED_BY) {\n      return -1;\n    }\n\n    if (compare & Node.DOCUMENT_POSITION_PRECEDING || compare & Node.DOCUMENT_POSITION_CONTAINS) {\n      return 1;\n    }\n\n    if (compare & Node.DOCUMENT_POSITION_DISCONNECTED || compare & Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC) {\n      throw Error(\"Cannot sort the given nodes.\");\n    } else {\n      return 0;\n    }\n  });\n}\n\nvar isElement = el => typeof el == \"object\" && \"nodeType\" in el && el.nodeType === Node.ELEMENT_NODE;\n\nfunction getNextIndex(current, max, loop) {\n  let next = current + 1;\n  if (loop && next >= max) next = 0;\n  return next;\n}\n\nfunction getPrevIndex(current, max, loop) {\n  let next = current - 1;\n  if (loop && next < 0) next = max;\n  return next;\n}\n\nvar useSafeLayoutEffect = typeof window !== \"undefined\" ? useLayoutEffect : useEffect;\n\nvar cast = value => value;\n\nexport { __publicField, sortNodes, isElement, getNextIndex, getPrevIndex, useSafeLayoutEffect, cast };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/descendant/src/utils.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAAS,SAAT,EAAoB,eAApB,QAA2C,OAA3C;;AAMO,SAAS,SAAT,CAAmB,KAAnB,EAAkC;AACvC,SAAO,KAAA,CAAM,IAAN,CAAW,CAAC,CAAD,EAAI,CAAJ,KAAU;AAC1B,UAAM,OAAA,GAAU,CAAA,CAAE,uBAAF,CAA0B,CAA1B,CAAhB;;AAEA,QACE,OAAA,GAAU,IAAA,CAAK,2BAAf,IACA,OAAA,GAAU,IAAA,CAAK,8BAFjB,EAGE;AAEA,aAAO,CAAA,CAAP;AACF;;AAEA,QACE,OAAA,GAAU,IAAA,CAAK,2BAAf,IACA,OAAA,GAAU,IAAA,CAAK,0BAFjB,EAGE;AAEA,aAAO,CAAP;AACF;;AAEA,QACE,OAAA,GAAU,IAAA,CAAK,8BAAf,IACA,OAAA,GAAU,IAAA,CAAK,yCAFjB,EAGE;AACA,YAAM,KAAA,CAAM,8BAAN,CAAN;AACF,KALA,MAKO;AACL,aAAO,CAAP;AACF;AACD,GA3BM,CAAP;AA4BF;;AAEO,IAAM,SAAA,GAAa,EAAD,IACvB,OAAO,EAAP,IAAa,QAAb,IAAyB,cAAc,EAAvC,IAA6C,EAAA,CAAG,QAAH,KAAgB,IAAA,CAAK,YAD7D;;AAGA,SAAS,YAAT,CAAsB,OAAtB,EAAuC,GAAvC,EAAoD,IAApD,EAAmE;AACxE,MAAI,IAAA,GAAO,OAAA,GAAU,CAArB;AACA,MAAI,IAAA,IAAQ,IAAA,IAAQ,GAApB,EAAyB,IAAA,GAAO,CAAP;AACzB,SAAO,IAAP;AACF;;AAEO,SAAS,YAAT,CAAsB,OAAtB,EAAuC,GAAvC,EAAoD,IAApD,EAAmE;AACxE,MAAI,IAAA,GAAO,OAAA,GAAU,CAArB;AACA,MAAI,IAAA,IAAQ,IAAA,GAAO,CAAnB,EAAsB,IAAA,GAAO,GAAP;AACtB,SAAO,IAAP;AACF;;AAEO,IAAM,mBAAA,GACX,OAAO,MAAP,KAAkB,WAAlB,GAAgC,eAAhC,GAAkD,SAD7C;;AAGA,IAAM,IAAA,GAAW,KAAJ,IAAmB,KAAhC","sourcesContent":["import { useEffect, useLayoutEffect } from \"react\"\n\n/**\n * Sort an array of DOM nodes according to the HTML tree order\n * @see http://www.w3.org/TR/html5/infrastructure.html#tree-order\n */\nexport function sortNodes(nodes: Node[]) {\n  return nodes.sort((a, b) => {\n    const compare = a.compareDocumentPosition(b)\n\n    if (\n      compare & Node.DOCUMENT_POSITION_FOLLOWING ||\n      compare & Node.DOCUMENT_POSITION_CONTAINED_BY\n    ) {\n      // a < b\n      return -1\n    }\n\n    if (\n      compare & Node.DOCUMENT_POSITION_PRECEDING ||\n      compare & Node.DOCUMENT_POSITION_CONTAINS\n    ) {\n      // a > b\n      return 1\n    }\n\n    if (\n      compare & Node.DOCUMENT_POSITION_DISCONNECTED ||\n      compare & Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\n    ) {\n      throw Error(\"Cannot sort the given nodes.\")\n    } else {\n      return 0\n    }\n  })\n}\n\nexport const isElement = (el: any): el is HTMLElement =>\n  typeof el == \"object\" && \"nodeType\" in el && el.nodeType === Node.ELEMENT_NODE\n\nexport function getNextIndex(current: number, max: number, loop: boolean) {\n  let next = current + 1\n  if (loop && next >= max) next = 0\n  return next\n}\n\nexport function getPrevIndex(current: number, max: number, loop: boolean) {\n  let next = current - 1\n  if (loop && next < 0) next = max\n  return next\n}\n\nexport const useSafeLayoutEffect =\n  typeof window !== \"undefined\" ? useLayoutEffect : useEffect\n\nexport const cast = <T>(value: any) => value as T\n"]},"metadata":{},"sourceType":"module"}