{"ast":null,"code":"import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\nconst numberValueTypes = {\n  // Border props\n  borderWidth: px,\n  borderTopWidth: px,\n  borderRightWidth: px,\n  borderBottomWidth: px,\n  borderLeftWidth: px,\n  borderRadius: px,\n  radius: px,\n  borderTopLeftRadius: px,\n  borderTopRightRadius: px,\n  borderBottomRightRadius: px,\n  borderBottomLeftRadius: px,\n  // Positioning props\n  width: px,\n  maxWidth: px,\n  height: px,\n  maxHeight: px,\n  size: px,\n  top: px,\n  right: px,\n  bottom: px,\n  left: px,\n  // Spacing props\n  padding: px,\n  paddingTop: px,\n  paddingRight: px,\n  paddingBottom: px,\n  paddingLeft: px,\n  margin: px,\n  marginTop: px,\n  marginRight: px,\n  marginBottom: px,\n  marginLeft: px,\n  // Transform props\n  rotate: degrees,\n  rotateX: degrees,\n  rotateY: degrees,\n  rotateZ: degrees,\n  scale,\n  scaleX: scale,\n  scaleY: scale,\n  scaleZ: scale,\n  skew: degrees,\n  skewX: degrees,\n  skewY: degrees,\n  distance: px,\n  translateX: px,\n  translateY: px,\n  translateZ: px,\n  x: px,\n  y: px,\n  z: px,\n  perspective: px,\n  transformPerspective: px,\n  opacity: alpha,\n  originX: progressPercentage,\n  originY: progressPercentage,\n  originZ: px,\n  // Misc\n  zIndex: int,\n  backgroundPositionX: px,\n  backgroundPositionY: px,\n  // SVG\n  fillOpacity: alpha,\n  strokeOpacity: alpha,\n  numOctaves: int\n};\nexport { numberValueTypes };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs"],"names":["scale","alpha","px","degrees","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","x","y","z","perspective","transformPerspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,KAAhB,QAA6B,wCAA7B;AACA,SAASC,EAAT,EAAaC,OAAb,EAAsBC,kBAAtB,QAAgD,wCAAhD;AACA,SAASC,GAAT,QAAoB,gBAApB;AAEA,MAAMC,gBAAgB,GAAG;AACrB;AACAC,EAAAA,WAAW,EAAEL,EAFQ;AAGrBM,EAAAA,cAAc,EAAEN,EAHK;AAIrBO,EAAAA,gBAAgB,EAAEP,EAJG;AAKrBQ,EAAAA,iBAAiB,EAAER,EALE;AAMrBS,EAAAA,eAAe,EAAET,EANI;AAOrBU,EAAAA,YAAY,EAAEV,EAPO;AAQrBW,EAAAA,MAAM,EAAEX,EARa;AASrBY,EAAAA,mBAAmB,EAAEZ,EATA;AAUrBa,EAAAA,oBAAoB,EAAEb,EAVD;AAWrBc,EAAAA,uBAAuB,EAAEd,EAXJ;AAYrBe,EAAAA,sBAAsB,EAAEf,EAZH;AAarB;AACAgB,EAAAA,KAAK,EAAEhB,EAdc;AAerBiB,EAAAA,QAAQ,EAAEjB,EAfW;AAgBrBkB,EAAAA,MAAM,EAAElB,EAhBa;AAiBrBmB,EAAAA,SAAS,EAAEnB,EAjBU;AAkBrBoB,EAAAA,IAAI,EAAEpB,EAlBe;AAmBrBqB,EAAAA,GAAG,EAAErB,EAnBgB;AAoBrBsB,EAAAA,KAAK,EAAEtB,EApBc;AAqBrBuB,EAAAA,MAAM,EAAEvB,EArBa;AAsBrBwB,EAAAA,IAAI,EAAExB,EAtBe;AAuBrB;AACAyB,EAAAA,OAAO,EAAEzB,EAxBY;AAyBrB0B,EAAAA,UAAU,EAAE1B,EAzBS;AA0BrB2B,EAAAA,YAAY,EAAE3B,EA1BO;AA2BrB4B,EAAAA,aAAa,EAAE5B,EA3BM;AA4BrB6B,EAAAA,WAAW,EAAE7B,EA5BQ;AA6BrB8B,EAAAA,MAAM,EAAE9B,EA7Ba;AA8BrB+B,EAAAA,SAAS,EAAE/B,EA9BU;AA+BrBgC,EAAAA,WAAW,EAAEhC,EA/BQ;AAgCrBiC,EAAAA,YAAY,EAAEjC,EAhCO;AAiCrBkC,EAAAA,UAAU,EAAElC,EAjCS;AAkCrB;AACAmC,EAAAA,MAAM,EAAElC,OAnCa;AAoCrBmC,EAAAA,OAAO,EAAEnC,OApCY;AAqCrBoC,EAAAA,OAAO,EAAEpC,OArCY;AAsCrBqC,EAAAA,OAAO,EAAErC,OAtCY;AAuCrBH,EAAAA,KAvCqB;AAwCrByC,EAAAA,MAAM,EAAEzC,KAxCa;AAyCrB0C,EAAAA,MAAM,EAAE1C,KAzCa;AA0CrB2C,EAAAA,MAAM,EAAE3C,KA1Ca;AA2CrB4C,EAAAA,IAAI,EAAEzC,OA3Ce;AA4CrB0C,EAAAA,KAAK,EAAE1C,OA5Cc;AA6CrB2C,EAAAA,KAAK,EAAE3C,OA7Cc;AA8CrB4C,EAAAA,QAAQ,EAAE7C,EA9CW;AA+CrB8C,EAAAA,UAAU,EAAE9C,EA/CS;AAgDrB+C,EAAAA,UAAU,EAAE/C,EAhDS;AAiDrBgD,EAAAA,UAAU,EAAEhD,EAjDS;AAkDrBiD,EAAAA,CAAC,EAAEjD,EAlDkB;AAmDrBkD,EAAAA,CAAC,EAAElD,EAnDkB;AAoDrBmD,EAAAA,CAAC,EAAEnD,EApDkB;AAqDrBoD,EAAAA,WAAW,EAAEpD,EArDQ;AAsDrBqD,EAAAA,oBAAoB,EAAErD,EAtDD;AAuDrBsD,EAAAA,OAAO,EAAEvD,KAvDY;AAwDrBwD,EAAAA,OAAO,EAAErD,kBAxDY;AAyDrBsD,EAAAA,OAAO,EAAEtD,kBAzDY;AA0DrBuD,EAAAA,OAAO,EAAEzD,EA1DY;AA2DrB;AACA0D,EAAAA,MAAM,EAAEvD,GA5Da;AA6DrBwD,EAAAA,mBAAmB,EAAE3D,EA7DA;AA8DrB4D,EAAAA,mBAAmB,EAAE5D,EA9DA;AA+DrB;AACA6D,EAAAA,WAAW,EAAE9D,KAhEQ;AAiErB+D,EAAAA,aAAa,EAAE/D,KAjEM;AAkErBgE,EAAAA,UAAU,EAAE5D;AAlES,CAAzB;AAqEA,SAASC,gBAAT","sourcesContent":["import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n"]},"metadata":{},"sourceType":"module"}