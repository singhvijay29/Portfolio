{"ast":null,"code":"'use client';\n\nimport { __publicField, getNextIndex, getPrevIndex, isElement, sortNodes } from \"./chunk-3A5YOZDU.mjs\"; // src/descendant.ts\n\nvar DescendantsManager = class {\n  constructor() {\n    var _this = this;\n\n    __publicField(this, \"descendants\", /* @__PURE__ */new Map());\n\n    __publicField(this, \"register\", nodeOrOptions => {\n      if (nodeOrOptions == null) return;\n\n      if (isElement(nodeOrOptions)) {\n        return this.registerNode(nodeOrOptions);\n      }\n\n      return node => {\n        this.registerNode(node, nodeOrOptions);\n      };\n    });\n\n    __publicField(this, \"unregister\", node => {\n      this.descendants.delete(node);\n      const sorted = sortNodes(Array.from(this.descendants.keys()));\n      this.assignIndex(sorted);\n    });\n\n    __publicField(this, \"destroy\", () => {\n      this.descendants.clear();\n    });\n\n    __publicField(this, \"assignIndex\", descendants => {\n      this.descendants.forEach(descendant => {\n        const index = descendants.indexOf(descendant.node);\n        descendant.index = index;\n        descendant.node.dataset[\"index\"] = descendant.index.toString();\n      });\n    });\n\n    __publicField(this, \"count\", () => this.descendants.size);\n\n    __publicField(this, \"enabledCount\", () => this.enabledValues().length);\n\n    __publicField(this, \"values\", () => {\n      const values = Array.from(this.descendants.values());\n      return values.sort((a, b) => a.index - b.index);\n    });\n\n    __publicField(this, \"enabledValues\", () => {\n      return this.values().filter(descendant => !descendant.disabled);\n    });\n\n    __publicField(this, \"item\", index => {\n      if (this.count() === 0) return void 0;\n      return this.values()[index];\n    });\n\n    __publicField(this, \"enabledItem\", index => {\n      if (this.enabledCount() === 0) return void 0;\n      return this.enabledValues()[index];\n    });\n\n    __publicField(this, \"first\", () => this.item(0));\n\n    __publicField(this, \"firstEnabled\", () => this.enabledItem(0));\n\n    __publicField(this, \"last\", () => this.item(this.descendants.size - 1));\n\n    __publicField(this, \"lastEnabled\", () => {\n      const lastIndex = this.enabledValues().length - 1;\n      return this.enabledItem(lastIndex);\n    });\n\n    __publicField(this, \"indexOf\", node => {\n      var _a, _b;\n\n      if (!node) return -1;\n      return (_b = (_a = this.descendants.get(node)) == null ? void 0 : _a.index) != null ? _b : -1;\n    });\n\n    __publicField(this, \"enabledIndexOf\", node => {\n      if (node == null) return -1;\n      return this.enabledValues().findIndex(i => i.node.isSameNode(node));\n    });\n\n    __publicField(this, \"next\", function (index) {\n      let loop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      const next = getNextIndex(index, _this.count(), loop);\n      return _this.item(next);\n    });\n\n    __publicField(this, \"nextEnabled\", function (index) {\n      let loop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      const item = _this.item(index);\n\n      if (!item) return;\n\n      const enabledIndex = _this.enabledIndexOf(item.node);\n\n      const nextEnabledIndex = getNextIndex(enabledIndex, _this.enabledCount(), loop);\n      return _this.enabledItem(nextEnabledIndex);\n    });\n\n    __publicField(this, \"prev\", function (index) {\n      let loop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      const prev = getPrevIndex(index, _this.count() - 1, loop);\n      return _this.item(prev);\n    });\n\n    __publicField(this, \"prevEnabled\", function (index) {\n      let loop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      const item = _this.item(index);\n\n      if (!item) return;\n\n      const enabledIndex = _this.enabledIndexOf(item.node);\n\n      const prevEnabledIndex = getPrevIndex(enabledIndex, _this.enabledCount() - 1, loop);\n      return _this.enabledItem(prevEnabledIndex);\n    });\n\n    __publicField(this, \"registerNode\", (node, options) => {\n      if (!node || this.descendants.has(node)) return;\n      const keys = Array.from(this.descendants.keys()).concat(node);\n      const sorted = sortNodes(keys);\n\n      if (options == null ? void 0 : options.disabled) {\n        options.disabled = !!options.disabled;\n      }\n\n      const descendant = {\n        node,\n        index: -1,\n        ...options\n      };\n      this.descendants.set(node, descendant);\n      this.assignIndex(sorted);\n    });\n  }\n\n};\nexport { DescendantsManager };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/descendant/src/descendant.ts"],"names":[],"mappings":"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","sourcesContent":["import { sortNodes, isElement, getNextIndex, getPrevIndex } from \"./utils\"\n\nexport type DescendantOptions<T = {}> = T & {\n  /**\n   * If `true`, the item will be registered in all nodes map\n   * but omitted from enabled nodes map\n   */\n  disabled?: boolean\n  /**\n   * The id of the item\n   */\n  id?: string\n}\n\nexport type Descendant<T, K> = DescendantOptions<K> & {\n  /**\n   * DOM element of the item\n   */\n  node: T\n  /**\n   * index of item in all nodes map and enabled nodes map\n   */\n  index: number\n}\n\n/**\n * @internal\n *\n * Class to manage descendants and their relative indices in the DOM.\n * It uses `node.compareDocumentPosition(...)` under the hood\n */\nexport class DescendantsManager<\n  T extends HTMLElement,\n  K extends Record<string, any> = {},\n> {\n  private descendants = new Map<T, Descendant<T, K>>()\n\n  register = (nodeOrOptions: T | null | DescendantOptions<K>) => {\n    if (nodeOrOptions == null) return\n\n    if (isElement(nodeOrOptions)) {\n      return this.registerNode(nodeOrOptions)\n    }\n\n    return (node: T | null) => {\n      this.registerNode(node, nodeOrOptions)\n    }\n  }\n\n  unregister = (node: T) => {\n    this.descendants.delete(node)\n    const sorted = sortNodes(Array.from(this.descendants.keys()))\n    this.assignIndex(sorted)\n  }\n\n  destroy = () => {\n    this.descendants.clear()\n  }\n\n  private assignIndex = (descendants: Node[]) => {\n    this.descendants.forEach((descendant) => {\n      const index = descendants.indexOf(descendant.node)\n      descendant.index = index\n      descendant.node.dataset[\"index\"] = descendant.index.toString()\n    })\n  }\n\n  count = () => this.descendants.size\n\n  enabledCount = () => this.enabledValues().length\n\n  values = () => {\n    const values = Array.from(this.descendants.values())\n    return values.sort((a, b) => a.index - b.index)\n  }\n\n  enabledValues = () => {\n    return this.values().filter((descendant) => !descendant.disabled)\n  }\n\n  item = (index: number) => {\n    if (this.count() === 0) return undefined\n    return this.values()[index]\n  }\n\n  enabledItem = (index: number) => {\n    if (this.enabledCount() === 0) return undefined\n    return this.enabledValues()[index]\n  }\n\n  first = () => this.item(0)\n\n  firstEnabled = () => this.enabledItem(0)\n\n  last = () => this.item(this.descendants.size - 1)\n\n  lastEnabled = () => {\n    const lastIndex = this.enabledValues().length - 1\n    return this.enabledItem(lastIndex)\n  }\n\n  indexOf = (node: T | null) => {\n    if (!node) return -1\n    return this.descendants.get(node)?.index ?? -1\n  }\n\n  enabledIndexOf = (node: T | null) => {\n    if (node == null) return -1\n    return this.enabledValues().findIndex((i) => i.node.isSameNode(node))\n  }\n\n  next = (index: number, loop = true) => {\n    const next = getNextIndex(index, this.count(), loop)\n    return this.item(next)\n  }\n\n  nextEnabled = (index: number, loop = true) => {\n    const item = this.item(index)\n    if (!item) return\n    const enabledIndex = this.enabledIndexOf(item.node)\n    const nextEnabledIndex = getNextIndex(\n      enabledIndex,\n      this.enabledCount(),\n      loop,\n    )\n    return this.enabledItem(nextEnabledIndex)\n  }\n\n  prev = (index: number, loop = true) => {\n    const prev = getPrevIndex(index, this.count() - 1, loop)\n    return this.item(prev)\n  }\n\n  prevEnabled = (index: number, loop = true) => {\n    const item = this.item(index)\n    if (!item) return\n    const enabledIndex = this.enabledIndexOf(item.node)\n    const prevEnabledIndex = getPrevIndex(\n      enabledIndex,\n      this.enabledCount() - 1,\n      loop,\n    )\n    return this.enabledItem(prevEnabledIndex)\n  }\n\n  private registerNode = (node: T | null, options?: DescendantOptions<K>) => {\n    if (!node || this.descendants.has(node)) return\n\n    const keys = Array.from(this.descendants.keys()).concat(node)\n    const sorted = sortNodes(keys)\n\n    if (options?.disabled) {\n      options.disabled = !!options.disabled\n    }\n\n    const descendant = { node, index: -1, ...options }\n\n    this.descendants.set(node, descendant as Descendant<T, K>)\n\n    this.assignIndex(sorted)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}