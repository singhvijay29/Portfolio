{"ast":null,"code":"'use client'; // src/use-button-type.tsx\n\nimport { useCallback, useState } from \"react\";\n\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback(node => {\n    if (!node) return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return {\n    ref: refCallback,\n    type\n  };\n}\n\nexport { useButtonType };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/button/src/use-button-type.tsx"],"names":[],"mappings":";;AAAA,SAAS,WAAT,EAAsB,QAAtB,QAAsC,OAAtC;;AAEO,SAAS,aAAT,CAAuB,KAAvB,EAAkD;AACvD,QAAM,CAAC,QAAD,EAAW,WAAX,IAA0B,QAAA,CAAS,CAAC,KAAV,CAAhC;AACA,QAAM,WAAA,GAAc,WAAA,CAAa,IAAD,IAA8B;AAC5D,QAAI,CAAC,IAAL,EAAW;AACX,IAAA,WAAA,CAAY,IAAA,CAAK,OAAL,KAAiB,QAA7B,CAAA;AACF,GAHoB,EAGjB,EAHiB,CAApB;AAIA,QAAM,IAAA,GAAO,QAAA,GAAW,QAAX,GAAsB,KAAA,CAAnC;AACA,SAAO;AAAE,IAAA,GAAA,EAAK,WAAP;AAAoB,IAAA;AAApB,GAAP;AACF","sourcesContent":["import { useCallback, useState } from \"react\"\n\nexport function useButtonType(value?: React.ElementType) {\n  const [isButton, setIsButton] = useState(!value)\n  const refCallback = useCallback((node: HTMLElement | null) => {\n    if (!node) return\n    setIsButton(node.tagName === \"BUTTON\")\n  }, [])\n  const type = isButton ? \"button\" : undefined\n  return { ref: refCallback, type } as const\n}\n"]},"metadata":{},"sourceType":"module"}