{"ast":null,"code":"'use client'; // src/flex.tsx\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Flex = forwardRef(function Flex2(props, ref) {\n  const {\n    direction,\n    align,\n    justify,\n    wrap,\n    basis,\n    grow,\n    shrink,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink\n  };\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    __css: styles,\n    ...rest\n  });\n});\nFlex.displayName = \"Flex\";\nexport { Flex };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/layout/src/flex.tsx"],"names":["Flex"],"mappings":";;AAAA,SACE,MADF,EAEE,UAFF,QAKO,mBALP;AA6ES,SAAA,GAAA,QAAA,mBAAA;AAfF,IAAM,IAAA,GAAO,UAAA,CAA6B,SAASA,KAAT,CAAc,KAAd,EAAqB,GAArB,EAA0B;AACzE,QAAM;AAAE,IAAA,SAAF;AAAa,IAAA,KAAb;AAAoB,IAAA,OAApB;AAA6B,IAAA,IAA7B;AAAmC,IAAA,KAAnC;AAA0C,IAAA,IAA1C;AAAgD,IAAA,MAAhD;AAAwD,OAAG;AAA3D,MACJ,KADF;AAGA,QAAM,MAAA,GAAS;AACb,IAAA,OAAA,EAAS,MADI;AAEb,IAAA,aAAA,EAAe,SAFF;AAGb,IAAA,UAAA,EAAY,KAHC;AAIb,IAAA,cAAA,EAAgB,OAJH;AAKb,IAAA,QAAA,EAAU,IALG;AAMb,IAAA,SAAA,EAAW,KANE;AAOb,IAAA,QAAA,EAAU,IAPG;AAQb,IAAA,UAAA,EAAY;AARC,GAAf;AAWA,SAAO,eAAA,GAAA,CAAC,MAAA,CAAO,GAAR,EAAC;AAAW,IAAA,GAAX;AAAqB,IAAA,KAAA,EAAO,MAA5B;AAAqC,OAAG;AAAxC,GAAD,CAAP;AACD,CAhBmB,CAAb;AAkBP,IAAA,CAAK,WAAL,GAAmB,MAAnB","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  SystemProps,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\n\nexport interface FlexOptions {\n  /**\n   * Shorthand for `alignItems` style prop\n   * @type SystemProps[\"alignItems\"]\n   */\n  align?: SystemProps[\"alignItems\"]\n\n  /**\n   * Shorthand for `justifyContent` style prop\n   * @type SystemProps[\"justifyContent\"]\n   */\n  justify?: SystemProps[\"justifyContent\"]\n\n  /**\n   * Shorthand for `flexWrap` style prop\n   * @type SystemProps[\"flexWrap\"]\n   */\n  wrap?: SystemProps[\"flexWrap\"]\n\n  /**\n   * Shorthand for `flexDirection` style prop\n   * @type SystemProps[\"flexDirection\"]\n   * @default \"row\"\n   */\n  direction?: SystemProps[\"flexDirection\"]\n\n  /**\n   * Shorthand for `flexBasis` style prop\n   * @type SystemProps[\"flexBasis\"]\n   */\n  basis?: SystemProps[\"flexBasis\"]\n\n  /**\n   * Shorthand for `flexGrow` style prop\n   * @type SystemProps[\"flexGrow\"]\n   */\n  grow?: SystemProps[\"flexGrow\"]\n\n  /**\n   * Shorthand for `flexShrink` style prop\n   * @type SystemProps[\"flexShrink\"]\n   */\n  shrink?: SystemProps[\"flexShrink\"]\n}\n\nexport interface FlexProps extends HTMLChakraProps<\"div\">, FlexOptions {}\n\n/**\n * React component used to create flexbox layouts.\n *\n * It renders a `div` with `display: flex` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/flex\n */\nexport const Flex = forwardRef<FlexProps, \"div\">(function Flex(props, ref) {\n  const { direction, align, justify, wrap, basis, grow, shrink, ...rest } =\n    props\n\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink,\n  }\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nFlex.displayName = \"Flex\"\n"]},"metadata":{},"sourceType":"module"}