{"ast":null,"code":"'use client'; // src/slider-utils.ts\n\nfunction getIds(id) {\n  return {\n    root: `slider-root-${id}`,\n    getThumb: i => `slider-thumb-${id}-${i}`,\n    getInput: i => `slider-input-${id}-${i}`,\n    track: `slider-track-${id}`,\n    innerTrack: `slider-filled-track-${id}`,\n    getMarker: i => `slider-marker-${id}-${i}`,\n    output: `slider-output-${id}`\n  };\n}\n\nfunction orient(options) {\n  const {\n    orientation,\n    vertical,\n    horizontal\n  } = options;\n  return orientation === \"vertical\" ? vertical : horizontal;\n}\n\nvar zeroSize = {\n  width: 0,\n  height: 0\n};\n\nvar normalize = a => a || zeroSize;\n\nfunction getStyles(options) {\n  const {\n    orientation,\n    thumbPercents,\n    thumbRects,\n    isReversed\n  } = options;\n\n  const getThumbStyle = i => {\n    var _a;\n\n    const rect = (_a = thumbRects[i]) != null ? _a : zeroSize;\n    return {\n      position: \"absolute\",\n      userSelect: \"none\",\n      WebkitUserSelect: \"none\",\n      MozUserSelect: \"none\",\n      msUserSelect: \"none\",\n      touchAction: \"none\",\n      ...orient({\n        orientation,\n        vertical: {\n          bottom: `calc(${thumbPercents[i]}% - ${rect.height / 2}px)`\n        },\n        horizontal: {\n          left: `calc(${thumbPercents[i]}% - ${rect.width / 2}px)`\n        }\n      })\n    };\n  };\n\n  const size = orientation === \"vertical\" ? thumbRects.reduce((a, b) => normalize(a).height > normalize(b).height ? a : b, zeroSize) : thumbRects.reduce((a, b) => normalize(a).width > normalize(b).width ? a : b, zeroSize);\n  const rootStyle = {\n    position: \"relative\",\n    touchAction: \"none\",\n    WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n    userSelect: \"none\",\n    outline: 0,\n    ...orient({\n      orientation,\n      vertical: size ? {\n        paddingLeft: size.width / 2,\n        paddingRight: size.width / 2\n      } : {},\n      horizontal: size ? {\n        paddingTop: size.height / 2,\n        paddingBottom: size.height / 2\n      } : {}\n    })\n  };\n  const trackStyle = {\n    position: \"absolute\",\n    ...orient({\n      orientation,\n      vertical: {\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        height: \"100%\"\n      },\n      horizontal: {\n        top: \"50%\",\n        transform: \"translateY(-50%)\",\n        width: \"100%\"\n      }\n    })\n  };\n  const isSingleThumb = thumbPercents.length === 1;\n  const fallback = [0, isReversed ? 100 - thumbPercents[0] : thumbPercents[0]];\n  const range = isSingleThumb ? fallback : thumbPercents;\n  let start = range[0];\n\n  if (!isSingleThumb && isReversed) {\n    start = 100 - start;\n  }\n\n  const percent = Math.abs(range[range.length - 1] - range[0]);\n  const innerTrackStyle = { ...trackStyle,\n    ...orient({\n      orientation,\n      vertical: isReversed ? {\n        height: `${percent}%`,\n        top: `${start}%`\n      } : {\n        height: `${percent}%`,\n        bottom: `${start}%`\n      },\n      horizontal: isReversed ? {\n        width: `${percent}%`,\n        right: `${start}%`\n      } : {\n        width: `${percent}%`,\n        left: `${start}%`\n      }\n    })\n  };\n  return {\n    trackStyle,\n    innerTrackStyle,\n    rootStyle,\n    getThumbStyle\n  };\n}\n\nfunction getIsReversed(options) {\n  const {\n    isReversed,\n    direction,\n    orientation\n  } = options;\n\n  if (direction === \"ltr\" || orientation === \"vertical\") {\n    return isReversed;\n  }\n\n  return !isReversed;\n}\n\nexport { getIds, orient, getStyles, getIsReversed };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/slider/src/slider-utils.ts"],"names":[],"mappings":";;AAAO,SAAS,MAAT,CAAgB,EAAhB,EAAqC;AAC1C,SAAO;AACL,IAAA,IAAA,EAAM,eAAe,EAAA,EADhB;AAEL,IAAA,QAAA,EAAW,CAAD,IAAe,gBAAgB,EAAA,IAAM,CAAA,EAF1C;AAGL,IAAA,QAAA,EAAW,CAAD,IAAe,gBAAgB,EAAA,IAAM,CAAA,EAH1C;AAIL,IAAA,KAAA,EAAO,gBAAgB,EAAA,EAJlB;AAKL,IAAA,UAAA,EAAY,uBAAuB,EAAA,EAL9B;AAML,IAAA,SAAA,EAAY,CAAD,IAAe,iBAAiB,EAAA,IAAM,CAAA,EAN5C;AAOL,IAAA,MAAA,EAAQ,iBAAiB,EAAA;AAPpB,GAAP;AASF;;AAIO,SAAS,MAAT,CAAgB,OAAhB,EAIJ;AACD,QAAM;AAAE,IAAA,WAAF;AAAe,IAAA,QAAf;AAAyB,IAAA;AAAzB,MAAwC,OAA9C;AACA,SAAO,WAAA,KAAgB,UAAhB,GAA6B,QAA7B,GAAwC,UAA/C;AACF;;AAIA,IAAM,QAAA,GAAiB;AAAE,EAAA,KAAA,EAAO,CAAT;AAAY,EAAA,MAAA,EAAQ;AAApB,CAAvB;;AAEA,IAAM,SAAA,GAAa,CAAD,IAAyB,CAAA,IAAK,QAAhD;;AAEO,SAAS,SAAT,CAAmB,OAAnB,EAKJ;AACD,QAAM;AAAE,IAAA,WAAF;AAAe,IAAA,aAAf;AAA8B,IAAA,UAA9B;AAA0C,IAAA;AAA1C,MAAyD,OAA/D;;AAEA,QAAM,aAAA,GAAiB,CAAD,IAAoC;AArC5D,QAAA,EAAA;;AAsCI,UAAM,IAAA,GAAA,CAAO,EAAA,GAAA,UAAA,CAAW,CAAX,CAAP,KAAO,IAAP,GAAO,EAAP,GAAwB,QAA9B;AACA,WAAO;AACL,MAAA,QAAA,EAAU,UADL;AAEL,MAAA,UAAA,EAAY,MAFP;AAGL,MAAA,gBAAA,EAAkB,MAHb;AAIL,MAAA,aAAA,EAAe,MAJV;AAKL,MAAA,YAAA,EAAc,MALT;AAML,MAAA,WAAA,EAAa,MANR;AAOL,SAAG,MAAA,CAAO;AACR,QAAA,WADQ;AAER,QAAA,QAAA,EAAU;AACR,UAAA,MAAA,EAAQ,QAAQ,aAAA,CAAc,CAAd,CAAe,OAAQ,IAAA,CAAK,MAAL,GAAc,CAAA;AAD7C,SAFF;AAKR,QAAA,UAAA,EAAY;AACV,UAAA,IAAA,EAAM,QAAQ,aAAA,CAAc,CAAd,CAAe,OAAQ,IAAA,CAAK,KAAL,GAAa,CAAA;AADxC;AALJ,OAAP;AAPE,KAAP;AAiBF,GAnBA;;AAqBA,QAAM,IAAA,GACJ,WAAA,KAAgB,UAAhB,GACI,UAAA,CAAW,MAAX,CACE,CAAC,CAAD,EAAI,CAAJ,KAAW,SAAA,CAAU,CAAV,CAAA,CAAa,MAAb,GAAsB,SAAA,CAAU,CAAV,CAAA,CAAa,MAAnC,GAA4C,CAA5C,GAAgD,CAD7D,EAEE,QAFF,CADJ,GAKI,UAAA,CAAW,MAAX,CACE,CAAC,CAAD,EAAI,CAAJ,KAAW,SAAA,CAAU,CAAV,CAAA,CAAa,KAAb,GAAqB,SAAA,CAAU,CAAV,CAAA,CAAa,KAAlC,GAA0C,CAA1C,GAA8C,CAD3D,EAEE,QAFF,CANN;AAWA,QAAM,SAAA,GAAiC;AACrC,IAAA,QAAA,EAAU,UAD2B;AAErC,IAAA,WAAA,EAAa,MAFwB;AAGrC,IAAA,uBAAA,EAAyB,eAHY;AAIrC,IAAA,UAAA,EAAY,MAJyB;AAKrC,IAAA,OAAA,EAAS,CAL4B;AAMrC,OAAG,MAAA,CAAO;AACR,MAAA,WADQ;AAER,MAAA,QAAA,EAAU,IAAA,GACN;AACE,QAAA,WAAA,EAAa,IAAA,CAAK,KAAL,GAAa,CAD5B;AAEE,QAAA,YAAA,EAAc,IAAA,CAAK,KAAL,GAAa;AAF7B,OADM,GAKN,EAPI;AAQR,MAAA,UAAA,EAAY,IAAA,GACR;AACE,QAAA,UAAA,EAAY,IAAA,CAAK,MAAL,GAAc,CAD5B;AAEE,QAAA,aAAA,EAAe,IAAA,CAAK,MAAL,GAAc;AAF/B,OADQ,GAKR;AAbI,KAAP;AANkC,GAAvC;AAuBA,QAAM,UAAA,GAAkC;AACtC,IAAA,QAAA,EAAU,UAD4B;AAEtC,OAAG,MAAA,CAAO;AACR,MAAA,WADQ;AAER,MAAA,QAAA,EAAU;AACR,QAAA,IAAA,EAAM,KADE;AAER,QAAA,SAAA,EAAW,kBAFH;AAGR,QAAA,MAAA,EAAQ;AAHA,OAFF;AAOR,MAAA,UAAA,EAAY;AACV,QAAA,GAAA,EAAK,KADK;AAEV,QAAA,SAAA,EAAW,kBAFD;AAGV,QAAA,KAAA,EAAO;AAHG;AAPJ,KAAP;AAFmC,GAAxC;AAiBA,QAAM,aAAA,GAAgB,aAAA,CAAc,MAAd,KAAyB,CAA/C;AACA,QAAM,QAAA,GAAW,CAAC,CAAD,EAAI,UAAA,GAAa,MAAM,aAAA,CAAc,CAAd,CAAnB,GAAsC,aAAA,CAAc,CAAd,CAA1C,CAAjB;AACA,QAAM,KAAA,GAAQ,aAAA,GAAgB,QAAhB,GAA2B,aAAzC;AAEA,MAAI,KAAA,GAAQ,KAAA,CAAM,CAAN,CAAZ;;AACA,MAAI,CAAC,aAAD,IAAkB,UAAtB,EAAkC;AAChC,IAAA,KAAA,GAAQ,MAAM,KAAd;AACF;;AACA,QAAM,OAAA,GAAU,IAAA,CAAK,GAAL,CAAS,KAAA,CAAM,KAAA,CAAM,MAAN,GAAe,CAArB,CAAA,GAA0B,KAAA,CAAM,CAAN,CAAnC,CAAhB;AAEA,QAAM,eAAA,GAAuC,EAC3C,GAAG,UADwC;AAE3C,OAAG,MAAA,CAAO;AACR,MAAA,WADQ;AAER,MAAA,QAAA,EAAU,UAAA,GACN;AAAE,QAAA,MAAA,EAAQ,GAAG,OAAA,GAAb;AAAyB,QAAA,GAAA,EAAK,GAAG,KAAA;AAAjC,OADM,GAEN;AAAE,QAAA,MAAA,EAAQ,GAAG,OAAA,GAAb;AAAyB,QAAA,MAAA,EAAQ,GAAG,KAAA;AAApC,OAJI;AAKR,MAAA,UAAA,EAAY,UAAA,GACR;AAAE,QAAA,KAAA,EAAO,GAAG,OAAA,GAAZ;AAAwB,QAAA,KAAA,EAAO,GAAG,KAAA;AAAlC,OADQ,GAER;AAAE,QAAA,KAAA,EAAO,GAAG,OAAA,GAAZ;AAAwB,QAAA,IAAA,EAAM,GAAG,KAAA;AAAjC;AAPI,KAAP;AAFwC,GAA7C;AAaA,SAAO;AAAE,IAAA,UAAF;AAAc,IAAA,eAAd;AAA+B,IAAA,SAA/B;AAA0C,IAAA;AAA1C,GAAP;AACF;;AAEO,SAAS,aAAT,CAAuB,OAAvB,EAIJ;AACD,QAAM;AAAE,IAAA,UAAF;AAAc,IAAA,SAAd;AAAyB,IAAA;AAAzB,MAAyC,OAA/C;;AAEA,MAAI,SAAA,KAAc,KAAd,IAAuB,WAAA,KAAgB,UAA3C,EAAuD;AACrD,WAAO,UAAP;AACF;;AAGA,SAAO,CAAC,UAAR;AACF","sourcesContent":["export function getIds(id: string | number) {\n  return {\n    root: `slider-root-${id}`,\n    getThumb: (i: number) => `slider-thumb-${id}-${i}`,\n    getInput: (i: number) => `slider-input-${id}-${i}`,\n    track: `slider-track-${id}`,\n    innerTrack: `slider-filled-track-${id}`,\n    getMarker: (i: number) => `slider-marker-${id}-${i}`,\n    output: `slider-output-${id}`,\n  }\n}\n\ntype Orientation = \"vertical\" | \"horizontal\"\n\nexport function orient(options: {\n  orientation: Orientation\n  vertical: React.CSSProperties\n  horizontal: React.CSSProperties\n}) {\n  const { orientation, vertical, horizontal } = options\n  return orientation === \"vertical\" ? vertical : horizontal\n}\n\ntype Size = { height: number; width: number }\n\nconst zeroSize: Size = { width: 0, height: 0 }\n\nconst normalize = (a: Size | undefined) => a || zeroSize\n\nexport function getStyles(options: {\n  orientation: Orientation\n  thumbPercents: number[]\n  thumbRects: Array<Size | undefined>\n  isReversed?: boolean\n}) {\n  const { orientation, thumbPercents, thumbRects, isReversed } = options\n\n  const getThumbStyle = (i: number): React.CSSProperties => {\n    const rect = thumbRects[i] ?? zeroSize\n    return {\n      position: \"absolute\",\n      userSelect: \"none\",\n      WebkitUserSelect: \"none\",\n      MozUserSelect: \"none\",\n      msUserSelect: \"none\",\n      touchAction: \"none\",\n      ...orient({\n        orientation,\n        vertical: {\n          bottom: `calc(${thumbPercents[i]}% - ${rect.height / 2}px)`,\n        },\n        horizontal: {\n          left: `calc(${thumbPercents[i]}% - ${rect.width / 2}px)`,\n        },\n      }),\n    }\n  }\n\n  const size =\n    orientation === \"vertical\"\n      ? thumbRects.reduce(\n          (a, b) => (normalize(a).height > normalize(b).height ? a : b),\n          zeroSize,\n        )\n      : thumbRects.reduce(\n          (a, b) => (normalize(a).width > normalize(b).width ? a : b),\n          zeroSize,\n        )\n\n  const rootStyle: React.CSSProperties = {\n    position: \"relative\",\n    touchAction: \"none\",\n    WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n    userSelect: \"none\",\n    outline: 0,\n    ...orient({\n      orientation,\n      vertical: size\n        ? {\n            paddingLeft: size.width / 2,\n            paddingRight: size.width / 2,\n          }\n        : {},\n      horizontal: size\n        ? {\n            paddingTop: size.height / 2,\n            paddingBottom: size.height / 2,\n          }\n        : {},\n    }),\n  }\n\n  const trackStyle: React.CSSProperties = {\n    position: \"absolute\",\n    ...orient({\n      orientation,\n      vertical: {\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        height: \"100%\",\n      },\n      horizontal: {\n        top: \"50%\",\n        transform: \"translateY(-50%)\",\n        width: \"100%\",\n      },\n    }),\n  }\n\n  const isSingleThumb = thumbPercents.length === 1\n  const fallback = [0, isReversed ? 100 - thumbPercents[0] : thumbPercents[0]]\n  const range = isSingleThumb ? fallback : thumbPercents\n\n  let start = range[0]\n  if (!isSingleThumb && isReversed) {\n    start = 100 - start\n  }\n  const percent = Math.abs(range[range.length - 1] - range[0])\n\n  const innerTrackStyle: React.CSSProperties = {\n    ...trackStyle,\n    ...orient({\n      orientation,\n      vertical: isReversed\n        ? { height: `${percent}%`, top: `${start}%` }\n        : { height: `${percent}%`, bottom: `${start}%` },\n      horizontal: isReversed\n        ? { width: `${percent}%`, right: `${start}%` }\n        : { width: `${percent}%`, left: `${start}%` },\n    }),\n  }\n\n  return { trackStyle, innerTrackStyle, rootStyle, getThumbStyle }\n}\n\nexport function getIsReversed(options: {\n  isReversed?: boolean\n  direction: \"ltr\" | \"rtl\"\n  orientation?: \"horizontal\" | \"vertical\"\n}) {\n  const { isReversed, direction, orientation } = options\n\n  if (direction === \"ltr\" || orientation === \"vertical\") {\n    return isReversed\n  }\n  // only flip for horizontal RTL\n  // if isReserved 🔜  otherwise  🔚\n  return !isReversed\n}\n"]},"metadata":{},"sourceType":"module"}