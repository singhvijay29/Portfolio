{"ast":null,"code":"'use client';\n\nimport { useInputGroupStyles } from \"./chunk-FKYN3ZGE.mjs\"; // src/input-addon.tsx\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar placements = {\n  left: {\n    marginEnd: \"-1px\",\n    borderEndRadius: 0,\n    borderEndColor: \"transparent\"\n  },\n  right: {\n    marginStart: \"-1px\",\n    borderStartRadius: 0,\n    borderStartColor: \"transparent\"\n  }\n};\nvar StyledAddon = chakra(\"div\", {\n  baseStyle: {\n    flex: \"0 0 auto\",\n    width: \"auto\",\n    display: \"flex\",\n    alignItems: \"center\",\n    whiteSpace: \"nowrap\"\n  }\n});\nvar InputAddon = forwardRef(function InputAddon2(props, ref) {\n  var _a;\n\n  const {\n    placement = \"left\",\n    ...rest\n  } = props;\n  const placementStyles = (_a = placements[placement]) != null ? _a : {};\n  const styles = useInputGroupStyles();\n  return /* @__PURE__ */jsx(StyledAddon, {\n    ref,\n    ...rest,\n    __css: { ...styles.addon,\n      ...placementStyles\n    }\n  });\n});\nInputAddon.displayName = \"InputAddon\";\nvar InputLeftAddon = forwardRef(function InputLeftAddon2(props, ref) {\n  return /* @__PURE__ */jsx(InputAddon, {\n    ref,\n    placement: \"left\",\n    ...props,\n    className: cx(\"chakra-input__left-addon\", props.className)\n  });\n});\nInputLeftAddon.displayName = \"InputLeftAddon\";\nInputLeftAddon.id = \"InputLeftAddon\";\nvar InputRightAddon = forwardRef(function InputRightAddon2(props, ref) {\n  return /* @__PURE__ */jsx(InputAddon, {\n    ref,\n    placement: \"right\",\n    ...props,\n    className: cx(\"chakra-input__right-addon\", props.className)\n  });\n});\nInputRightAddon.displayName = \"InputRightAddon\";\nInputRightAddon.id = \"InputRightAddon\";\nexport { InputAddon, InputLeftAddon, InputRightAddon };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/input/src/input-addon.tsx"],"names":["InputAddon","InputLeftAddon","InputRightAddon"],"mappings":";;;;AAAA,SAAS,MAAT,EAAiB,UAAjB,QAAoD,mBAApD;AACA,SAAS,EAAT,QAAmB,yBAAnB;AA4CM,SAAA,GAAA,QAAA,mBAAA;AAvCN,IAAM,UAAA,GAAa;AACjB,EAAA,IAAA,EAAM;AACJ,IAAA,SAAA,EAAW,MADP;AAEJ,IAAA,eAAA,EAAiB,CAFb;AAGJ,IAAA,cAAA,EAAgB;AAHZ,GADW;AAMjB,EAAA,KAAA,EAAO;AACL,IAAA,WAAA,EAAa,MADR;AAEL,IAAA,iBAAA,EAAmB,CAFd;AAGL,IAAA,gBAAA,EAAkB;AAHb;AANU,CAAnB;AAaA,IAAM,WAAA,GAAc,MAAA,CAAO,KAAP,EAAc;AAChC,EAAA,SAAA,EAAW;AACT,IAAA,IAAA,EAAM,UADG;AAET,IAAA,KAAA,EAAO,MAFE;AAGT,IAAA,OAAA,EAAS,MAHA;AAIT,IAAA,UAAA,EAAY,QAJH;AAKT,IAAA,UAAA,EAAY;AALH;AADqB,CAAd,CAApB;AAmBO,IAAM,UAAA,GAAa,UAAA,CACxB,SAASA,WAAT,CAAoB,KAApB,EAA2B,GAA3B,EAAgC;AAvClC,MAAA,EAAA;;AAwCI,QAAM;AAAE,IAAA,SAAA,GAAY,MAAd;AAAsB,OAAG;AAAzB,MAAkC,KAAxC;AACA,QAAM,eAAA,GAAA,CAAkB,EAAA,GAAA,UAAA,CAAW,SAAX,CAAlB,KAAkB,IAAlB,GAAkB,EAAlB,GAA2C,EAAjD;AACA,QAAM,MAAA,GAAS,mBAAA,EAAf;AAEA,SACE,eAAA,GAAA,CAAC,WAAD,EAAC;AACC,IAAA,GADD;AAEE,OAAG,IAFL;AAGC,IAAA,KAAA,EAAO,EACL,GAAG,MAAA,CAAO,KADL;AAEL,SAAG;AAFE;AAHR,GAAD,CADF;AAUF,CAhBwB,CAAnB;AAmBP,UAAA,CAAW,WAAX,GAAyB,YAAzB;AASO,IAAM,cAAA,GAAiB,UAAA,CAC5B,SAASC,eAAT,CAAwB,KAAxB,EAA+B,GAA/B,EAAoC;AAClC,SACE,eAAA,GAAA,CAAC,UAAD,EAAC;AACC,IAAA,GADD;AAEC,IAAA,SAAA,EAAU,MAFX;AAGE,OAAG,KAHL;AAIC,IAAA,SAAA,EAAW,EAAA,CAAG,0BAAH,EAA+B,KAAA,CAAM,SAArC;AAJZ,GAAD,CADF;AAQF,CAV4B,CAAvB;AAaP,cAAA,CAAe,WAAf,GAA6B,gBAA7B;AAGA,cAAA,CAAe,EAAf,GAAoB,gBAApB;AASO,IAAM,eAAA,GAAkB,UAAA,CAC7B,SAASC,gBAAT,CAAyB,KAAzB,EAAgC,GAAhC,EAAqC;AACnC,SACE,eAAA,GAAA,CAAC,UAAD,EAAC;AACC,IAAA,GADD;AAEC,IAAA,SAAA,EAAU,OAFX;AAGE,OAAG,KAHL;AAIC,IAAA,SAAA,EAAW,EAAA,CAAG,2BAAH,EAAgC,KAAA,CAAM,SAAtC;AAJZ,GAAD,CADF;AAQF,CAV6B,CAAxB;AAaP,eAAA,CAAgB,WAAhB,GAA8B,iBAA9B;AAGA,eAAA,CAAgB,EAAhB,GAAqB,iBAArB","sourcesContent":["import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useInputGroupStyles } from \"./input-group\"\n\ntype Placement = \"left\" | \"right\"\n\nconst placements = {\n  left: {\n    marginEnd: \"-1px\",\n    borderEndRadius: 0,\n    borderEndColor: \"transparent\",\n  },\n  right: {\n    marginStart: \"-1px\",\n    borderStartRadius: 0,\n    borderStartColor: \"transparent\",\n  },\n}\n\nconst StyledAddon = chakra(\"div\", {\n  baseStyle: {\n    flex: \"0 0 auto\",\n    width: \"auto\",\n    display: \"flex\",\n    alignItems: \"center\",\n    whiteSpace: \"nowrap\",\n  },\n})\n\nexport interface InputAddonProps extends HTMLChakraProps<\"div\"> {\n  placement?: Placement\n}\n\n/**\n * InputAddon\n *\n * Element to append or prepend to an input\n */\nexport const InputAddon = forwardRef<InputAddonProps, \"div\">(\n  function InputAddon(props, ref) {\n    const { placement = \"left\", ...rest } = props\n    const placementStyles = placements[placement] ?? {}\n    const styles = useInputGroupStyles()\n\n    return (\n      <StyledAddon\n        ref={ref}\n        {...rest}\n        __css={{\n          ...styles.addon,\n          ...placementStyles,\n        }}\n      />\n    )\n  },\n)\n\nInputAddon.displayName = \"InputAddon\"\n\nexport type InputLeftAddonProps = InputAddonProps\n\n/**\n * InputLeftAddon\n *\n * Element to append to the left of an input\n */\nexport const InputLeftAddon = forwardRef<InputLeftAddonProps, \"div\">(\n  function InputLeftAddon(props, ref) {\n    return (\n      <InputAddon\n        ref={ref}\n        placement=\"left\"\n        {...props}\n        className={cx(\"chakra-input__left-addon\", props.className)}\n      />\n    )\n  },\n)\n\nInputLeftAddon.displayName = \"InputLeftAddon\"\n\n// This is used in `input-group.tsx`\nInputLeftAddon.id = \"InputLeftAddon\"\n\nexport type InputRightAddonProps = InputAddonProps\n\n/**\n * InputRightAddon\n *\n * Element to append to the right of an input\n */\nexport const InputRightAddon = forwardRef<InputRightAddonProps, \"div\">(\n  function InputRightAddon(props, ref) {\n    return (\n      <InputAddon\n        ref={ref}\n        placement=\"right\"\n        {...props}\n        className={cx(\"chakra-input__right-addon\", props.className)}\n      />\n    )\n  },\n)\n\nInputRightAddon.displayName = \"InputRightAddon\"\n\n// This is used in `input-group.tsx`\nInputRightAddon.id = \"InputRightAddon\"\n"]},"metadata":{},"sourceType":"module"}