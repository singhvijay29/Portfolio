{"ast":null,"code":"import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n  const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n  const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n\n  const handleEvent = (event, info) => {\n    if (event.pointerType === \"touch\" || isDragActive()) return;\n    const props = node.getProps();\n\n    if (node.animationState && props.whileHover) {\n      node.animationState.setActive(\"whileHover\", isActive);\n    }\n\n    const callback = props[callbackName];\n\n    if (callback) {\n      frame.postRender(() => callback(event, info));\n    }\n  };\n\n  return addPointerEvent(node.current, eventName, handleEvent, {\n    passive: !node.getProps()[callbackName]\n  });\n}\n\nclass HoverGesture extends Feature {\n  mount() {\n    this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n  }\n\n  unmount() {}\n\n}\n\nexport { HoverGesture };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/framer-motion/dist/es/gestures/hover.mjs"],"names":["addPointerEvent","pipe","isDragActive","Feature","frame","addHoverEvent","node","isActive","eventName","callbackName","handleEvent","event","info","pointerType","props","getProps","animationState","whileHover","setActive","callback","postRender","current","passive","HoverGesture","mount","unmount"],"mappings":"AAAA,SAASA,eAAT,QAAgC,iCAAhC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,OAAT,QAAwB,gCAAxB;AACA,SAASC,KAAT,QAAsB,wBAAtB;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,QAA7B,EAAuC;AACnC,QAAMC,SAAS,GAAGD,QAAQ,GAAG,cAAH,GAAoB,cAA9C;AACA,QAAME,YAAY,GAAGF,QAAQ,GAAG,cAAH,GAAoB,YAAjD;;AACA,QAAMG,WAAW,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACjC,QAAID,KAAK,CAACE,WAAN,KAAsB,OAAtB,IAAiCX,YAAY,EAAjD,EACI;AACJ,UAAMY,KAAK,GAAGR,IAAI,CAACS,QAAL,EAAd;;AACA,QAAIT,IAAI,CAACU,cAAL,IAAuBF,KAAK,CAACG,UAAjC,EAA6C;AACzCX,MAAAA,IAAI,CAACU,cAAL,CAAoBE,SAApB,CAA8B,YAA9B,EAA4CX,QAA5C;AACH;;AACD,UAAMY,QAAQ,GAAGL,KAAK,CAACL,YAAD,CAAtB;;AACA,QAAIU,QAAJ,EAAc;AACVf,MAAAA,KAAK,CAACgB,UAAN,CAAiB,MAAMD,QAAQ,CAACR,KAAD,EAAQC,IAAR,CAA/B;AACH;AACJ,GAXD;;AAYA,SAAOZ,eAAe,CAACM,IAAI,CAACe,OAAN,EAAeb,SAAf,EAA0BE,WAA1B,EAAuC;AACzDY,IAAAA,OAAO,EAAE,CAAChB,IAAI,CAACS,QAAL,GAAgBN,YAAhB;AAD+C,GAAvC,CAAtB;AAGH;;AACD,MAAMc,YAAN,SAA2BpB,OAA3B,CAAmC;AAC/BqB,EAAAA,KAAK,GAAG;AACJ,SAAKC,OAAL,GAAexB,IAAI,CAACI,aAAa,CAAC,KAAKC,IAAN,EAAY,IAAZ,CAAd,EAAiCD,aAAa,CAAC,KAAKC,IAAN,EAAY,KAAZ,CAA9C,CAAnB;AACH;;AACDmB,EAAAA,OAAO,GAAG,CAAG;;AAJkB;;AAOnC,SAASF,YAAT","sourcesContent":["import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n"]},"metadata":{},"sourceType":"module"}