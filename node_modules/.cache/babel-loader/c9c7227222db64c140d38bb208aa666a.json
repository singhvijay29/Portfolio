{"ast":null,"code":"'use client';\n\nimport { useAlertContext, useAlertStyles } from \"./chunk-XCES3W5V.mjs\"; // src/alert-description.tsx\n\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar AlertDescription = forwardRef(function AlertDescription2(props, ref) {\n  const styles = useAlertStyles();\n  const {\n    status\n  } = useAlertContext();\n  const descriptionStyles = {\n    display: \"inline\",\n    ...styles.description\n  };\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    \"data-status\": status,\n    ...props,\n    className: cx(\"chakra-alert__desc\", props.className),\n    __css: descriptionStyles\n  });\n});\nAlertDescription.displayName = \"AlertDescription\";\nexport { AlertDescription };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/alert/src/alert-description.tsx"],"names":["AlertDescription"],"mappings":";;;;AAAA,SAAS,EAAT,QAAmB,yBAAnB;AACA,SAGE,MAHF,EAIE,UAJF,QAKO,mBALP;AAoBM,SAAA,GAAA,QAAA,mBAAA;AAVC,IAAM,gBAAA,GAAmB,UAAA,CAC9B,SAASA,iBAAT,CAA0B,KAA1B,EAAiC,GAAjC,EAAsC;AACpC,QAAM,MAAA,GAAS,cAAA,EAAf;AACA,QAAM;AAAE,IAAA;AAAF,MAAa,eAAA,EAAnB;AACA,QAAM,iBAAA,GAAuC;AAC3C,IAAA,OAAA,EAAS,QADkC;AAE3C,OAAG,MAAA,CAAO;AAFiC,GAA7C;AAKA,SACE,eAAA,GAAA,CAAC,MAAA,CAAO,GAAR,EAAC;AACC,IAAA,GADD;AAEC,mBAAa,MAFd;AAGE,OAAG,KAHL;AAIC,IAAA,SAAA,EAAW,EAAA,CAAG,oBAAH,EAAyB,KAAA,CAAM,SAA/B,CAJZ;AAKC,IAAA,KAAA,EAAO;AALR,GAAD,CADF;AASF,CAlB8B,CAAzB;AAqBP,gBAAA,CAAiB,WAAjB,GAA+B,kBAA/B","sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  HTMLChakraProps,\n  SystemStyleObject,\n  chakra,\n  forwardRef,\n} from \"@chakra-ui/system\"\nimport { useAlertContext, useAlertStyles } from \"./alert-context\"\n\nexport interface AlertDescriptionProps extends HTMLChakraProps<\"div\"> {}\n\nexport const AlertDescription = forwardRef<AlertDescriptionProps, \"div\">(\n  function AlertDescription(props, ref) {\n    const styles = useAlertStyles()\n    const { status } = useAlertContext()\n    const descriptionStyles: SystemStyleObject = {\n      display: \"inline\",\n      ...styles.description,\n    }\n\n    return (\n      <chakra.div\n        ref={ref}\n        data-status={status}\n        {...props}\n        className={cx(\"chakra-alert__desc\", props.className)}\n        __css={descriptionStyles}\n      />\n    )\n  },\n)\n\nAlertDescription.displayName = \"AlertDescription\"\n"]},"metadata":{},"sourceType":"module"}