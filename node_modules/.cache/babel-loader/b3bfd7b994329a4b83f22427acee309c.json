{"ast":null,"code":"// src/components/badge.ts\nimport { defineCssVars, defineStyle, defineStyleConfig } from \"@chakra-ui/styled-system\";\nimport { transparentize } from \"@chakra-ui/theme-tools\";\nvar vars = defineCssVars(\"badge\", [\"bg\", \"color\", \"shadow\"]);\nvar baseStyle = defineStyle({\n  px: 1,\n  textTransform: \"uppercase\",\n  fontSize: \"xs\",\n  borderRadius: \"sm\",\n  fontWeight: \"bold\",\n  bg: vars.bg.reference,\n  color: vars.color.reference,\n  boxShadow: vars.shadow.reference\n});\nvar variantSolid = defineStyle(props => {\n  const {\n    colorScheme: c,\n    theme\n  } = props;\n  const dark = transparentize(`${c}.500`, 0.6)(theme);\n  return {\n    [vars.bg.variable]: `colors.${c}.500`,\n    [vars.color.variable]: `colors.white`,\n    _dark: {\n      [vars.bg.variable]: dark,\n      [vars.color.variable]: `colors.whiteAlpha.800`\n    }\n  };\n});\nvar variantSubtle = defineStyle(props => {\n  const {\n    colorScheme: c,\n    theme\n  } = props;\n  const darkBg = transparentize(`${c}.200`, 0.16)(theme);\n  return {\n    [vars.bg.variable]: `colors.${c}.100`,\n    [vars.color.variable]: `colors.${c}.800`,\n    _dark: {\n      [vars.bg.variable]: darkBg,\n      [vars.color.variable]: `colors.${c}.200`\n    }\n  };\n});\nvar variantOutline = defineStyle(props => {\n  const {\n    colorScheme: c,\n    theme\n  } = props;\n  const darkColor = transparentize(`${c}.200`, 0.8)(theme);\n  return {\n    [vars.color.variable]: `colors.${c}.500`,\n    _dark: {\n      [vars.color.variable]: darkColor\n    },\n    [vars.shadow.variable]: `inset 0 0 0px 1px ${vars.color.reference}`\n  };\n});\nvar variants = {\n  solid: variantSolid,\n  subtle: variantSubtle,\n  outline: variantOutline\n};\nvar badgeTheme = defineStyleConfig({\n  baseStyle,\n  variants,\n  defaultProps: {\n    variant: \"subtle\",\n    colorScheme: \"gray\"\n  }\n});\nexport { vars, badgeTheme };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/theme/src/components/badge.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  defineCssVars,\n  defineStyle,\n  defineStyleConfig,\n} from \"@chakra-ui/styled-system\"\nimport { transparentize } from \"@chakra-ui/theme-tools\"\n\nconst vars = defineCssVars(\"badge\", [\"bg\", \"color\", \"shadow\"])\n\nconst baseStyle = defineStyle({\n  px: 1,\n  textTransform: \"uppercase\",\n  fontSize: \"xs\",\n  borderRadius: \"sm\",\n  fontWeight: \"bold\",\n  bg: vars.bg.reference,\n  color: vars.color.reference,\n  boxShadow: vars.shadow.reference,\n})\n\nconst variantSolid = defineStyle((props) => {\n  const { colorScheme: c, theme } = props\n  const dark = transparentize(`${c}.500`, 0.6)(theme)\n  return {\n    [vars.bg.variable]: `colors.${c}.500`,\n    [vars.color.variable]: `colors.white`,\n    _dark: {\n      [vars.bg.variable]: dark,\n      [vars.color.variable]: `colors.whiteAlpha.800`,\n    },\n  }\n})\n\nconst variantSubtle = defineStyle((props) => {\n  const { colorScheme: c, theme } = props\n  const darkBg = transparentize(`${c}.200`, 0.16)(theme)\n  return {\n    [vars.bg.variable]: `colors.${c}.100`,\n    [vars.color.variable]: `colors.${c}.800`,\n    _dark: {\n      [vars.bg.variable]: darkBg,\n      [vars.color.variable]: `colors.${c}.200`,\n    },\n  }\n})\n\nconst variantOutline = defineStyle((props) => {\n  const { colorScheme: c, theme } = props\n  const darkColor = transparentize(`${c}.200`, 0.8)(theme)\n  return {\n    [vars.color.variable]: `colors.${c}.500`,\n    _dark: {\n      [vars.color.variable]: darkColor,\n    },\n    [vars.shadow.variable]: `inset 0 0 0px 1px ${vars.color.reference}`,\n  }\n})\n\nconst variants = {\n  solid: variantSolid,\n  subtle: variantSubtle,\n  outline: variantOutline,\n}\n\nexport const badgeTheme = defineStyleConfig({\n  baseStyle,\n  variants,\n  defaultProps: {\n    variant: \"subtle\",\n    colorScheme: \"gray\",\n  },\n})\n\nexport { vars as badgeVars }\n"]},"metadata":{},"sourceType":"module"}