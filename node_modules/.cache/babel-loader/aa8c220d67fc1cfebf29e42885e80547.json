{"ast":null,"code":"'use client';\n\nimport { usePointerEvent } from \"./chunk-ZCYNKCF5.mjs\"; // src/use-focus-on-pointerdown.ts\n\nimport { contains, detectBrowser, focus, getOwnerDocument, isActiveElement, isRefObject } from \"@chakra-ui/utils\";\n\nfunction useFocusOnPointerDown(props) {\n  const {\n    ref,\n    elements,\n    enabled\n  } = props;\n  const isSafari = detectBrowser(\"Safari\");\n\n  const doc = () => getOwnerDocument(ref.current);\n\n  usePointerEvent(doc, \"pointerdown\", event => {\n    if (!isSafari || !enabled) return;\n    const target = event.target;\n    const els = elements != null ? elements : [ref];\n    const isValidTarget = els.some(elementOrRef => {\n      const el = isRefObject(elementOrRef) ? elementOrRef.current : elementOrRef;\n      return contains(el, target);\n    });\n\n    if (!isActiveElement(target) && isValidTarget) {\n      event.preventDefault();\n      focus(target);\n    }\n  });\n}\n\nexport { useFocusOnPointerDown };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/hooks/src/use-focus-on-pointerdown.ts"],"names":[],"mappings":";;;;AAAA,SACE,QADF,EAEE,aAFF,EAGE,KAHF,EAIE,gBAJF,EAKE,eALF,EAME,WANF,QAOO,kBAPP;;AAyBO,SAAS,qBAAT,CAA+B,KAA/B,EAAgE;AACrE,QAAM;AAAE,IAAA,GAAF;AAAO,IAAA,QAAP;AAAiB,IAAA;AAAjB,MAA6B,KAAnC;AAEA,QAAM,QAAA,GAAW,aAAA,CAAc,QAAd,CAAjB;;AACA,QAAM,GAAA,GAAM,MAAM,gBAAA,CAAiB,GAAA,CAAI,OAArB,CAAlB;;AAEA,EAAA,eAAA,CAAgB,GAAhB,EAAqB,aAArB,EAAqC,KAAD,IAAW;AAC7C,QAAI,CAAC,QAAD,IAAa,CAAC,OAAlB,EAA2B;AAC3B,UAAM,MAAA,GAAS,KAAA,CAAM,MAArB;AAEA,UAAM,GAAA,GAAM,QAAA,IAAA,IAAA,GAAA,QAAA,GAAY,CAAC,GAAD,CAAxB;AACA,UAAM,aAAA,GAAgB,GAAA,CAAI,IAAJ,CAAU,YAAD,IAAkB;AAC/C,YAAM,EAAA,GAAK,WAAA,CAAY,YAAZ,CAAA,GAA4B,YAAA,CAAa,OAAzC,GAAmD,YAA9D;AACA,aAAO,QAAA,CAAS,EAAT,EAAa,MAAb,CAAP;AACD,KAHqB,CAAtB;;AAKA,QAAI,CAAC,eAAA,CAAgB,MAAhB,CAAD,IAA4B,aAAhC,EAA+C;AAC7C,MAAA,KAAA,CAAM,cAAN;AACA,MAAA,KAAA,CAAM,MAAN,CAAA;AACF;AACD,GAdD,CAAA;AAeF","sourcesContent":["import {\n  contains,\n  detectBrowser,\n  focus,\n  getOwnerDocument,\n  isActiveElement,\n  isRefObject,\n} from \"@chakra-ui/utils\"\nimport { usePointerEvent } from \"./use-pointer-event\"\n\nexport interface UseFocusOnMouseDownProps {\n  enabled?: boolean\n  ref: React.RefObject<HTMLElement>\n  elements?: Array<React.RefObject<HTMLElement> | HTMLElement | null>\n}\n\n/**\n * Polyfill to get `relatedTarget` working correctly consistently\n * across all browsers.\n *\n * It ensures that elements receives focus on pointer down if\n * it's not the active element.\n *\n * @internal\n */\nexport function useFocusOnPointerDown(props: UseFocusOnMouseDownProps) {\n  const { ref, elements, enabled } = props\n\n  const isSafari = detectBrowser(\"Safari\")\n  const doc = () => getOwnerDocument(ref.current)\n\n  usePointerEvent(doc, \"pointerdown\", (event) => {\n    if (!isSafari || !enabled) return\n    const target = event.target as HTMLElement\n\n    const els = elements ?? [ref]\n    const isValidTarget = els.some((elementOrRef) => {\n      const el = isRefObject(elementOrRef) ? elementOrRef.current : elementOrRef\n      return contains(el, target)\n    })\n\n    if (!isActiveElement(target) && isValidTarget) {\n      event.preventDefault()\n      focus(target)\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}