{"ast":null,"code":"'use client';\n\nimport { useMediaQuery } from \"./chunk-57I6FYPZ.mjs\"; // src/visibility.tsx\n\nfunction Visibility(props) {\n  const {\n    breakpoint,\n    hide,\n    children,\n    ssr\n  } = props;\n  const [show] = useMediaQuery(breakpoint, {\n    ssr\n  });\n  const isVisible = hide ? !show : show;\n  const rendered = isVisible ? children : null;\n  return rendered;\n}\n\nexport { Visibility };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/media-query/src/visibility.tsx"],"names":[],"mappings":";;;;AAeO,SAAS,UAAT,CAAoB,KAApB,EAA4C;AACjD,QAAM;AAAE,IAAA,UAAF;AAAc,IAAA,IAAd;AAAoB,IAAA,QAApB;AAA8B,IAAA;AAA9B,MAAsC,KAA5C;AACA,QAAM,CAAC,IAAD,IAAS,aAAA,CAAc,UAAd,EAA0B;AAAE,IAAA;AAAF,GAA1B,CAAf;AACA,QAAM,SAAA,GAAY,IAAA,GAAO,CAAC,IAAR,GAAe,IAAjC;AAEA,QAAM,QAAA,GAAW,SAAA,GAAY,QAAZ,GAAuB,IAAxC;AACA,SAAO,QAAP;AACF","sourcesContent":["import { useMediaQuery } from \"./use-media-query\"\n\ninterface VisibilityProps {\n  ssr?: boolean\n  breakpoint: string\n  hide?: boolean\n  children: React.ReactNode\n}\n\n/**\n * Visibility\n *\n * React component to control the visibility of its\n * children based on the current breakpoint\n */\nexport function Visibility(props: VisibilityProps) {\n  const { breakpoint, hide, children, ssr } = props\n  const [show] = useMediaQuery(breakpoint, { ssr })\n  const isVisible = hide ? !show : show\n\n  const rendered = isVisible ? children : null\n  return rendered as React.ReactElement\n}\n"]},"metadata":{},"sourceType":"module"}