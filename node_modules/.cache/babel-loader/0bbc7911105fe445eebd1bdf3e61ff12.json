{"ast":null,"code":"'use client';\n\nimport { innerArrow, matchWidth, positionArrow, transformOrigin } from \"./chunk-P4KPSAOW.mjs\";\nimport { getPopperPlacement } from \"./chunk-AUJXXV3B.mjs\";\nimport { cssVars, getEventListenerOptions } from \"./chunk-6WT2JRWX.mjs\"; // src/use-popper.ts\n\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { createPopper } from \"@popperjs/core\";\nimport { useCallback, useEffect, useRef } from \"react\";\n\nfunction usePopper() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    enabled = true,\n    modifiers,\n    placement: placementProp = \"bottom\",\n    strategy = \"absolute\",\n    arrowPadding = 8,\n    eventListeners = true,\n    offset,\n    gutter = 8,\n    flip = true,\n    boundary = \"clippingParents\",\n    preventOverflow = true,\n    matchWidth: matchWidth2,\n    direction = \"ltr\"\n  } = props;\n  const reference = useRef(null);\n  const popper = useRef(null);\n  const instance = useRef(null);\n  const placement = getPopperPlacement(placementProp, direction);\n  const cleanup = useRef(() => {});\n  const setupPopper = useCallback(() => {\n    var _a;\n\n    if (!enabled || !reference.current || !popper.current) return;\n    (_a = cleanup.current) == null ? void 0 : _a.call(cleanup);\n    instance.current = createPopper(reference.current, popper.current, {\n      placement,\n      modifiers: [innerArrow, positionArrow, transformOrigin, { ...matchWidth,\n        enabled: !!matchWidth2\n      }, {\n        name: \"eventListeners\",\n        ...getEventListenerOptions(eventListeners)\n      }, {\n        name: \"arrow\",\n        options: {\n          padding: arrowPadding\n        }\n      }, {\n        name: \"offset\",\n        options: {\n          offset: offset != null ? offset : [0, gutter]\n        }\n      }, {\n        name: \"flip\",\n        enabled: !!flip,\n        options: {\n          padding: 8\n        }\n      }, {\n        name: \"preventOverflow\",\n        enabled: !!preventOverflow,\n        options: {\n          boundary\n        }\n      }, // allow users override internal modifiers\n      ...(modifiers != null ? modifiers : [])],\n      strategy\n    });\n    instance.current.forceUpdate();\n    cleanup.current = instance.current.destroy;\n  }, [placement, enabled, modifiers, matchWidth2, eventListeners, arrowPadding, offset, gutter, flip, preventOverflow, boundary, strategy]);\n  useEffect(() => {\n    return () => {\n      var _a;\n\n      if (!reference.current && !popper.current) {\n        (_a = instance.current) == null ? void 0 : _a.destroy();\n        instance.current = null;\n      }\n    };\n  }, []);\n  const referenceRef = useCallback(node => {\n    reference.current = node;\n    setupPopper();\n  }, [setupPopper]);\n  const getReferenceProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return { ...props2,\n      ref: mergeRefs(referenceRef, ref)\n    };\n  }, [referenceRef]);\n  const popperRef = useCallback(node => {\n    popper.current = node;\n    setupPopper();\n  }, [setupPopper]);\n  const getPopperProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return { ...props2,\n      ref: mergeRefs(popperRef, ref),\n      style: { ...props2.style,\n        position: strategy,\n        minWidth: matchWidth2 ? void 0 : \"max-content\",\n        inset: \"0 auto auto 0\"\n      }\n    };\n  }, [strategy, popperRef, matchWidth2]);\n  const getArrowProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    const {\n      size,\n      shadowColor,\n      bg,\n      style,\n      ...rest\n    } = props2;\n    return { ...rest,\n      ref,\n      \"data-popper-arrow\": \"\",\n      style: getArrowStyle(props2)\n    };\n  }, []);\n  const getArrowInnerProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return { ...props2,\n      ref,\n      \"data-popper-arrow-inner\": \"\"\n    };\n  }, []);\n  return {\n    update() {\n      var _a;\n\n      (_a = instance.current) == null ? void 0 : _a.update();\n    },\n\n    forceUpdate() {\n      var _a;\n\n      (_a = instance.current) == null ? void 0 : _a.forceUpdate();\n    },\n\n    transformOrigin: cssVars.transformOrigin.varRef,\n    referenceRef,\n    popperRef,\n    getPopperProps,\n    getArrowProps,\n    getArrowInnerProps,\n    getReferenceProps\n  };\n}\n\nfunction getArrowStyle(props) {\n  const {\n    size,\n    shadowColor,\n    bg,\n    style\n  } = props;\n  const computedStyle = { ...style,\n    position: \"absolute\"\n  };\n\n  if (size) {\n    computedStyle[\"--popper-arrow-size\"] = size;\n  }\n\n  if (shadowColor) {\n    computedStyle[\"--popper-arrow-shadow-color\"] = shadowColor;\n  }\n\n  if (bg) {\n    computedStyle[\"--popper-arrow-bg\"] = bg;\n  }\n\n  return computedStyle;\n}\n\nexport { usePopper };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/popper/src/use-popper.ts"],"names":["props","matchWidth"],"mappings":"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","sourcesContent":["import { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport { PropGetter } from \"@chakra-ui/react-types\"\nimport {\n  createPopper,\n  Instance,\n  Modifier,\n  VirtualElement,\n} from \"@popperjs/core\"\nimport { useCallback, useEffect, useRef } from \"react\"\nimport * as customModifiers from \"./modifiers\"\nimport { getPopperPlacement, PlacementWithLogical } from \"./popper.placement\"\nimport { cssVars, getEventListenerOptions } from \"./utils\"\n\nexport interface UsePopperProps {\n  /**\n   * Whether the popper.js should be enabled\n   */\n  enabled?: boolean\n  /**\n   * The main and cross-axis offset to displace popper element\n   * from its reference element.\n   */\n  offset?: [number, number]\n  /**\n   * The distance or margin between the reference and popper.\n   * It is used internally to create an `offset` modifier.\n   *\n   * NB: If you define `offset` prop, it'll override the gutter.\n   * @default 8\n   */\n  gutter?: number\n  /**\n   * If `true`, will prevent the popper from being cut off and ensure\n   * it's visible within the boundary area.\n   * @default true\n   */\n  preventOverflow?: boolean\n  /**\n   * If `true`, the popper will change its placement and flip when it's\n   * about to overflow its boundary area.\n   * @default true\n   */\n  flip?: boolean\n  /**\n   * If `true`, the popper will match the width of the reference at all times.\n   * It's useful for `autocomplete`, `date-picker` and `select` patterns.\n   * @default false\n   */\n  matchWidth?: boolean\n  /**\n   * The boundary area for the popper. Used within the `preventOverflow` modifier\n   * @default \"clippingParents\"\n   */\n  boundary?: \"clippingParents\" | \"scrollParent\" | HTMLElement\n  /**\n   * If provided, determines whether the popper will reposition itself on `scroll`\n   * and `resize` of the window.\n   * @default true\n   */\n  eventListeners?: boolean | { scroll?: boolean; resize?: boolean }\n  /**\n   * The padding required to prevent the arrow from\n   * reaching the very edge of the popper.\n   * @default 8\n   */\n  arrowPadding?: number\n  /**\n   * The CSS positioning strategy to use.\n   * @default \"absolute\"\n   */\n  strategy?: \"absolute\" | \"fixed\"\n  /**\n   * The placement of the popper relative to its reference.\n   * @default \"bottom\"\n   */\n  placement?: PlacementWithLogical\n  /**\n   * Array of popper.js modifiers. Check the docs to see\n   * the list of possible modifiers you can pass.\n   *\n   * @see Docs https://popper.js.org/docs/v2/modifiers/\n   */\n  modifiers?: Array<Partial<Modifier<string, any>>>\n  /**\n   * Theme direction `ltr` or `rtl`. Popper's placement will\n   * be set accordingly\n   * @default \"ltr\"\n   */\n  direction?: \"ltr\" | \"rtl\"\n}\n\nexport type ArrowCSSVarProps = {\n  /**\n   * The size of the popover arrow.\n   * This sets the `--popper-arrow-size` css property\n   */\n  size?: string | number\n  /**\n   * The box-shadow color of the popover arrow.\n   * This sets the `--popper-arrow-shadow-color` css property\n   */\n  shadowColor?: string\n  /**\n   * The background color of the popper arrow.\n   * This sets the `--popper-arrow-bg` css property.\n   */\n  bg?: string\n}\n\nexport function usePopper(props: UsePopperProps = {}) {\n  const {\n    enabled = true,\n    modifiers,\n    placement: placementProp = \"bottom\",\n    strategy = \"absolute\",\n    arrowPadding = 8,\n    eventListeners = true,\n    offset,\n    gutter = 8,\n    flip = true,\n    boundary = \"clippingParents\",\n    preventOverflow = true,\n    matchWidth,\n    direction = \"ltr\",\n  } = props\n\n  const reference = useRef<Element | VirtualElement | null>(null)\n  const popper = useRef<HTMLElement | null>(null)\n  const instance = useRef<Instance | null>(null)\n  const placement = getPopperPlacement(placementProp, direction)\n\n  const cleanup = useRef(() => {})\n\n  const setupPopper = useCallback(() => {\n    if (!enabled || !reference.current || !popper.current) return\n\n    // If popper instance exists, destroy it, so we can create a new one\n    cleanup.current?.()\n\n    instance.current = createPopper(reference.current, popper.current, {\n      placement,\n      modifiers: [\n        customModifiers.innerArrow,\n        customModifiers.positionArrow,\n        customModifiers.transformOrigin,\n        {\n          ...customModifiers.matchWidth,\n          enabled: !!matchWidth,\n        },\n        {\n          name: \"eventListeners\",\n          ...getEventListenerOptions(eventListeners),\n        },\n        {\n          name: \"arrow\",\n          options: { padding: arrowPadding },\n        },\n        {\n          name: \"offset\",\n          options: {\n            offset: offset ?? [0, gutter],\n          },\n        },\n        {\n          name: \"flip\",\n          enabled: !!flip,\n          options: { padding: 8 },\n        },\n        {\n          name: \"preventOverflow\",\n          enabled: !!preventOverflow,\n          options: { boundary },\n        },\n        // allow users override internal modifiers\n        ...(modifiers ?? []),\n      ],\n      strategy,\n    })\n\n    // force update one-time to fix any positioning issues\n    instance.current.forceUpdate()\n\n    cleanup.current = instance.current.destroy\n  }, [\n    placement,\n    enabled,\n    modifiers,\n    matchWidth,\n    eventListeners,\n    arrowPadding,\n    offset,\n    gutter,\n    flip,\n    preventOverflow,\n    boundary,\n    strategy,\n  ])\n\n  useEffect(() => {\n    return () => {\n      /**\n       * Fast refresh might call this function and tear down the popper\n       * even if the reference still exists. This checks against that\n       */\n      if (!reference.current && !popper.current) {\n        instance.current?.destroy()\n        instance.current = null\n      }\n    }\n  }, [])\n\n  const referenceRef = useCallback(\n    <T extends Element | VirtualElement>(node: T | null) => {\n      reference.current = node\n      setupPopper()\n    },\n    [setupPopper],\n  )\n\n  const getReferenceProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref: mergeRefs(referenceRef, ref),\n    }),\n    [referenceRef],\n  )\n\n  const popperRef = useCallback(\n    <T extends HTMLElement>(node: T | null) => {\n      popper.current = node\n      setupPopper()\n    },\n    [setupPopper],\n  )\n\n  const getPopperProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref: mergeRefs(popperRef, ref),\n      style: {\n        ...props.style,\n        position: strategy,\n        minWidth: matchWidth ? undefined : \"max-content\",\n        inset: \"0 auto auto 0\",\n      },\n    }),\n    [strategy, popperRef, matchWidth],\n  )\n\n  const getArrowProps: PropGetter = useCallback((props = {}, ref = null) => {\n    const { size, shadowColor, bg, style, ...rest } = props\n    return {\n      ...rest,\n      ref,\n      \"data-popper-arrow\": \"\",\n      style: getArrowStyle(props),\n    }\n  }, [])\n\n  const getArrowInnerProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref,\n      \"data-popper-arrow-inner\": \"\",\n    }),\n    [],\n  )\n\n  return {\n    update() {\n      instance.current?.update()\n    },\n    forceUpdate() {\n      instance.current?.forceUpdate()\n    },\n    transformOrigin: cssVars.transformOrigin.varRef,\n    referenceRef,\n    popperRef,\n    getPopperProps,\n    getArrowProps,\n    getArrowInnerProps,\n    getReferenceProps,\n  }\n}\n\nfunction getArrowStyle(props: any) {\n  const { size, shadowColor, bg, style } = props\n  const computedStyle = { ...style, position: \"absolute\" }\n  if (size) {\n    computedStyle[\"--popper-arrow-size\"] = size\n  }\n  if (shadowColor) {\n    computedStyle[\"--popper-arrow-shadow-color\"] = shadowColor\n  }\n  if (bg) {\n    computedStyle[\"--popper-arrow-bg\"] = bg\n  }\n  return computedStyle\n}\n\nexport type UsePopperReturn = ReturnType<typeof usePopper>\n"]},"metadata":{},"sourceType":"module"}