{"ast":null,"code":"'use client';\n\nimport { getToastStyle } from \"./chunk-LDADOVIM.mjs\"; // src/toast.component.tsx\n\nimport { useTimeout } from \"@chakra-ui/react-use-timeout\";\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\";\nimport { runIfFn } from \"@chakra-ui/shared-utils\";\nimport { motion, useIsPresent } from \"framer-motion\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { memo, useEffect, useMemo, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar toastMotionVariants = {\n  initial: props => {\n    const {\n      position\n    } = props;\n    const dir = [\"top\", \"bottom\"].includes(position) ? \"y\" : \"x\";\n    let factor = [\"top-right\", \"bottom-right\"].includes(position) ? 1 : -1;\n    if (position === \"bottom\") factor = 1;\n    return {\n      opacity: 0,\n      [dir]: factor * 24\n    };\n  },\n  animate: {\n    opacity: 1,\n    y: 0,\n    x: 0,\n    scale: 1,\n    transition: {\n      duration: 0.4,\n      ease: [0.4, 0, 0.2, 1]\n    }\n  },\n  exit: {\n    opacity: 0,\n    scale: 0.85,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 1, 1]\n    }\n  }\n};\nvar ToastComponent = memo(props => {\n  const {\n    id,\n    message,\n    onCloseComplete,\n    onRequestRemove,\n    requestClose = false,\n    position = \"bottom\",\n    duration = 5e3,\n    containerStyle,\n    motionVariants = toastMotionVariants,\n    toastSpacing = \"0.5rem\"\n  } = props;\n  const [delay, setDelay] = useState(duration);\n  const isPresent = useIsPresent();\n  useUpdateEffect(() => {\n    if (!isPresent) {\n      onCloseComplete == null ? void 0 : onCloseComplete();\n    }\n  }, [isPresent]);\n  useUpdateEffect(() => {\n    setDelay(duration);\n  }, [duration]);\n\n  const onMouseEnter = () => setDelay(null);\n\n  const onMouseLeave = () => setDelay(duration);\n\n  const close = () => {\n    if (isPresent) onRequestRemove();\n  };\n\n  useEffect(() => {\n    if (isPresent && requestClose) {\n      onRequestRemove();\n    }\n  }, [isPresent, requestClose, onRequestRemove]);\n  useTimeout(close, delay);\n  const containerStyles = useMemo(() => ({\n    pointerEvents: \"auto\",\n    maxWidth: 560,\n    minWidth: 300,\n    margin: toastSpacing,\n    ...containerStyle\n  }), [containerStyle, toastSpacing]);\n  const toastStyle = useMemo(() => getToastStyle(position), [position]);\n  return /* @__PURE__ */jsx(motion.div, {\n    layout: true,\n    className: \"chakra-toast\",\n    variants: motionVariants,\n    initial: \"initial\",\n    animate: \"animate\",\n    exit: \"exit\",\n    onHoverStart: onMouseEnter,\n    onHoverEnd: onMouseLeave,\n    custom: {\n      position\n    },\n    style: toastStyle,\n    children: /* @__PURE__ */jsx(chakra.div, {\n      role: \"status\",\n      \"aria-atomic\": \"true\",\n      className: \"chakra-toast__inner\",\n      __css: containerStyles,\n      children: runIfFn(message, {\n        id,\n        onClose: close\n      })\n    })\n  });\n});\nToastComponent.displayName = \"ToastComponent\";\nexport { ToastComponent };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/toast/src/toast.component.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useTimeout } from \"@chakra-ui/react-use-timeout\"\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\"\nimport { runIfFn } from \"@chakra-ui/shared-utils\"\nimport { motion, useIsPresent, Variants } from \"framer-motion\"\nimport { chakra } from \"@chakra-ui/system\"\nimport type { ToastOptions } from \"./toast.types\"\nimport { getToastStyle } from \"./toast.utils\"\nimport { ToastProviderProps } from \"./toast.provider\"\nimport { memo, useEffect, useMemo, useState } from \"react\"\n\nconst toastMotionVariants: Variants = {\n  initial: (props) => {\n    const { position } = props\n\n    const dir = [\"top\", \"bottom\"].includes(position) ? \"y\" : \"x\"\n\n    let factor = [\"top-right\", \"bottom-right\"].includes(position) ? 1 : -1\n    if (position === \"bottom\") factor = 1\n\n    return {\n      opacity: 0,\n      [dir]: factor * 24,\n    }\n  },\n  animate: {\n    opacity: 1,\n    y: 0,\n    x: 0,\n    scale: 1,\n    transition: {\n      duration: 0.4,\n      ease: [0.4, 0, 0.2, 1],\n    },\n  },\n  exit: {\n    opacity: 0,\n    scale: 0.85,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 1, 1],\n    },\n  },\n}\n\nexport interface ToastComponentProps\n  extends ToastOptions,\n    Pick<ToastProviderProps, \"motionVariants\" | \"toastSpacing\"> {}\n\nexport const ToastComponent = memo((props: ToastComponentProps) => {\n  const {\n    id,\n    message,\n    onCloseComplete,\n    onRequestRemove,\n    requestClose = false,\n    position = \"bottom\",\n    duration = 5000,\n    containerStyle,\n    motionVariants = toastMotionVariants,\n    toastSpacing = \"0.5rem\",\n  } = props\n\n  const [delay, setDelay] = useState(duration)\n  const isPresent = useIsPresent()\n\n  useUpdateEffect(() => {\n    if (!isPresent) {\n      onCloseComplete?.()\n    }\n  }, [isPresent])\n\n  useUpdateEffect(() => {\n    setDelay(duration)\n  }, [duration])\n\n  const onMouseEnter = () => setDelay(null)\n  const onMouseLeave = () => setDelay(duration)\n\n  const close = () => {\n    if (isPresent) onRequestRemove()\n  }\n\n  useEffect(() => {\n    if (isPresent && requestClose) {\n      onRequestRemove()\n    }\n  }, [isPresent, requestClose, onRequestRemove])\n\n  useTimeout(close, delay)\n\n  const containerStyles = useMemo(\n    () => ({\n      pointerEvents: \"auto\",\n      maxWidth: 560,\n      minWidth: 300,\n      margin: toastSpacing,\n      ...containerStyle,\n    }),\n    [containerStyle, toastSpacing],\n  )\n\n  const toastStyle = useMemo(() => getToastStyle(position), [position])\n\n  return (\n    <motion.div\n      layout\n      className=\"chakra-toast\"\n      variants={motionVariants}\n      initial=\"initial\"\n      animate=\"animate\"\n      exit=\"exit\"\n      onHoverStart={onMouseEnter}\n      onHoverEnd={onMouseLeave}\n      custom={{ position }}\n      style={toastStyle}\n    >\n      <chakra.div\n        role=\"status\"\n        aria-atomic=\"true\"\n        className=\"chakra-toast__inner\"\n        __css={containerStyles}\n      >\n        {runIfFn(message, { id, onClose: close })}\n      </chakra.div>\n    </motion.div>\n  )\n})\n\nToastComponent.displayName = \"ToastComponent\"\n"]},"metadata":{},"sourceType":"module"}