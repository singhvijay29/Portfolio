{"ast":null,"code":"'use client';\n\nimport { useModalContext, useModalStyles } from \"./chunk-MSA2NPQT.mjs\"; // src/modal-close-button.tsx\n\nimport { CloseButton } from \"@chakra-ui/close-button\";\nimport { cx, callAllHandlers } from \"@chakra-ui/shared-utils\";\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar ModalCloseButton = forwardRef((props, ref) => {\n  const {\n    onClick,\n    className,\n    ...rest\n  } = props;\n  const {\n    onClose\n  } = useModalContext();\n\n  const _className = cx(\"chakra-modal__close-btn\", className);\n\n  const styles = useModalStyles();\n  return /* @__PURE__ */jsx(CloseButton, {\n    ref,\n    __css: styles.closeButton,\n    className: _className,\n    onClick: callAllHandlers(onClick, event => {\n      event.stopPropagation();\n      onClose();\n    }),\n    ...rest\n  });\n});\nModalCloseButton.displayName = \"ModalCloseButton\";\nexport { ModalCloseButton };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/modal/src/modal-close-button.tsx"],"names":[],"mappings":";;;;AAAA,SAA2B,WAA3B,QAA8C,yBAA9C;AACA,SAAS,EAAT,EAAa,eAAb,QAAoC,yBAApC;AACA,SAAS,UAAT,QAA2B,mBAA3B;AAsBM,SAAA,GAAA,QAAA,mBAAA;AAVC,IAAM,gBAAA,GAAmB,UAAA,CAC9B,CAAC,KAAD,EAAQ,GAAR,KAAgB;AACd,QAAM;AAAE,IAAA,OAAF;AAAW,IAAA,SAAX;AAAsB,OAAG;AAAzB,MAAkC,KAAxC;AACA,QAAM;AAAE,IAAA;AAAF,MAAc,eAAA,EAApB;;AAEA,QAAM,UAAA,GAAa,EAAA,CAAG,yBAAH,EAA8B,SAA9B,CAAnB;;AAEA,QAAM,MAAA,GAAS,cAAA,EAAf;AAEA,SACE,eAAA,GAAA,CAAC,WAAD,EAAC;AACC,IAAA,GADD;AAEC,IAAA,KAAA,EAAO,MAAA,CAAO,WAFf;AAGC,IAAA,SAAA,EAAW,UAHZ;AAIC,IAAA,OAAA,EAAS,eAAA,CAAgB,OAAhB,EAA0B,KAAD,IAA6B;AAC7D,MAAA,KAAA,CAAM,eAAN;AACA,MAAA,OAAA;AACD,KAHQ,CAJV;AAQE,OAAG;AARL,GAAD,CADF;AAYF,CArB8B,CAAzB;AAwBP,gBAAA,CAAiB,WAAjB,GAA+B,kBAA/B","sourcesContent":["import { CloseButtonProps, CloseButton } from \"@chakra-ui/close-button\"\nimport { cx, callAllHandlers } from \"@chakra-ui/shared-utils\"\nimport { forwardRef } from \"@chakra-ui/system\"\n\nimport { useModalContext, useModalStyles } from \"./modal\"\n\nexport type ModalCloseButtonProps = CloseButtonProps\n\n/**\n * ModalCloseButton is used closes the modal.\n *\n * You don't need to pass the `onClick` to it, it reads the\n * `onClose` action from the modal context.\n */\nexport const ModalCloseButton = forwardRef<CloseButtonProps, \"button\">(\n  (props, ref) => {\n    const { onClick, className, ...rest } = props\n    const { onClose } = useModalContext()\n\n    const _className = cx(\"chakra-modal__close-btn\", className)\n\n    const styles = useModalStyles()\n\n    return (\n      <CloseButton\n        ref={ref}\n        __css={styles.closeButton}\n        className={_className}\n        onClick={callAllHandlers(onClick, (event: React.MouseEvent) => {\n          event.stopPropagation()\n          onClose()\n        })}\n        {...rest}\n      />\n    )\n  },\n)\n\nModalCloseButton.displayName = \"ModalCloseButton\"\n"]},"metadata":{},"sourceType":"module"}