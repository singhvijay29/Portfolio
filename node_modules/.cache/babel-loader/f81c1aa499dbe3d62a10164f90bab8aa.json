{"ast":null,"code":"import { isBrowser } from \"./chunk-O3SWHQEE.mjs\"; // src/user-agent.ts\n\nfunction getUserAgentBrowser(navigator) {\n  const {\n    userAgent: ua,\n    vendor\n  } = navigator;\n  const android = /(android)/i.test(ua);\n\n  switch (true) {\n    case /CriOS/.test(ua):\n      return \"Chrome for iOS\";\n\n    case /Edg\\//.test(ua):\n      return \"Edge\";\n\n    case android && /Silk\\//.test(ua):\n      return \"Silk\";\n\n    case /Chrome/.test(ua) && /Google Inc/.test(vendor):\n      return \"Chrome\";\n\n    case /Firefox\\/\\d+\\.\\d+$/.test(ua):\n      return \"Firefox\";\n\n    case android:\n      return \"AOSP\";\n\n    case /MSIE|Trident/.test(ua):\n      return \"IE\";\n\n    case /Safari/.test(navigator.userAgent) && /Apple Computer/.test(ua):\n      return \"Safari\";\n\n    case /AppleWebKit/.test(ua):\n      return \"WebKit\";\n\n    default:\n      return null;\n  }\n}\n\nfunction getUserAgentOS(navigator) {\n  const {\n    userAgent: ua,\n    platform\n  } = navigator;\n\n  switch (true) {\n    case /Android/.test(ua):\n      return \"Android\";\n\n    case /iPhone|iPad|iPod/.test(platform):\n      return \"iOS\";\n\n    case /Win/.test(platform):\n      return \"Windows\";\n\n    case /Mac/.test(platform):\n      return \"Mac\";\n\n    case /CrOS/.test(ua):\n      return \"Chrome OS\";\n\n    case /Firefox/.test(ua):\n      return \"Firefox OS\";\n\n    default:\n      return null;\n  }\n}\n\nfunction detectDeviceType(navigator) {\n  const {\n    userAgent: ua\n  } = navigator;\n  if (/(tablet)|(iPad)|(Nexus 9)/i.test(ua)) return \"tablet\";\n  if (/(mobi)/i.test(ua)) return \"phone\";\n  return \"desktop\";\n}\n\nfunction detectOS(os) {\n  if (!isBrowser) return false;\n  return getUserAgentOS(window.navigator) === os;\n}\n\nfunction detectBrowser(browser) {\n  if (!isBrowser) return false;\n  return getUserAgentBrowser(window.navigator) === browser;\n}\n\nfunction detectTouch() {\n  if (!isBrowser) return false;\n  return window.ontouchstart === null && window.ontouchmove === null && window.ontouchend === null;\n}\n\nexport { detectDeviceType, detectOS, detectBrowser, detectTouch };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/utils/dist/chunk-DGFLLHTM.mjs"],"names":["isBrowser","getUserAgentBrowser","navigator","userAgent","ua","vendor","android","test","getUserAgentOS","platform","detectDeviceType","detectOS","os","window","detectBrowser","browser","detectTouch","ontouchstart","ontouchmove","ontouchend"],"mappings":"AAAA,SACEA,SADF,QAEO,sBAFP,C,CAIA;;AACA,SAASC,mBAAT,CAA6BC,SAA7B,EAAwC;AACtC,QAAM;AAAEC,IAAAA,SAAS,EAAEC,EAAb;AAAiBC,IAAAA;AAAjB,MAA4BH,SAAlC;AACA,QAAMI,OAAO,GAAG,aAAaC,IAAb,CAAkBH,EAAlB,CAAhB;;AACA,UAAQ,IAAR;AACE,SAAK,QAAQG,IAAR,CAAaH,EAAb,CAAL;AACE,aAAO,gBAAP;;AACF,SAAK,QAAQG,IAAR,CAAaH,EAAb,CAAL;AACE,aAAO,MAAP;;AACF,SAAME,OAAO,IAAI,SAASC,IAAT,CAAcH,EAAd,CAAjB;AACE,aAAO,MAAP;;AACF,SAAM,SAASG,IAAT,CAAcH,EAAd,KAAqB,aAAaG,IAAb,CAAkBF,MAAlB,CAA3B;AACE,aAAO,QAAP;;AACF,SAAK,qBAAqBE,IAArB,CAA0BH,EAA1B,CAAL;AACE,aAAO,SAAP;;AACF,SAAKE,OAAL;AACE,aAAO,MAAP;;AACF,SAAK,eAAeC,IAAf,CAAoBH,EAApB,CAAL;AACE,aAAO,IAAP;;AACF,SAAM,SAASG,IAAT,CAAcL,SAAS,CAACC,SAAxB,KAAsC,iBAAiBI,IAAjB,CAAsBH,EAAtB,CAA5C;AACE,aAAO,QAAP;;AACF,SAAK,cAAcG,IAAd,CAAmBH,EAAnB,CAAL;AACE,aAAO,QAAP;;AACF;AACE,aAAO,IAAP;AApBJ;AAsBD;;AACD,SAASI,cAAT,CAAwBN,SAAxB,EAAmC;AACjC,QAAM;AAAEC,IAAAA,SAAS,EAAEC,EAAb;AAAiBK,IAAAA;AAAjB,MAA8BP,SAApC;;AACA,UAAQ,IAAR;AACE,SAAK,UAAUK,IAAV,CAAeH,EAAf,CAAL;AACE,aAAO,SAAP;;AACF,SAAK,mBAAmBG,IAAnB,CAAwBE,QAAxB,CAAL;AACE,aAAO,KAAP;;AACF,SAAK,MAAMF,IAAN,CAAWE,QAAX,CAAL;AACE,aAAO,SAAP;;AACF,SAAK,MAAMF,IAAN,CAAWE,QAAX,CAAL;AACE,aAAO,KAAP;;AACF,SAAK,OAAOF,IAAP,CAAYH,EAAZ,CAAL;AACE,aAAO,WAAP;;AACF,SAAK,UAAUG,IAAV,CAAeH,EAAf,CAAL;AACE,aAAO,YAAP;;AACF;AACE,aAAO,IAAP;AAdJ;AAgBD;;AACD,SAASM,gBAAT,CAA0BR,SAA1B,EAAqC;AACnC,QAAM;AAAEC,IAAAA,SAAS,EAAEC;AAAb,MAAoBF,SAA1B;AACA,MAAI,6BAA6BK,IAA7B,CAAkCH,EAAlC,CAAJ,EACE,OAAO,QAAP;AACF,MAAI,UAAUG,IAAV,CAAeH,EAAf,CAAJ,EACE,OAAO,OAAP;AACF,SAAO,SAAP;AACD;;AACD,SAASO,QAAT,CAAkBC,EAAlB,EAAsB;AACpB,MAAI,CAACZ,SAAL,EACE,OAAO,KAAP;AACF,SAAOQ,cAAc,CAACK,MAAM,CAACX,SAAR,CAAd,KAAqCU,EAA5C;AACD;;AACD,SAASE,aAAT,CAAuBC,OAAvB,EAAgC;AAC9B,MAAI,CAACf,SAAL,EACE,OAAO,KAAP;AACF,SAAOC,mBAAmB,CAACY,MAAM,CAACX,SAAR,CAAnB,KAA0Ca,OAAjD;AACD;;AACD,SAASC,WAAT,GAAuB;AACrB,MAAI,CAAChB,SAAL,EACE,OAAO,KAAP;AACF,SAAOa,MAAM,CAACI,YAAP,KAAwB,IAAxB,IAAgCJ,MAAM,CAACK,WAAP,KAAuB,IAAvD,IAA+DL,MAAM,CAACM,UAAP,KAAsB,IAA5F;AACD;;AAED,SACET,gBADF,EAEEC,QAFF,EAGEG,aAHF,EAIEE,WAJF","sourcesContent":["import {\n  isBrowser\n} from \"./chunk-O3SWHQEE.mjs\";\n\n// src/user-agent.ts\nfunction getUserAgentBrowser(navigator) {\n  const { userAgent: ua, vendor } = navigator;\n  const android = /(android)/i.test(ua);\n  switch (true) {\n    case /CriOS/.test(ua):\n      return \"Chrome for iOS\";\n    case /Edg\\//.test(ua):\n      return \"Edge\";\n    case (android && /Silk\\//.test(ua)):\n      return \"Silk\";\n    case (/Chrome/.test(ua) && /Google Inc/.test(vendor)):\n      return \"Chrome\";\n    case /Firefox\\/\\d+\\.\\d+$/.test(ua):\n      return \"Firefox\";\n    case android:\n      return \"AOSP\";\n    case /MSIE|Trident/.test(ua):\n      return \"IE\";\n    case (/Safari/.test(navigator.userAgent) && /Apple Computer/.test(ua)):\n      return \"Safari\";\n    case /AppleWebKit/.test(ua):\n      return \"WebKit\";\n    default:\n      return null;\n  }\n}\nfunction getUserAgentOS(navigator) {\n  const { userAgent: ua, platform } = navigator;\n  switch (true) {\n    case /Android/.test(ua):\n      return \"Android\";\n    case /iPhone|iPad|iPod/.test(platform):\n      return \"iOS\";\n    case /Win/.test(platform):\n      return \"Windows\";\n    case /Mac/.test(platform):\n      return \"Mac\";\n    case /CrOS/.test(ua):\n      return \"Chrome OS\";\n    case /Firefox/.test(ua):\n      return \"Firefox OS\";\n    default:\n      return null;\n  }\n}\nfunction detectDeviceType(navigator) {\n  const { userAgent: ua } = navigator;\n  if (/(tablet)|(iPad)|(Nexus 9)/i.test(ua))\n    return \"tablet\";\n  if (/(mobi)/i.test(ua))\n    return \"phone\";\n  return \"desktop\";\n}\nfunction detectOS(os) {\n  if (!isBrowser)\n    return false;\n  return getUserAgentOS(window.navigator) === os;\n}\nfunction detectBrowser(browser) {\n  if (!isBrowser)\n    return false;\n  return getUserAgentBrowser(window.navigator) === browser;\n}\nfunction detectTouch() {\n  if (!isBrowser)\n    return false;\n  return window.ontouchstart === null && window.ontouchmove === null && window.ontouchend === null;\n}\n\nexport {\n  detectDeviceType,\n  detectOS,\n  detectBrowser,\n  detectTouch\n};\n"]},"metadata":{},"sourceType":"module"}