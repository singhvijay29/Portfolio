{"ast":null,"code":"'use client'; // src/spinner.tsx\n\nimport { chakra, forwardRef, keyframes, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar spin = keyframes({\n  \"0%\": {\n    transform: \"rotate(0deg)\"\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\"\n  }\n});\nvar Spinner = forwardRef((props, ref) => {\n  const styles = useStyleConfig(\"Spinner\", props);\n  const {\n    label = \"Loading...\",\n    thickness = \"2px\",\n    speed = \"0.45s\",\n    emptyColor = \"transparent\",\n    className,\n    ...rest\n  } = omitThemingProps(props);\n\n  const _className = cx(\"chakra-spinner\", className);\n\n  const spinnerStyles = {\n    display: \"inline-block\",\n    borderColor: \"currentColor\",\n    borderStyle: \"solid\",\n    borderRadius: \"99999px\",\n    borderWidth: thickness,\n    borderBottomColor: emptyColor,\n    borderLeftColor: emptyColor,\n    animation: `${spin} ${speed} linear infinite`,\n    ...styles\n  };\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    __css: spinnerStyles,\n    className: _className,\n    ...rest,\n    children: label && /* @__PURE__ */jsx(chakra.span, {\n      srOnly: true,\n      children: label\n    })\n  });\n});\nSpinner.displayName = \"Spinner\";\nexport { Spinner };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/spinner/src/spinner.tsx"],"names":[],"mappings":";;AAAA,SACE,MADF,EAEE,UAFF,EAGE,SAHF,EAIE,gBAJF,EAME,cANF,QAQO,mBARP;AASA,SAAS,EAAT,QAAmB,yBAAnB;AA2FgB,SAAA,GAAA,QAAA,mBAAA;AAzFhB,IAAM,IAAA,GAAO,SAAA,CAAU;AACrB,QAAM;AACJ,IAAA,SAAA,EAAW;AADP,GADe;AAIrB,UAAQ;AACN,IAAA,SAAA,EAAW;AADL;AAJa,CAAV,CAAb;AAwDO,IAAM,OAAA,GAAU,UAAA,CAAgC,CAAC,KAAD,EAAQ,GAAR,KAAgB;AACrE,QAAM,MAAA,GAAS,cAAA,CAAe,SAAf,EAA0B,KAA1B,CAAf;AAEA,QAAM;AACJ,IAAA,KAAA,GAAQ,YADJ;AAEJ,IAAA,SAAA,GAAY,KAFR;AAGJ,IAAA,KAAA,GAAQ,OAHJ;AAIJ,IAAA,UAAA,GAAa,aAJT;AAKJ,IAAA,SALI;AAMJ,OAAG;AANC,MAOF,gBAAA,CAAiB,KAAjB,CAPJ;;AASA,QAAM,UAAA,GAAa,EAAA,CAAG,gBAAH,EAAqB,SAArB,CAAnB;;AAEA,QAAM,aAAA,GAAgB;AACpB,IAAA,OAAA,EAAS,cADW;AAEpB,IAAA,WAAA,EAAa,cAFO;AAGpB,IAAA,WAAA,EAAa,OAHO;AAIpB,IAAA,YAAA,EAAc,SAJM;AAKpB,IAAA,WAAA,EAAa,SALO;AAMpB,IAAA,iBAAA,EAAmB,UANC;AAOpB,IAAA,eAAA,EAAiB,UAPG;AAQpB,IAAA,SAAA,EAAW,GAAG,IAAA,IAAQ,KAAA,kBARF;AASpB,OAAG;AATiB,GAAtB;AAYA,SACE,eAAA,GAAA,CAAC,MAAA,CAAO,GAAR,EAAC;AACC,IAAA,GADD;AAEC,IAAA,KAAA,EAAO,aAFR;AAGC,IAAA,SAAA,EAAW,UAHZ;AAIE,OAAG,IAJL;AAME,IAAA,QAAA,EAAA,KAAA,IAAS,eAAA,GAAA,CAAC,MAAA,CAAO,IAAR,EAAC;AAAY,MAAA,MAAA,EAAM,IAAlB;AAAoB,MAAA,QAAA,EAAA;AAApB,KAAD;AANX,GAAD,CADF;AAUD,CApCsB,CAAhB;AAsCP,OAAA,CAAQ,WAAR,GAAsB,SAAtB","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  keyframes,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nconst spin = keyframes({\n  \"0%\": {\n    transform: \"rotate(0deg)\",\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\",\n  },\n})\n\ninterface SpinnerOptions {\n  /**\n   * The color of the empty area in the spinner\n   * @default \"transparent\"\n   */\n  emptyColor?: string\n  /**\n   * The color of the spinner\n   */\n  color?: string\n  /**\n   * The thickness of the spinner\n   * @default \"2px\"\n   * @example\n   * ```jsx\n   * <Spinner thickness=\"4px\"/>\n   * ```\n   */\n  thickness?: string\n  /**\n   * The speed of the spinner.\n   * @default \"0.45s\"\n   * @example\n   * ```jsx\n   * <Spinner speed=\"0.2s\"/>\n   * ```\n   */\n  speed?: string\n  /**\n   * For accessibility, it is important to add a fallback loading text.\n   * This text will be visible to screen readers.\n   * @default \"Loading...\"\n   */\n  label?: string\n}\n\nexport interface SpinnerProps\n  extends Omit<HTMLChakraProps<\"div\">, keyof SpinnerOptions>,\n    SpinnerOptions,\n    ThemingProps<\"Spinner\"> {}\n\n/**\n * Spinner is used to indicate the loading state of a page or a component,\n * It renders a `div` by default.\n *\n * @see Docs https://chakra-ui.com/spinner\n */\nexport const Spinner = forwardRef<SpinnerProps, \"div\">((props, ref) => {\n  const styles = useStyleConfig(\"Spinner\", props)\n\n  const {\n    label = \"Loading...\",\n    thickness = \"2px\",\n    speed = \"0.45s\",\n    emptyColor = \"transparent\",\n    className,\n    ...rest\n  } = omitThemingProps(props)\n\n  const _className = cx(\"chakra-spinner\", className)\n\n  const spinnerStyles = {\n    display: \"inline-block\",\n    borderColor: \"currentColor\",\n    borderStyle: \"solid\",\n    borderRadius: \"99999px\",\n    borderWidth: thickness,\n    borderBottomColor: emptyColor,\n    borderLeftColor: emptyColor,\n    animation: `${spin} ${speed} linear infinite`,\n    ...styles,\n  }\n\n  return (\n    <chakra.div\n      ref={ref}\n      __css={spinnerStyles}\n      className={_className}\n      {...rest}\n    >\n      {label && <chakra.span srOnly>{label}</chakra.span>}\n    </chakra.div>\n  )\n})\n\nSpinner.displayName = \"Spinner\"\n"]},"metadata":{},"sourceType":"module"}