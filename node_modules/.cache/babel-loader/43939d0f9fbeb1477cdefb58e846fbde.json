{"ast":null,"code":"'use client';\n\nimport { useMenuStyles } from \"./chunk-UZJ3TPNQ.mjs\"; // src/menu-icon.tsx\n\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { Children, cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\n\nvar MenuIcon = props => {\n  const {\n    className,\n    children,\n    ...rest\n  } = props;\n  const styles = useMenuStyles();\n  const child = Children.only(children);\n  const clone = isValidElement(child) ? cloneElement(child, {\n    focusable: \"false\",\n    \"aria-hidden\": true,\n    className: cx(\"chakra-menu__icon\", child.props.className)\n  }) : null;\n\n  const _className = cx(\"chakra-menu__icon-wrapper\", className);\n\n  return /* @__PURE__ */jsx(chakra.span, {\n    className: _className,\n    ...rest,\n    __css: styles.icon,\n    children: clone\n  });\n};\n\nMenuIcon.displayName = \"MenuIcon\";\nexport { MenuIcon };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/menu/src/menu-icon.tsx"],"names":[],"mappings":";;;;AAAA,SAA0B,MAA1B,QAAwC,mBAAxC;AACA,SAAS,EAAT,QAAmB,yBAAnB;AAEA,SAAS,QAAT,EAAmB,YAAnB,EAAiC,cAAjC,QAAuD,OAAvD;AAqBI,SAAA,GAAA,QAAA,mBAAA;;AAlBG,IAAM,QAAA,GAA+C,KAAD,IAAW;AACpE,QAAM;AAAE,IAAA,SAAF;AAAa,IAAA,QAAb;AAAuB,OAAG;AAA1B,MAAmC,KAAzC;AAEA,QAAM,MAAA,GAAS,aAAA,EAAf;AAEA,QAAM,KAAA,GAAQ,QAAA,CAAS,IAAT,CAAc,QAAd,CAAd;AAEA,QAAM,KAAA,GAAQ,cAAA,CAAe,KAAf,CAAA,GACV,YAAA,CAAkB,KAAlB,EAAyB;AACvB,IAAA,SAAA,EAAW,OADY;AAEvB,mBAAe,IAFQ;AAGvB,IAAA,SAAA,EAAW,EAAA,CAAG,mBAAH,EAAwB,KAAA,CAAM,KAAN,CAAY,SAApC;AAHY,GAAzB,CADU,GAMV,IANJ;;AAQA,QAAM,UAAA,GAAa,EAAA,CAAG,2BAAH,EAAgC,SAAhC,CAAnB;;AAEA,SACE,eAAA,GAAA,CAAC,MAAA,CAAO,IAAR,EAAC;AAAY,IAAA,SAAA,EAAW,UAAvB;AAAoC,OAAG,IAAvC;AAA6C,IAAA,KAAA,EAAO,MAAA,CAAO,IAA3D;AACE,IAAA,QAAA,EAAA;AADF,GAAD,CADF;AAKF,CAtBO;;AAwBP,QAAA,CAAS,WAAT,GAAuB,UAAvB","sourcesContent":["import { HTMLChakraProps, chakra } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nimport { Children, cloneElement, isValidElement } from \"react\"\nimport { useMenuStyles } from \"./menu\"\n\nexport const MenuIcon: React.FC<HTMLChakraProps<\"span\">> = (props) => {\n  const { className, children, ...rest } = props\n\n  const styles = useMenuStyles()\n\n  const child = Children.only(children)\n\n  const clone = isValidElement(child)\n    ? cloneElement<any>(child, {\n        focusable: \"false\",\n        \"aria-hidden\": true,\n        className: cx(\"chakra-menu__icon\", child.props.className),\n      })\n    : null\n\n  const _className = cx(\"chakra-menu__icon-wrapper\", className)\n\n  return (\n    <chakra.span className={_className} {...rest} __css={styles.icon}>\n      {clone}\n    </chakra.span>\n  )\n}\n\nMenuIcon.displayName = \"MenuIcon\"\n"]},"metadata":{},"sourceType":"module"}