{"ast":null,"code":"import { resolveElements } from '../render/dom/utils/resolve-element.mjs';\nimport { visualElementStore } from '../render/store.mjs';\nimport { invariant } from '../utils/errors.mjs';\nimport { GroupPlaybackControls } from './GroupPlaybackControls.mjs';\nimport { isDOMKeyframes } from './utils/is-dom-keyframes.mjs';\nimport { animateTarget } from './interfaces/visual-element-target.mjs';\nimport { createVisualElement } from './utils/create-visual-element.mjs';\nimport { animateSingleValue } from './interfaces/single-value.mjs';\nimport { createAnimationsFromSequence } from './sequence/create.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\nfunction animateElements(elementOrSelector, keyframes, options, scope) {\n  const elements = resolveElements(elementOrSelector, scope);\n  const numElements = elements.length;\n  invariant(Boolean(numElements), \"No valid element provided.\");\n  const animations = [];\n\n  for (let i = 0; i < numElements; i++) {\n    const element = elements[i];\n    /**\n     * Check each element for an associated VisualElement. If none exists,\n     * we need to create one.\n     */\n\n    if (!visualElementStore.has(element)) {\n      /**\n       * TODO: We only need render-specific parts of the VisualElement.\n       * With some additional work the size of the animate() function\n       * could be reduced significantly.\n       */\n      createVisualElement(element);\n    }\n\n    const visualElement = visualElementStore.get(element);\n    const transition = { ...options\n    };\n    /**\n     * Resolve stagger function if provided.\n     */\n\n    if (typeof transition.delay === \"function\") {\n      transition.delay = transition.delay(i, numElements);\n    }\n\n    animations.push(...animateTarget(visualElement, { ...keyframes,\n      transition\n    }, {}));\n  }\n\n  return new GroupPlaybackControls(animations);\n}\n\nconst isSequence = value => Array.isArray(value) && Array.isArray(value[0]);\n\nfunction animateSequence(sequence, options, scope) {\n  const animations = [];\n  const animationDefinitions = createAnimationsFromSequence(sequence, options, scope);\n  animationDefinitions.forEach((_ref, subject) => {\n    let {\n      keyframes,\n      transition\n    } = _ref;\n    let animation;\n\n    if (isMotionValue(subject)) {\n      animation = animateSingleValue(subject, keyframes.default, transition.default);\n    } else {\n      animation = animateElements(subject, keyframes, transition);\n    }\n\n    animations.push(animation);\n  });\n  return new GroupPlaybackControls(animations);\n}\n\nconst createScopedAnimate = scope => {\n  /**\n   * Implementation\n   */\n  function scopedAnimate(valueOrElementOrSequence, keyframes, options) {\n    let animation;\n\n    if (isSequence(valueOrElementOrSequence)) {\n      animation = animateSequence(valueOrElementOrSequence, keyframes, scope);\n    } else if (isDOMKeyframes(keyframes)) {\n      animation = animateElements(valueOrElementOrSequence, keyframes, options, scope);\n    } else {\n      animation = animateSingleValue(valueOrElementOrSequence, keyframes, options);\n    }\n\n    if (scope) {\n      scope.animations.push(animation);\n    }\n\n    return animation;\n  }\n\n  return scopedAnimate;\n};\n\nconst animate = createScopedAnimate();\nexport { animate, createScopedAnimate };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/framer-motion/dist/es/animation/animate.mjs"],"names":["resolveElements","visualElementStore","invariant","GroupPlaybackControls","isDOMKeyframes","animateTarget","createVisualElement","animateSingleValue","createAnimationsFromSequence","isMotionValue","animateElements","elementOrSelector","keyframes","options","scope","elements","numElements","length","Boolean","animations","i","element","has","visualElement","get","transition","delay","push","isSequence","value","Array","isArray","animateSequence","sequence","animationDefinitions","forEach","subject","animation","default","createScopedAnimate","scopedAnimate","valueOrElementOrSequence","animate"],"mappings":"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","sourcesContent":["import { resolveElements } from '../render/dom/utils/resolve-element.mjs';\nimport { visualElementStore } from '../render/store.mjs';\nimport { invariant } from '../utils/errors.mjs';\nimport { GroupPlaybackControls } from './GroupPlaybackControls.mjs';\nimport { isDOMKeyframes } from './utils/is-dom-keyframes.mjs';\nimport { animateTarget } from './interfaces/visual-element-target.mjs';\nimport { createVisualElement } from './utils/create-visual-element.mjs';\nimport { animateSingleValue } from './interfaces/single-value.mjs';\nimport { createAnimationsFromSequence } from './sequence/create.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\nfunction animateElements(elementOrSelector, keyframes, options, scope) {\n    const elements = resolveElements(elementOrSelector, scope);\n    const numElements = elements.length;\n    invariant(Boolean(numElements), \"No valid element provided.\");\n    const animations = [];\n    for (let i = 0; i < numElements; i++) {\n        const element = elements[i];\n        /**\n         * Check each element for an associated VisualElement. If none exists,\n         * we need to create one.\n         */\n        if (!visualElementStore.has(element)) {\n            /**\n             * TODO: We only need render-specific parts of the VisualElement.\n             * With some additional work the size of the animate() function\n             * could be reduced significantly.\n             */\n            createVisualElement(element);\n        }\n        const visualElement = visualElementStore.get(element);\n        const transition = { ...options };\n        /**\n         * Resolve stagger function if provided.\n         */\n        if (typeof transition.delay === \"function\") {\n            transition.delay = transition.delay(i, numElements);\n        }\n        animations.push(...animateTarget(visualElement, { ...keyframes, transition }, {}));\n    }\n    return new GroupPlaybackControls(animations);\n}\nconst isSequence = (value) => Array.isArray(value) && Array.isArray(value[0]);\nfunction animateSequence(sequence, options, scope) {\n    const animations = [];\n    const animationDefinitions = createAnimationsFromSequence(sequence, options, scope);\n    animationDefinitions.forEach(({ keyframes, transition }, subject) => {\n        let animation;\n        if (isMotionValue(subject)) {\n            animation = animateSingleValue(subject, keyframes.default, transition.default);\n        }\n        else {\n            animation = animateElements(subject, keyframes, transition);\n        }\n        animations.push(animation);\n    });\n    return new GroupPlaybackControls(animations);\n}\nconst createScopedAnimate = (scope) => {\n    /**\n     * Implementation\n     */\n    function scopedAnimate(valueOrElementOrSequence, keyframes, options) {\n        let animation;\n        if (isSequence(valueOrElementOrSequence)) {\n            animation = animateSequence(valueOrElementOrSequence, keyframes, scope);\n        }\n        else if (isDOMKeyframes(keyframes)) {\n            animation = animateElements(valueOrElementOrSequence, keyframes, options, scope);\n        }\n        else {\n            animation = animateSingleValue(valueOrElementOrSequence, keyframes, options);\n        }\n        if (scope) {\n            scope.animations.push(animation);\n        }\n        return animation;\n    }\n    return scopedAnimate;\n};\nconst animate = createScopedAnimate();\n\nexport { animate, createScopedAnimate };\n"]},"metadata":{},"sourceType":"module"}