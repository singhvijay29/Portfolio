{"ast":null,"code":"'use client'; // src/container.tsx\n\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Container = forwardRef(function Container2(props, ref) {\n  const {\n    className,\n    centerContent,\n    ...rest\n  } = omitThemingProps(props);\n  const styles = useStyleConfig(\"Container\", props);\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    className: cx(\"chakra-container\", className),\n    ...rest,\n    __css: { ...styles,\n      ...(centerContent && {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      })\n    }\n  });\n});\nContainer.displayName = \"Container\";\nexport { Container };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/layout/src/container.tsx"],"names":["Container"],"mappings":";;AAAA,SACE,MADF,EAEE,UAFF,EAGE,gBAHF,EAKE,cALF,QAOO,mBAPP;AAQA,SAAS,EAAT,QAAmB,yBAAnB;AAiCI,SAAA,GAAA,QAAA,mBAAA;AATG,IAAM,SAAA,GAAY,UAAA,CAAkC,SAASA,UAAT,CACzD,KADyD,EAEzD,GAFyD,EAGzD;AACA,QAAM;AAAE,IAAA,SAAF;AAAa,IAAA,aAAb;AAA4B,OAAG;AAA/B,MAAwC,gBAAA,CAAiB,KAAjB,CAA9C;AAEA,QAAM,MAAA,GAAS,cAAA,CAAe,WAAf,EAA4B,KAA5B,CAAf;AAEA,SACE,eAAA,GAAA,CAAC,MAAA,CAAO,GAAR,EAAC;AACC,IAAA,GADD;AAEC,IAAA,SAAA,EAAW,EAAA,CAAG,kBAAH,EAAuB,SAAvB,CAFZ;AAGE,OAAG,IAHL;AAIC,IAAA,KAAA,EAAO,EACL,GAAG,MADE;AAEL,UAAI,aAAA,IAAiB;AACnB,QAAA,OAAA,EAAS,MADU;AAEnB,QAAA,aAAA,EAAe,QAFI;AAGnB,QAAA,UAAA,EAAY;AAHO,OAArB;AAFK;AAJR,GAAD,CADF;AAeD,CAvBwB,CAAlB;AAyBP,SAAA,CAAU,WAAV,GAAwB,WAAxB","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface ContainerProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Container\"> {\n  /**\n   * If `true`, container will center its children\n   * regardless of their width.\n   *\n   * @default false\n   */\n  centerContent?: boolean\n}\n\n/**\n * Layout component used to wrap app or website content\n *\n * It sets `margin-left` and `margin-right` to `auto`,\n * to keep its content centered.\n *\n * It also sets a default max-width of `60ch` (60 characters).\n *\n * @see Docs https://chakra-ui.com/docs/components/container\n */\nexport const Container = forwardRef<ContainerProps, \"div\">(function Container(\n  props,\n  ref,\n) {\n  const { className, centerContent, ...rest } = omitThemingProps(props)\n\n  const styles = useStyleConfig(\"Container\", props)\n\n  return (\n    <chakra.div\n      ref={ref}\n      className={cx(\"chakra-container\", className)}\n      {...rest}\n      __css={{\n        ...styles,\n        ...(centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }),\n      }}\n    />\n  )\n})\n\nContainer.displayName = \"Container\"\n"]},"metadata":{},"sourceType":"module"}