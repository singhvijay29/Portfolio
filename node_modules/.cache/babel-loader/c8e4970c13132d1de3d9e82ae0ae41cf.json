{"ast":null,"code":"'use client'; // src/center.tsx\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Center = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nCenter.displayName = \"Center\";\nvar centerStyles = {\n  horizontal: {\n    insetStart: \"50%\",\n    transform: \"translateX(-50%)\"\n  },\n  vertical: {\n    top: \"50%\",\n    transform: \"translateY(-50%)\"\n  },\n  both: {\n    insetStart: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n};\nvar AbsoluteCenter = forwardRef(function AbsoluteCenter2(props, ref) {\n  const {\n    axis = \"both\",\n    ...rest\n  } = props;\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    __css: centerStyles[axis],\n    ...rest,\n    position: \"absolute\"\n  });\n});\nexport { Center, AbsoluteCenter };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/layout/src/center.tsx"],"names":["AbsoluteCenter"],"mappings":";;AAAA,SAAS,MAAT,EAAiB,UAAjB,QAAoD,mBAApD;AAqDM,SAAA,GAAA,QAAA,mBAAA;AA3CC,IAAM,MAAA,GAAS,MAAA,CAAO,KAAP,EAAc;AAClC,EAAA,SAAA,EAAW;AACT,IAAA,OAAA,EAAS,MADA;AAET,IAAA,UAAA,EAAY,QAFH;AAGT,IAAA,cAAA,EAAgB;AAHP;AADuB,CAAd,CAAf;AAQP,MAAA,CAAO,WAAP,GAAqB,QAArB;AAMA,IAAM,YAAA,GAAe;AACnB,EAAA,UAAA,EAAY;AACV,IAAA,UAAA,EAAY,KADF;AAEV,IAAA,SAAA,EAAW;AAFD,GADO;AAKnB,EAAA,QAAA,EAAU;AACR,IAAA,GAAA,EAAK,KADG;AAER,IAAA,SAAA,EAAW;AAFH,GALS;AASnB,EAAA,IAAA,EAAM;AACJ,IAAA,UAAA,EAAY,KADR;AAEJ,IAAA,GAAA,EAAK,KAFD;AAGJ,IAAA,SAAA,EAAW;AAHP;AATa,CAArB;AAyBO,IAAM,cAAA,GAAiB,UAAA,CAC5B,SAASA,eAAT,CAAwB,KAAxB,EAA+B,GAA/B,EAAoC;AAClC,QAAM;AAAE,IAAA,IAAA,GAAO,MAAT;AAAiB,OAAG;AAApB,MAA6B,KAAnC;AACA,SACE,eAAA,GAAA,CAAC,MAAA,CAAO,GAAR,EAAC;AACC,IAAA,GADD;AAEC,IAAA,KAAA,EAAO,YAAA,CAAa,IAAb,CAFR;AAGE,OAAG,IAHL;AAIC,IAAA,QAAA,EAAS;AAJV,GAAD,CADF;AAQF,CAX4B,CAAvB","sourcesContent":["import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\n\nexport interface CenterProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * React component used to horizontally and vertically center its child.\n * It uses the popular `display: flex` centering technique.\n *\n * @see Docs https://chakra-ui.com/center\n */\nexport const Center = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n})\n\nCenter.displayName = \"Center\"\n\nexport interface AbsoluteCenterProps extends HTMLChakraProps<\"div\"> {\n  axis?: \"horizontal\" | \"vertical\" | \"both\"\n}\n\nconst centerStyles = {\n  horizontal: {\n    insetStart: \"50%\",\n    transform: \"translateX(-50%)\",\n  },\n  vertical: {\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n  },\n  both: {\n    insetStart: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n}\n\n/**\n * React component used to horizontally and vertically center an element\n * relative to its parent dimensions.\n *\n * It uses the `position: absolute` strategy.\n *\n * @see Docs https://chakra-ui.com/center\n * @see WebDev https://web.dev/centering-in-css/#5.-pop-and-plop\n */\nexport const AbsoluteCenter = forwardRef<AbsoluteCenterProps, \"div\">(\n  function AbsoluteCenter(props, ref) {\n    const { axis = \"both\", ...rest } = props\n    return (\n      <chakra.div\n        ref={ref}\n        __css={centerStyles[axis]}\n        {...rest}\n        position=\"absolute\"\n      />\n    )\n  },\n)\n"]},"metadata":{},"sourceType":"module"}