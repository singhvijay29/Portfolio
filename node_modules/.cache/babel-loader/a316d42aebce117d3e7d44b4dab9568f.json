{"ast":null,"code":"'use client'; // src/use-theme.ts\n\nimport { ThemeContext } from \"@emotion/react\";\nimport { useContext } from \"react\";\n\nfunction useTheme() {\n  const theme = useContext(ThemeContext);\n\n  if (!theme) {\n    throw Error(\"useTheme: `theme` is undefined. Seems you forgot to wrap your app in `<ChakraProvider />` or `<ThemeProvider />`\");\n  }\n\n  return theme;\n}\n\nexport { useTheme };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/system/src/use-theme.ts"],"names":[],"mappings":";;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,UAAT,QAA2B,OAA3B;;AAOO,SAAS,QAAT,GAA6C;AAClD,QAAM,KAAA,GAAQ,UAAA,CACZ,YADY,CAAd;;AAGA,MAAI,CAAC,KAAL,EAAY;AACV,UAAM,KAAA,CACJ,kHADI,CAAN;AAGF;;AAEA,SAAO,KAAP;AACF","sourcesContent":["import { WithCSSVar } from \"@chakra-ui/styled-system\"\nimport { Dict } from \"@chakra-ui/utils\"\nimport { ThemeContext } from \"@emotion/react\"\nimport { useContext } from \"react\"\n\n/**\n * `useTheme` is a custom hook used to get the theme object from context.\n *\n * @see Docs https://chakra-ui.com/docs/hooks/use-theme\n */\nexport function useTheme<T extends object = Dict>() {\n  const theme = useContext(\n    ThemeContext as unknown as React.Context<T | undefined>,\n  )\n  if (!theme) {\n    throw Error(\n      \"useTheme: `theme` is undefined. Seems you forgot to wrap your app in `<ChakraProvider />` or `<ThemeProvider />`\",\n    )\n  }\n\n  return theme as WithCSSVar<T>\n}\n"]},"metadata":{},"sourceType":"module"}