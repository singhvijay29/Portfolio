{"ast":null,"code":"'use client';\n\nimport { commonStyles } from \"./chunk-6XCKNNTK.mjs\";\nimport { useEditableContext, useEditableStyles } from \"./chunk-WYY72ITE.mjs\"; // src/editable-preview.tsx\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar EditablePreview = forwardRef(function EditablePreview2(props, ref) {\n  const {\n    getPreviewProps\n  } = useEditableContext();\n  const styles = useEditableStyles();\n  const previewProps = getPreviewProps(props, ref);\n\n  const _className = cx(\"chakra-editable__preview\", props.className);\n\n  return /* @__PURE__ */jsx(chakra.span, { ...previewProps,\n    __css: {\n      cursor: \"text\",\n      display: \"inline-block\",\n      ...commonStyles,\n      ...styles.preview\n    },\n    className: _className\n  });\n});\nEditablePreview.displayName = \"EditablePreview\";\nexport { EditablePreview };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/editable/src/editable-preview.tsx"],"names":["EditablePreview"],"mappings":";;;;;AAAA,SAAS,MAAT,EAAiB,UAAjB,QAAoD,mBAApD;AACA,SAAS,EAAT,QAAmB,yBAAnB;AAoBM,SAAA,GAAA,QAAA,mBAAA;AATC,IAAM,eAAA,GAAkB,UAAA,CAC7B,SAASA,gBAAT,CAAyB,KAAzB,EAAgC,GAAhC,EAAqC;AACnC,QAAM;AAAE,IAAA;AAAF,MAAsB,kBAAA,EAA5B;AACA,QAAM,MAAA,GAAS,iBAAA,EAAf;AAEA,QAAM,YAAA,GAAe,eAAA,CAAgB,KAAhB,EAAuB,GAAvB,CAArB;;AACA,QAAM,UAAA,GAAa,EAAA,CAAG,0BAAH,EAA+B,KAAA,CAAM,SAArC,CAAnB;;AAEA,SACE,eAAA,GAAA,CAAC,MAAA,CAAO,IAAR,EAAC,EACE,GAAG,YADL;AAEC,IAAA,KAAA,EAAO;AACL,MAAA,MAAA,EAAQ,MADH;AAEL,MAAA,OAAA,EAAS,cAFJ;AAGL,SAAG,YAHE;AAIL,SAAG,MAAA,CAAO;AAJL,KAFR;AAQC,IAAA,SAAA,EAAW;AARZ,GAAD,CADF;AAYF,CApB6B,CAAxB;AAsBP,eAAA,CAAgB,WAAhB,GAA8B,iBAA9B","sourcesContent":["import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useEditableContext, useEditableStyles } from \"./editable-context\"\nimport { commonStyles } from \"./shared\"\n\nexport interface EditablePreviewProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * EditablePreview\n *\n * The `span` used to display the final value, in the `preview` mode\n */\nexport const EditablePreview = forwardRef<EditablePreviewProps, \"span\">(\n  function EditablePreview(props, ref) {\n    const { getPreviewProps } = useEditableContext()\n    const styles = useEditableStyles()\n\n    const previewProps = getPreviewProps(props, ref) as HTMLChakraProps<\"span\">\n    const _className = cx(\"chakra-editable__preview\", props.className)\n\n    return (\n      <chakra.span\n        {...previewProps}\n        __css={{\n          cursor: \"text\",\n          display: \"inline-block\",\n          ...commonStyles,\n          ...styles.preview,\n        }}\n        className={_className}\n      />\n    )\n  },\n)\nEditablePreview.displayName = \"EditablePreview\"\n"]},"metadata":{},"sourceType":"module"}