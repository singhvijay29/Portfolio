{"ast":null,"code":"'use client'; // src/grid-item.tsx\n\nimport { forwardRef, chakra } from \"@chakra-ui/system\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { jsx } from \"react/jsx-runtime\";\n\nfunction spanFn(span) {\n  return mapResponsive(span, value => value === \"auto\" ? \"auto\" : `span ${value}/span ${value}`);\n}\n\nvar GridItem = forwardRef(function GridItem2(props, ref) {\n  const {\n    area,\n    colSpan,\n    colStart,\n    colEnd,\n    rowEnd,\n    rowSpan,\n    rowStart,\n    ...rest\n  } = props;\n  const styles = compact({\n    gridArea: area,\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd\n  });\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    __css: styles,\n    ...rest\n  });\n});\nGridItem.displayName = \"GridItem\";\nexport { GridItem };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/layout/src/grid-item.tsx"],"names":["GridItem"],"mappings":";;AAAA,SAGE,UAHF,EAIE,MAJF,QAKO,mBALP;AAMA,SAAS,OAAT,QAAwB,yBAAxB;AACA,SAAS,aAAT,QAA8B,6BAA9B;AAqES,SAAA,GAAA,QAAA,mBAAA;;AA/BT,SAAS,MAAT,CAAgB,IAAhB,EAAyD;AACvD,SAAO,aAAA,CAAc,IAAd,EAAqB,KAAD,IACzB,KAAA,KAAU,MAAV,GAAmB,MAAnB,GAA4B,QAAQ,KAAK,SAAS,KAAK,EADlD,CAAP;AAGF;;AAEO,IAAM,QAAA,GAAW,UAAA,CAAiC,SAASA,SAAT,CACvD,KADuD,EAEvD,GAFuD,EAGvD;AACA,QAAM;AACJ,IAAA,IADI;AAEJ,IAAA,OAFI;AAGJ,IAAA,QAHI;AAIJ,IAAA,MAJI;AAKJ,IAAA,MALI;AAMJ,IAAA,OANI;AAOJ,IAAA,QAPI;AAQJ,OAAG;AARC,MASF,KATJ;AAWA,QAAM,MAAA,GAAS,OAAA,CAAQ;AACrB,IAAA,QAAA,EAAU,IADW;AAErB,IAAA,UAAA,EAAY,MAAA,CAAO,OAAP,CAFS;AAGrB,IAAA,OAAA,EAAS,MAAA,CAAO,OAAP,CAHY;AAIrB,IAAA,eAAA,EAAiB,QAJI;AAKrB,IAAA,aAAA,EAAe,MALM;AAMrB,IAAA,YAAA,EAAc,QANO;AAOrB,IAAA,UAAA,EAAY;AAPS,GAAR,CAAf;AAUA,SAAO,eAAA,GAAA,CAAC,MAAA,CAAO,GAAR,EAAC;AAAW,IAAA,GAAX;AAAqB,IAAA,KAAA,EAAO,MAA5B;AAAqC,OAAG;AAAxC,GAAD,CAAP;AACD,CA1BuB,CAAjB;AA4BP,QAAA,CAAS,WAAT,GAAuB,UAAvB","sourcesContent":["import {\n  ResponsiveValue,\n  SystemProps,\n  forwardRef,\n  chakra,\n} from \"@chakra-ui/system\"\nimport { compact } from \"@chakra-ui/object-utils\"\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\"\n\nimport { BoxProps } from \"./box\"\n\nexport interface GridItemProps extends BoxProps {\n  /**\n   * Shorthand prop for `gridArea`\n   * @type SystemProps[\"gridArea\"]\n   */\n  area?: SystemProps[\"gridArea\"]\n  /**\n   * The number of columns the grid item should `span`.\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  colSpan?: ResponsiveValue<number | \"auto\">\n  /**\n   * The column number the grid item should start.\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  colStart?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  colEnd?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  rowStart?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  rowEnd?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  rowSpan?: ResponsiveValue<number | \"auto\">\n}\n\nfunction spanFn(span?: ResponsiveValue<number | \"auto\">) {\n  return mapResponsive(span, (value) =>\n    value === \"auto\" ? \"auto\" : `span ${value}/span ${value}`,\n  )\n}\n\nexport const GridItem = forwardRef<GridItemProps, \"div\">(function GridItem(\n  props,\n  ref,\n) {\n  const {\n    area,\n    colSpan,\n    colStart,\n    colEnd,\n    rowEnd,\n    rowSpan,\n    rowStart,\n    ...rest\n  } = props\n\n  const styles = compact({\n    gridArea: area,\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd,\n  })\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nGridItem.displayName = \"GridItem\"\n"]},"metadata":{},"sourceType":"module"}