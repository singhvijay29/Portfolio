{"ast":null,"code":"'use client'; // src/badge.tsx\n\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Badge = forwardRef(function Badge2(props, ref) {\n  const styles = useStyleConfig(\"Badge\", props);\n  const {\n    className,\n    ...rest\n  } = omitThemingProps(props);\n  return /* @__PURE__ */jsx(chakra.span, {\n    ref,\n    className: cx(\"chakra-badge\", props.className),\n    ...rest,\n    __css: {\n      display: \"inline-block\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      ...styles\n    }\n  });\n});\nBadge.displayName = \"Badge\";\nexport { Badge };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/layout/src/badge.tsx"],"names":["Badge"],"mappings":";;AAAA,SACE,MADF,EAEE,UAFF,EAGE,gBAHF,EAKE,cALF,QAOO,mBAPP;AAQA,SAAS,EAAT,QAAmB,yBAAnB;AAiBI,SAAA,GAAA,QAAA,mBAAA;AALG,IAAM,KAAA,GAAQ,UAAA,CAA+B,SAASA,MAAT,CAAe,KAAf,EAAsB,GAAtB,EAA2B;AAC7E,QAAM,MAAA,GAAS,cAAA,CAAe,OAAf,EAAwB,KAAxB,CAAf;AACA,QAAM;AAAE,IAAA,SAAF;AAAa,OAAG;AAAhB,MAAyB,gBAAA,CAAiB,KAAjB,CAA/B;AAEA,SACE,eAAA,GAAA,CAAC,MAAA,CAAO,IAAR,EAAC;AACC,IAAA,GADD;AAEC,IAAA,SAAA,EAAW,EAAA,CAAG,cAAH,EAAmB,KAAA,CAAM,SAAzB,CAFZ;AAGE,OAAG,IAHL;AAIC,IAAA,KAAA,EAAO;AACL,MAAA,OAAA,EAAS,cADJ;AAEL,MAAA,UAAA,EAAY,QAFP;AAGL,MAAA,aAAA,EAAe,QAHV;AAIL,SAAG;AAJE;AAJR,GAAD,CADF;AAaD,CAjBoB,CAAd;AAmBP,KAAA,CAAM,WAAN,GAAoB,OAApB","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface BadgeProps\n  extends HTMLChakraProps<\"span\">,\n    ThemingProps<\"Badge\"> {}\n\n/**\n * React component used to display notifications, messages, or\n * statuses in different shapes and sizes.\n *\n * @see Docs https://chakra-ui.com/badge\n */\nexport const Badge = forwardRef<BadgeProps, \"span\">(function Badge(props, ref) {\n  const styles = useStyleConfig(\"Badge\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.span\n      ref={ref}\n      className={cx(\"chakra-badge\", props.className)}\n      {...rest}\n      __css={{\n        display: \"inline-block\",\n        whiteSpace: \"nowrap\",\n        verticalAlign: \"middle\",\n        ...styles,\n      }}\n    />\n  )\n})\n\nBadge.displayName = \"Badge\"\n"]},"metadata":{},"sourceType":"module"}