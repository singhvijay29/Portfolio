{"ast":null,"code":"'use client'; // src/use-latest-ref.ts\n\nimport { useRef } from \"react\";\n\nfunction useLatestRef(value) {\n  const ref = useRef(null);\n  ref.current = value;\n  return ref;\n}\n\nexport { useLatestRef };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/hooks/src/use-latest-ref.ts"],"names":[],"mappings":";;AAAA,SAAS,MAAT,QAAuB,OAAvB;;AAQO,SAAS,YAAT,CAAyB,KAAzB,EAAmC;AACxC,QAAM,GAAA,GAAM,MAAA,CAAiB,IAAjB,CAAZ;AACA,EAAA,GAAA,CAAI,OAAJ,GAAc,KAAd;AACA,SAAO,GAAP;AACF","sourcesContent":["import { useRef } from \"react\"\n\n/**\n * React hook to persist any value between renders,\n * but keeps it up-to-date if it changes.\n *\n * @param value the value or function to persist\n */\nexport function useLatestRef<T>(value: T) {\n  const ref = useRef<T | null>(null)\n  ref.current = value\n  return ref as React.MutableRefObject<T>\n}\n"]},"metadata":{},"sourceType":"module"}