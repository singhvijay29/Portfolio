{"ast":null,"code":"import { FOCUS_DISABLED, FOCUS_GROUP } from '../constants';\nimport { asArray, toArray } from './array';\n/**\n * in case of multiple nodes nested inside each other\n * keeps only top ones\n * this is O(nlogn)\n * @param nodes\n * @returns {*}\n */\n\nvar filterNested = function (nodes) {\n  var contained = new Set();\n  var l = nodes.length;\n\n  for (var i = 0; i < l; i += 1) {\n    for (var j = i + 1; j < l; j += 1) {\n      var position = nodes[i].compareDocumentPosition(nodes[j]);\n      /* eslint-disable no-bitwise */\n\n      if ((position & Node.DOCUMENT_POSITION_CONTAINED_BY) > 0) {\n        contained.add(j);\n      }\n\n      if ((position & Node.DOCUMENT_POSITION_CONTAINS) > 0) {\n        contained.add(i);\n      }\n      /* eslint-enable */\n\n    }\n  }\n\n  return nodes.filter(function (_, index) {\n    return !contained.has(index);\n  });\n};\n/**\n * finds top most parent for a node\n * @param node\n * @returns {*}\n */\n\n\nvar getTopParent = function (node) {\n  return node.parentNode ? getTopParent(node.parentNode) : node;\n};\n/**\n * returns all \"focus containers\" inside a given node\n * @param node - node or nodes to look inside\n * @returns Element[]\n */\n\n\nexport var getAllAffectedNodes = function (node) {\n  var nodes = asArray(node);\n  return nodes.filter(Boolean).reduce(function (acc, currentNode) {\n    var group = currentNode.getAttribute(FOCUS_GROUP);\n    acc.push.apply(acc, group ? filterNested(toArray(getTopParent(currentNode).querySelectorAll(\"[\".concat(FOCUS_GROUP, \"=\\\"\").concat(group, \"\\\"]:not([\").concat(FOCUS_DISABLED, \"=\\\"disabled\\\"])\")))) : [currentNode]);\n    return acc;\n  }, []);\n};","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/focus-lock/dist/es2015/utils/all-affected.js"],"names":["FOCUS_DISABLED","FOCUS_GROUP","asArray","toArray","filterNested","nodes","contained","Set","l","length","i","j","position","compareDocumentPosition","Node","DOCUMENT_POSITION_CONTAINED_BY","add","DOCUMENT_POSITION_CONTAINS","filter","_","index","has","getTopParent","node","parentNode","getAllAffectedNodes","Boolean","reduce","acc","currentNode","group","getAttribute","push","apply","querySelectorAll","concat"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,cAA5C;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,SAAjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,YAAY,GAAG,UAAUC,KAAV,EAAiB;AAChC,MAAIC,SAAS,GAAG,IAAIC,GAAJ,EAAhB;AACA,MAAIC,CAAC,GAAGH,KAAK,CAACI,MAAd;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAApB,EAAuBE,CAAC,IAAI,CAA5B,EAA+B;AAC3B,SAAK,IAAIC,CAAC,GAAGD,CAAC,GAAG,CAAjB,EAAoBC,CAAC,GAAGH,CAAxB,EAA2BG,CAAC,IAAI,CAAhC,EAAmC;AAC/B,UAAIC,QAAQ,GAAGP,KAAK,CAACK,CAAD,CAAL,CAASG,uBAAT,CAAiCR,KAAK,CAACM,CAAD,CAAtC,CAAf;AACA;;AACA,UAAI,CAACC,QAAQ,GAAGE,IAAI,CAACC,8BAAjB,IAAmD,CAAvD,EAA0D;AACtDT,QAAAA,SAAS,CAACU,GAAV,CAAcL,CAAd;AACH;;AACD,UAAI,CAACC,QAAQ,GAAGE,IAAI,CAACG,0BAAjB,IAA+C,CAAnD,EAAsD;AAClDX,QAAAA,SAAS,CAACU,GAAV,CAAcN,CAAd;AACH;AACD;;AACH;AACJ;;AACD,SAAOL,KAAK,CAACa,MAAN,CAAa,UAAUC,CAAV,EAAaC,KAAb,EAAoB;AAAE,WAAO,CAACd,SAAS,CAACe,GAAV,CAAcD,KAAd,CAAR;AAA+B,GAAlE,CAAP;AACH,CAjBD;AAkBA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,YAAY,GAAG,UAAUC,IAAV,EAAgB;AAC/B,SAAOA,IAAI,CAACC,UAAL,GAAkBF,YAAY,CAACC,IAAI,CAACC,UAAN,CAA9B,GAAkDD,IAAzD;AACH,CAFD;AAGA;AACA;AACA;AACA;AACA;;;AACA,OAAO,IAAIE,mBAAmB,GAAG,UAAUF,IAAV,EAAgB;AAC7C,MAAIlB,KAAK,GAAGH,OAAO,CAACqB,IAAD,CAAnB;AACA,SAAOlB,KAAK,CAACa,MAAN,CAAaQ,OAAb,EAAsBC,MAAtB,CAA6B,UAAUC,GAAV,EAAeC,WAAf,EAA4B;AAC5D,QAAIC,KAAK,GAAGD,WAAW,CAACE,YAAZ,CAAyB9B,WAAzB,CAAZ;AACA2B,IAAAA,GAAG,CAACI,IAAJ,CAASC,KAAT,CAAeL,GAAf,EAAqBE,KAAK,GACpB1B,YAAY,CAACD,OAAO,CAACmB,YAAY,CAACO,WAAD,CAAZ,CAA0BK,gBAA1B,CAA2C,IAAIC,MAAJ,CAAWlC,WAAX,EAAwB,KAAxB,EAA+BkC,MAA/B,CAAsCL,KAAtC,EAA6C,WAA7C,EAA0DK,MAA1D,CAAiEnC,cAAjE,EAAiF,iBAAjF,CAA3C,CAAD,CAAR,CADQ,GAEpB,CAAC6B,WAAD,CAFN;AAGA,WAAOD,GAAP;AACH,GANM,EAMJ,EANI,CAAP;AAOH,CATM","sourcesContent":["import { FOCUS_DISABLED, FOCUS_GROUP } from '../constants';\nimport { asArray, toArray } from './array';\n/**\n * in case of multiple nodes nested inside each other\n * keeps only top ones\n * this is O(nlogn)\n * @param nodes\n * @returns {*}\n */\nvar filterNested = function (nodes) {\n    var contained = new Set();\n    var l = nodes.length;\n    for (var i = 0; i < l; i += 1) {\n        for (var j = i + 1; j < l; j += 1) {\n            var position = nodes[i].compareDocumentPosition(nodes[j]);\n            /* eslint-disable no-bitwise */\n            if ((position & Node.DOCUMENT_POSITION_CONTAINED_BY) > 0) {\n                contained.add(j);\n            }\n            if ((position & Node.DOCUMENT_POSITION_CONTAINS) > 0) {\n                contained.add(i);\n            }\n            /* eslint-enable */\n        }\n    }\n    return nodes.filter(function (_, index) { return !contained.has(index); });\n};\n/**\n * finds top most parent for a node\n * @param node\n * @returns {*}\n */\nvar getTopParent = function (node) {\n    return node.parentNode ? getTopParent(node.parentNode) : node;\n};\n/**\n * returns all \"focus containers\" inside a given node\n * @param node - node or nodes to look inside\n * @returns Element[]\n */\nexport var getAllAffectedNodes = function (node) {\n    var nodes = asArray(node);\n    return nodes.filter(Boolean).reduce(function (acc, currentNode) {\n        var group = currentNode.getAttribute(FOCUS_GROUP);\n        acc.push.apply(acc, (group\n            ? filterNested(toArray(getTopParent(currentNode).querySelectorAll(\"[\".concat(FOCUS_GROUP, \"=\\\"\").concat(group, \"\\\"]:not([\").concat(FOCUS_DISABLED, \"=\\\"disabled\\\"])\"))))\n            : [currentNode]));\n        return acc;\n    }, []);\n};\n"]},"metadata":{},"sourceType":"module"}