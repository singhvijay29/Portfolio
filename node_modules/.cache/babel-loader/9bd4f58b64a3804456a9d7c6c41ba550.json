{"ast":null,"code":"'use client';\n\nimport { useMenuStyles } from \"./chunk-UZJ3TPNQ.mjs\"; // src/styled-menu-item.tsx\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StyledMenuItem = forwardRef((props, ref) => {\n  const {\n    type,\n    ...rest\n  } = props;\n  const styles = useMenuStyles();\n  const btnType = rest.as || type ? type != null ? type : void 0 : \"button\";\n  const buttonStyles = useMemo(() => ({\n    textDecoration: \"none\",\n    color: \"inherit\",\n    userSelect: \"none\",\n    display: \"flex\",\n    width: \"100%\",\n    alignItems: \"center\",\n    textAlign: \"start\",\n    flex: \"0 0 auto\",\n    outline: 0,\n    ...styles.item\n  }), [styles.item]);\n  return /* @__PURE__ */jsx(chakra.button, {\n    ref,\n    type: btnType,\n    ...rest,\n    __css: buttonStyles\n  });\n});\nexport { StyledMenuItem };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/menu/src/styled-menu-item.tsx"],"names":[],"mappings":";;;;AAAA,SAAS,MAAT,EAAiB,UAAjB,QAAsD,mBAAtD;AACA,SAAS,OAAT,QAAwB,OAAxB;AAiCM,SAAA,GAAA,QAAA,mBAAA;AA7BC,IAAM,cAAA,GAAiB,UAAA,CAC5B,CAAC,KAAD,EAAQ,GAAR,KAAgB;AACd,QAAM;AAAE,IAAA,IAAF;AAAQ,OAAG;AAAX,MAAoB,KAA1B;AACA,QAAM,MAAA,GAAS,aAAA,EAAf;AAOA,QAAM,OAAA,GAAU,IAAA,CAAK,EAAL,IAAW,IAAX,GAAkB,IAAA,IAAA,IAAA,GAAA,IAAA,GAAQ,KAAA,CAA1B,GAAsC,QAAtD;AAEA,QAAM,YAAA,GAAkC,OAAA,CACtC,OAAO;AACL,IAAA,cAAA,EAAgB,MADX;AAEL,IAAA,KAAA,EAAO,SAFF;AAGL,IAAA,UAAA,EAAY,MAHP;AAIL,IAAA,OAAA,EAAS,MAJJ;AAKL,IAAA,KAAA,EAAO,MALF;AAML,IAAA,UAAA,EAAY,QANP;AAOL,IAAA,SAAA,EAAW,OAPN;AAQL,IAAA,IAAA,EAAM,UARD;AASL,IAAA,OAAA,EAAS,CATJ;AAUL,OAAG,MAAA,CAAO;AAVL,GAAP,CADsC,EAatC,CAAC,MAAA,CAAO,IAAR,CAbsC,CAAxC;AAgBA,SACE,eAAA,GAAA,CAAC,MAAA,CAAO,MAAR,EAAC;AAAc,IAAA,GAAd;AAAwB,IAAA,IAAA,EAAM,OAA9B;AAAwC,OAAG,IAA3C;AAAiD,IAAA,KAAA,EAAO;AAAxD,GAAD,CADF;AAGF,CA/B4B,CAAvB","sourcesContent":["import { chakra, forwardRef, SystemStyleObject } from \"@chakra-ui/system\"\nimport { useMemo } from \"react\"\nimport { useMenuStyles } from \"./menu\"\nimport { StyledMenuItemProps } from \"./menu-item\"\n\nexport const StyledMenuItem = forwardRef<StyledMenuItemProps, \"button\">(\n  (props, ref) => {\n    const { type, ...rest } = props\n    const styles = useMenuStyles()\n\n    /**\n     * Given another component, use its type if present\n     * Else, use no type to avoid invalid html, e.g. <a type=\"button\" />\n     * Else, fall back to \"button\"\n     */\n    const btnType = rest.as || type ? type ?? undefined : \"button\"\n\n    const buttonStyles: SystemStyleObject = useMemo(\n      () => ({\n        textDecoration: \"none\",\n        color: \"inherit\",\n        userSelect: \"none\",\n        display: \"flex\",\n        width: \"100%\",\n        alignItems: \"center\",\n        textAlign: \"start\",\n        flex: \"0 0 auto\",\n        outline: 0,\n        ...styles.item,\n      }),\n      [styles.item],\n    )\n\n    return (\n      <chakra.button ref={ref} type={btnType} {...rest} __css={buttonStyles} />\n    )\n  },\n)\n"]},"metadata":{},"sourceType":"module"}