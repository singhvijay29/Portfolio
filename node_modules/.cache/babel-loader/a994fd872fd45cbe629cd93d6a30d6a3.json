{"ast":null,"code":"'use client';\n\nimport { usePopoverContext } from \"./chunk-Z3POGKNI.mjs\"; // src/popover-trigger.tsx\n\nimport { Children, cloneElement } from \"react\";\n\nfunction PopoverTrigger(props) {\n  const child = Children.only(props.children);\n  const {\n    getTriggerProps\n  } = usePopoverContext();\n  return cloneElement(child, getTriggerProps(child.props, child.ref));\n}\n\nPopoverTrigger.displayName = \"PopoverTrigger\";\nexport { PopoverTrigger };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/popover/src/popover-trigger.tsx"],"names":[],"mappings":";;;;AAAA,SAAS,QAAT,EAAmB,YAAnB,QAAuC,OAAvC;;AAQO,SAAS,cAAT,CAAwB,KAAxB,EAA8D;AAEnE,QAAM,KAAA,GAAa,QAAA,CAAS,IAAT,CAAc,KAAA,CAAM,QAApB,CAAnB;AACA,QAAM;AAAE,IAAA;AAAF,MAAsB,iBAAA,EAA5B;AACA,SAAO,YAAA,CAAa,KAAb,EAAoB,eAAA,CAAgB,KAAA,CAAM,KAAtB,EAA6B,KAAA,CAAM,GAAnC,CAApB,CAAP;AACF;;AAEA,cAAA,CAAe,WAAf,GAA6B,gBAA7B","sourcesContent":["import { Children, cloneElement } from \"react\"\nimport { usePopoverContext } from \"./popover-context\"\n\n/**\n * PopoverTrigger opens the popover's content. It must be an interactive element\n * such as `button` or `a`.\n */\n\nexport function PopoverTrigger(props: { children: React.ReactNode }) {\n  // enforce a single child\n  const child: any = Children.only(props.children)\n  const { getTriggerProps } = usePopoverContext()\n  return cloneElement(child, getTriggerProps(child.props, child.ref))\n}\n\nPopoverTrigger.displayName = \"PopoverTrigger\"\n"]},"metadata":{},"sourceType":"module"}