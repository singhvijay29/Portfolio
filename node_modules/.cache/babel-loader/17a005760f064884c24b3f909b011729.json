{"ast":null,"code":"'use client';\n\nimport { useAvatarStyles } from \"./chunk-RD3LQCU3.mjs\"; // src/avatar-badge.tsx\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar placementMap = {\n  \"top-start\": {\n    top: \"0\",\n    insetStart: \"0\",\n    transform: \"translate(-25%, -25%)\"\n  },\n  \"top-end\": {\n    top: \"0\",\n    insetEnd: \"0\",\n    transform: \"translate(25%, -25%)\"\n  },\n  \"bottom-start\": {\n    bottom: \"0\",\n    insetStart: \"0\",\n    transform: \"translate(-25%, 25%)\"\n  },\n  \"bottom-end\": {\n    bottom: \"0\",\n    insetEnd: \"0\",\n    transform: \"translate(25%, 25%)\"\n  }\n};\nvar AvatarBadge = forwardRef(function AvatarBadge2(props, ref) {\n  const {\n    placement = \"bottom-end\",\n    className,\n    ...rest\n  } = props;\n  const styles = useAvatarStyles();\n  const placementStyles = placementMap[placement];\n  const badgeStyles = {\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    ...placementStyles,\n    ...styles.badge\n  };\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    ...rest,\n    className: cx(\"chakra-avatar__badge\", className),\n    __css: badgeStyles\n  });\n});\nAvatarBadge.displayName = \"AvatarBadge\";\nexport { AvatarBadge };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/avatar/src/avatar-badge.tsx"],"names":["AvatarBadge"],"mappings":";;;;AAAA,SACE,MADF,EAEE,UAFF,QAKO,mBALP;AAMA,SAAS,EAAT,QAAmB,yBAAnB;AAqDM,SAAA,GAAA,QAAA,mBAAA;AAhDN,IAAM,YAAA,GAA0D;AAC9D,eAAa;AACX,IAAA,GAAA,EAAK,GADM;AAEX,IAAA,UAAA,EAAY,GAFD;AAGX,IAAA,SAAA,EAAW;AAHA,GADiD;AAM9D,aAAW;AACT,IAAA,GAAA,EAAK,GADI;AAET,IAAA,QAAA,EAAU,GAFD;AAGT,IAAA,SAAA,EAAW;AAHF,GANmD;AAW9D,kBAAgB;AACd,IAAA,MAAA,EAAQ,GADM;AAEd,IAAA,UAAA,EAAY,GAFE;AAGd,IAAA,SAAA,EAAW;AAHG,GAX8C;AAgB9D,gBAAc;AACZ,IAAA,MAAA,EAAQ,GADI;AAEZ,IAAA,QAAA,EAAU,GAFE;AAGZ,IAAA,SAAA,EAAW;AAHC;AAhBgD,CAAhE;AA+BO,IAAM,WAAA,GAAc,UAAA,CACzB,SAASA,YAAT,CAAqB,KAArB,EAA4B,GAA5B,EAAiC;AAC/B,QAAM;AAAE,IAAA,SAAA,GAAY,YAAd;AAA4B,IAAA,SAA5B;AAAuC,OAAG;AAA1C,MAAmD,KAAzD;AACA,QAAM,MAAA,GAAS,eAAA,EAAf;AAEA,QAAM,eAAA,GAAkB,YAAA,CAAa,SAAb,CAAxB;AAEA,QAAM,WAAA,GAAiC;AACrC,IAAA,QAAA,EAAU,UAD2B;AAErC,IAAA,OAAA,EAAS,MAF4B;AAGrC,IAAA,UAAA,EAAY,QAHyB;AAIrC,IAAA,cAAA,EAAgB,QAJqB;AAKrC,OAAG,eALkC;AAMrC,OAAG,MAAA,CAAO;AAN2B,GAAvC;AASA,SACE,eAAA,GAAA,CAAC,MAAA,CAAO,GAAR,EAAC;AACC,IAAA,GADD;AAEE,OAAG,IAFL;AAGC,IAAA,SAAA,EAAW,EAAA,CAAG,sBAAH,EAA2B,SAA3B,CAHZ;AAIC,IAAA,KAAA,EAAO;AAJR,GAAD,CADF;AAQF,CAxByB,CAApB;AA2BP,WAAA,CAAY,WAAZ,GAA0B,aAA1B","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  SystemStyleObject,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useAvatarStyles } from \"./avatar-context\"\n\ntype BadgePlacement = \"top-start\" | \"top-end\" | \"bottom-start\" | \"bottom-end\"\n\nconst placementMap: Record<BadgePlacement, SystemStyleObject> = {\n  \"top-start\": {\n    top: \"0\",\n    insetStart: \"0\",\n    transform: \"translate(-25%, -25%)\",\n  },\n  \"top-end\": {\n    top: \"0\",\n    insetEnd: \"0\",\n    transform: \"translate(25%, -25%)\",\n  },\n  \"bottom-start\": {\n    bottom: \"0\",\n    insetStart: \"0\",\n    transform: \"translate(-25%, 25%)\",\n  },\n  \"bottom-end\": {\n    bottom: \"0\",\n    insetEnd: \"0\",\n    transform: \"translate(25%, 25%)\",\n  },\n}\n\nexport interface AvatarBadgeProps extends HTMLChakraProps<\"div\"> {\n  placement?: BadgePlacement\n}\n\n/**\n * AvatarBadge used to show extra badge to the top-right\n * or bottom-right corner of an avatar.\n */\nexport const AvatarBadge = forwardRef<AvatarBadgeProps, \"div\">(\n  function AvatarBadge(props, ref) {\n    const { placement = \"bottom-end\", className, ...rest } = props\n    const styles = useAvatarStyles()\n\n    const placementStyles = placementMap[placement]\n\n    const badgeStyles: SystemStyleObject = {\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      ...placementStyles,\n      ...styles.badge,\n    }\n\n    return (\n      <chakra.div\n        ref={ref}\n        {...rest}\n        className={cx(\"chakra-avatar__badge\", className)}\n        __css={badgeStyles}\n      />\n    )\n  },\n)\n\nAvatarBadge.displayName = \"AvatarBadge\"\n"]},"metadata":{},"sourceType":"module"}