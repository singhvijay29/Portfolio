{"ast":null,"code":"'use client';\n\nimport { TRANSITION_DEFAULTS, withDelay } from \"./chunk-6NHXDBFO.mjs\"; // src/slide-fade.tsx\n\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { forwardRef } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar variants = {\n  initial: _ref => {\n    let {\n      offsetX,\n      offsetY,\n      transition,\n      transitionEnd,\n      delay\n    } = _ref;\n\n    var _a;\n\n    return {\n      opacity: 0,\n      x: offsetX,\n      y: offsetY,\n      transition: (_a = transition == null ? void 0 : transition.exit) != null ? _a : withDelay.exit(TRANSITION_DEFAULTS.exit, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n    };\n  },\n  enter: _ref2 => {\n    let {\n      transition,\n      transitionEnd,\n      delay\n    } = _ref2;\n\n    var _a;\n\n    return {\n      opacity: 1,\n      x: 0,\n      y: 0,\n      transition: (_a = transition == null ? void 0 : transition.enter) != null ? _a : withDelay.enter(TRANSITION_DEFAULTS.enter, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter\n    };\n  },\n  exit: _ref3 => {\n    let {\n      offsetY,\n      offsetX,\n      transition,\n      transitionEnd,\n      reverse,\n      delay\n    } = _ref3;\n\n    var _a;\n\n    const offset = {\n      x: offsetX,\n      y: offsetY\n    };\n    return {\n      opacity: 0,\n      transition: (_a = transition == null ? void 0 : transition.exit) != null ? _a : withDelay.exit(TRANSITION_DEFAULTS.exit, delay),\n      ...(reverse ? { ...offset,\n        transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n      } : {\n        transitionEnd: { ...offset,\n          ...(transitionEnd == null ? void 0 : transitionEnd.exit)\n        }\n      })\n    };\n  }\n};\nvar slideFadeConfig = {\n  initial: \"initial\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants\n};\nvar SlideFade = forwardRef(function SlideFade2(props, ref) {\n  const {\n    unmountOnExit,\n    in: isOpen,\n    reverse = true,\n    className,\n    offsetX = 0,\n    offsetY = 8,\n    transition,\n    transitionEnd,\n    delay,\n    ...rest\n  } = props;\n  const show = unmountOnExit ? isOpen && unmountOnExit : true;\n  const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  const custom = {\n    offsetX,\n    offsetY,\n    reverse,\n    transition,\n    transitionEnd,\n    delay\n  };\n  return /* @__PURE__ */jsx(AnimatePresence, {\n    custom,\n    children: show && /* @__PURE__ */jsx(motion.div, {\n      ref,\n      className: cx(\"chakra-offset-slide\", className),\n      custom,\n      ...slideFadeConfig,\n      animate,\n      ...rest\n    })\n  });\n});\nSlideFade.displayName = \"SlideFade\";\nexport { slideFadeConfig, SlideFade };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/transition/src/slide-fade.tsx"],"names":["SlideFade"],"mappings":"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","sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  Variants as _Variants,\n} from \"framer-motion\"\nimport { forwardRef } from \"react\"\nimport {\n  TRANSITION_DEFAULTS,\n  Variants,\n  withDelay,\n  WithTransitionConfig,\n} from \"./transition-utils\"\n\ninterface SlideFadeOptions {\n  /**\n   * The offset on the horizontal or `x` axis\n   * @default 0\n   */\n  offsetX?: string | number\n  /**\n   * The offset on the vertical or `y` axis\n   * @default 8\n   */\n  offsetY?: string | number\n  /**\n   * If `true`, the element will be transitioned back to the offset when it leaves.\n   * Otherwise, it'll only fade out\n   * @default true\n   */\n  reverse?: boolean\n}\n\nconst variants: Variants<SlideFadeOptions> = {\n  initial: ({ offsetX, offsetY, transition, transitionEnd, delay }) => ({\n    opacity: 0,\n    x: offsetX,\n    y: offsetY,\n    transition:\n      transition?.exit ?? withDelay.exit(TRANSITION_DEFAULTS.exit, delay),\n    transitionEnd: transitionEnd?.exit,\n  }),\n  enter: ({ transition, transitionEnd, delay }) => ({\n    opacity: 1,\n    x: 0,\n    y: 0,\n    transition:\n      transition?.enter ?? withDelay.enter(TRANSITION_DEFAULTS.enter, delay),\n    transitionEnd: transitionEnd?.enter,\n  }),\n  exit: ({ offsetY, offsetX, transition, transitionEnd, reverse, delay }) => {\n    const offset = { x: offsetX, y: offsetY }\n    return {\n      opacity: 0,\n      transition:\n        transition?.exit ?? withDelay.exit(TRANSITION_DEFAULTS.exit, delay),\n      ...(reverse\n        ? { ...offset, transitionEnd: transitionEnd?.exit }\n        : { transitionEnd: { ...offset, ...transitionEnd?.exit } }),\n    }\n  },\n}\n\nexport const slideFadeConfig: HTMLMotionProps<\"div\"> = {\n  initial: \"initial\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants: variants as _Variants,\n}\n\nexport interface SlideFadeProps\n  extends SlideFadeOptions,\n    WithTransitionConfig<HTMLMotionProps<\"div\">> {}\n\nexport const SlideFade = forwardRef<HTMLDivElement, SlideFadeProps>(\n  function SlideFade(props, ref) {\n    const {\n      unmountOnExit,\n      in: isOpen,\n      reverse = true,\n      className,\n      offsetX = 0,\n      offsetY = 8,\n      transition,\n      transitionEnd,\n      delay,\n      ...rest\n    } = props\n\n    const show = unmountOnExit ? isOpen && unmountOnExit : true\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n\n    const custom = {\n      offsetX,\n      offsetY,\n      reverse,\n      transition,\n      transitionEnd,\n      delay,\n    }\n\n    return (\n      <AnimatePresence custom={custom}>\n        {show && (\n          <motion.div\n            ref={ref}\n            className={cx(\"chakra-offset-slide\", className)}\n            custom={custom}\n            {...slideFadeConfig}\n            animate={animate}\n            {...rest}\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nSlideFade.displayName = \"SlideFade\"\n"]},"metadata":{},"sourceType":"module"}