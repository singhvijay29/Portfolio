{"ast":null,"code":"'use client';\n\nimport { useModalContext, useModalStyles } from \"./chunk-MSA2NPQT.mjs\"; // src/modal-header.tsx\n\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { useEffect } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar ModalHeader = forwardRef((props, ref) => {\n  const {\n    className,\n    ...rest\n  } = props;\n  const {\n    headerId,\n    setHeaderMounted\n  } = useModalContext();\n  useEffect(() => {\n    setHeaderMounted(true);\n    return () => setHeaderMounted(false);\n  }, [setHeaderMounted]);\n\n  const _className = cx(\"chakra-modal__header\", className);\n\n  const styles = useModalStyles();\n  const headerStyles = {\n    flex: 0,\n    ...styles.header\n  };\n  return /* @__PURE__ */jsx(chakra.header, {\n    ref,\n    className: _className,\n    id: headerId,\n    ...rest,\n    __css: headerStyles\n  });\n});\nModalHeader.displayName = \"ModalHeader\";\nexport { ModalHeader };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/modal/src/modal-header.tsx"],"names":[],"mappings":";;;;AAAA,SAAS,EAAT,QAAmB,yBAAnB;AACA,SAGE,MAHF,EAIE,UAJF,QAKO,mBALP;AAMA,SAAS,SAAT,QAA0B,OAA1B;AAqCM,SAAA,GAAA,QAAA,mBAAA;AAxBC,IAAM,WAAA,GAAc,UAAA,CACzB,CAAC,KAAD,EAAQ,GAAR,KAAgB;AACd,QAAM;AAAE,IAAA,SAAF;AAAa,OAAG;AAAhB,MAAyB,KAA/B;AAEA,QAAM;AAAE,IAAA,QAAF;AAAY,IAAA;AAAZ,MAAiC,eAAA,EAAvC;AAMA,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,gBAAA,CAAiB,IAAjB,CAAA;AACA,WAAO,MAAM,gBAAA,CAAiB,KAAjB,CAAb;AACF,GAHA,EAGG,CAAC,gBAAD,CAHH,CAAA;;AAKA,QAAM,UAAA,GAAa,EAAA,CAAG,sBAAH,EAA2B,SAA3B,CAAnB;;AAEA,QAAM,MAAA,GAAS,cAAA,EAAf;AACA,QAAM,YAAA,GAAkC;AACtC,IAAA,IAAA,EAAM,CADgC;AAEtC,OAAG,MAAA,CAAO;AAF4B,GAAxC;AAKA,SACE,eAAA,GAAA,CAAC,MAAA,CAAO,MAAR,EAAC;AACC,IAAA,GADD;AAEC,IAAA,SAAA,EAAW,UAFZ;AAGC,IAAA,EAAA,EAAI,QAHL;AAIE,OAAG,IAJL;AAKC,IAAA,KAAA,EAAO;AALR,GAAD,CADF;AASF,CAhCyB,CAApB;AAmCP,WAAA,CAAY,WAAZ,GAA0B,aAA1B","sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  HTMLChakraProps,\n  SystemStyleObject,\n  chakra,\n  forwardRef,\n} from \"@chakra-ui/system\"\nimport { useEffect } from \"react\"\n\nimport { useModalContext, useModalStyles } from \"./modal\"\n\nexport interface ModalHeaderProps extends HTMLChakraProps<\"header\"> {}\n\n/**\n * ModalHeader\n *\n * React component that houses the title of the modal.\n *\n * @see Docs https://chakra-ui.com/modal\n */\nexport const ModalHeader = forwardRef<ModalHeaderProps, \"header\">(\n  (props, ref) => {\n    const { className, ...rest } = props\n\n    const { headerId, setHeaderMounted } = useModalContext()\n\n    /**\n     * Notify us if this component was rendered or used,\n     * so we can append `aria-labelledby` automatically\n     */\n    useEffect(() => {\n      setHeaderMounted(true)\n      return () => setHeaderMounted(false)\n    }, [setHeaderMounted])\n\n    const _className = cx(\"chakra-modal__header\", className)\n\n    const styles = useModalStyles()\n    const headerStyles: SystemStyleObject = {\n      flex: 0,\n      ...styles.header,\n    }\n\n    return (\n      <chakra.header\n        ref={ref}\n        className={_className}\n        id={headerId}\n        {...rest}\n        __css={headerStyles}\n      />\n    )\n  },\n)\n\nModalHeader.displayName = \"ModalHeader\"\n"]},"metadata":{},"sourceType":"module"}