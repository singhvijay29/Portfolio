{"ast":null,"code":"'use client';\n\nimport { baseStyle } from \"./chunk-V7PAE35Z.mjs\"; // src/avatar-group.tsx\n\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"; // ../../utilities/object-utils/src/compact.ts\n\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n\n  for (let key in clone) {\n    if (clone[key] === void 0) delete clone[key];\n  }\n\n  return clone;\n} // src/avatar-group.tsx\n\n\nimport { cloneElement } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar AvatarGroup = forwardRef(function AvatarGroup2(props, ref) {\n  const styles = useMultiStyleConfig(\"Avatar\", props);\n  const {\n    children,\n    borderColor,\n    max,\n    spacing = \"-0.75rem\",\n    borderRadius = \"full\",\n    ...rest\n  } = omitThemingProps(props);\n  const validChildren = getValidChildren(children);\n  const childrenWithinMax = max != null ? validChildren.slice(0, max) : validChildren;\n  const excess = max != null ? validChildren.length - max : 0;\n  const reversedChildren = childrenWithinMax.reverse();\n  const clones = reversedChildren.map((child, index) => {\n    var _a;\n\n    const isFirstAvatar = index === 0;\n    const childProps = {\n      marginEnd: isFirstAvatar ? 0 : spacing,\n      size: props.size,\n      borderColor: (_a = child.props.borderColor) != null ? _a : borderColor,\n      showBorder: true\n    };\n    return cloneElement(child, compact(childProps));\n  });\n  const groupStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    flexDirection: \"row-reverse\",\n    ...styles.group\n  };\n  const excessStyles = {\n    borderRadius,\n    marginStart: spacing,\n    ...baseStyle,\n    ...styles.excessLabel\n  };\n  return /* @__PURE__ */jsxs(chakra.div, {\n    ref,\n    role: \"group\",\n    __css: groupStyles,\n    ...rest,\n    className: cx(\"chakra-avatar__group\", props.className),\n    children: [excess > 0 && /* @__PURE__ */jsx(chakra.span, {\n      className: \"chakra-avatar__excess\",\n      __css: excessStyles,\n      children: `+${excess}`\n    }), clones]\n  });\n});\nAvatarGroup.displayName = \"AvatarGroup\";\nexport { AvatarGroup };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/avatar/src/avatar-group.tsx","/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/utilities/object-utils/src/compact.ts"],"names":["AvatarGroup"],"mappings":";;;;AAAA,SACE,MADF,EAEE,UAFF,EAGE,gBAHF,EAOE,mBAPF,QASO,mBATP;AAUA,SAAS,EAAT,QAAmB,yBAAnB;AACA,SAAS,gBAAT,QAAiC,iCAAjC,C;;ACXO,SAAS,OAAT,CAA6C,MAA7C,EAAwD;AAC7D,QAAM,KAAA,GAAQ,MAAA,CAAO,MAAP,CAAc,EAAd,EAAkB,MAAlB,CAAd;;AACA,OAAA,IAAS,GAAT,IAAgB,KAAhB,EAAuB;AACrB,QAAI,KAAA,CAAM,GAAN,CAAA,KAAe,KAAA,CAAnB,EAA8B,OAAO,KAAA,CAAM,GAAN,CAAP;AAChC;;AACA,SAAO,KAAP;AACF,C;;;ADQA,SAAS,YAAT,QAA6B,OAA7B;AA0FM,SAQI,GARJ,EAAA,IAAA,QAAA,mBAAA;AA7DC,IAAM,WAAA,GAAc,UAAA,CACzB,SAASA,YAAT,CAAqB,KAArB,EAA4B,GAA5B,EAAiC;AAC/B,QAAM,MAAA,GAAS,mBAAA,CAAoB,QAApB,EAA8B,KAA9B,CAAf;AAEA,QAAM;AACJ,IAAA,QADI;AAEJ,IAAA,WAFI;AAGJ,IAAA,GAHI;AAIJ,IAAA,OAAA,GAAU,UAJN;AAKJ,IAAA,YAAA,GAAe,MALX;AAMJ,OAAG;AANC,MAOF,gBAAA,CAAiB,KAAjB,CAPJ;AASA,QAAM,aAAA,GAAgB,gBAAA,CAAiB,QAAjB,CAAtB;AAKA,QAAM,iBAAA,GACJ,GAAA,IAAO,IAAP,GAAc,aAAA,CAAc,KAAd,CAAoB,CAApB,EAAuB,GAAvB,CAAd,GAA4C,aAD9C;AAMA,QAAM,MAAA,GAAS,GAAA,IAAO,IAAP,GAAc,aAAA,CAAc,MAAd,GAAuB,GAArC,GAA2C,CAA1D;AAMA,QAAM,gBAAA,GAAmB,iBAAA,CAAkB,OAAlB,EAAzB;AAEA,QAAM,MAAA,GAAS,gBAAA,CAAiB,GAAjB,CAAqB,CAAC,KAAD,EAAQ,KAAR,KAAkB;AA3E1D,QAAA,EAAA;;AA4EM,UAAM,aAAA,GAAgB,KAAA,KAAU,CAAhC;AAEA,UAAM,UAAA,GAAa;AACjB,MAAA,SAAA,EAAW,aAAA,GAAgB,CAAhB,GAAoB,OADd;AAEjB,MAAA,IAAA,EAAM,KAAA,CAAM,IAFK;AAGjB,MAAA,WAAA,EAAA,CAAa,EAAA,GAAA,KAAA,CAAM,KAAN,CAAY,WAAzB,KAAa,IAAb,GAAa,EAAb,GAAwC,WAHvB;AAIjB,MAAA,UAAA,EAAY;AAJK,KAAnB;AAOA,WAAO,YAAA,CAAa,KAAb,EAAoB,OAAA,CAAQ,UAAR,CAApB,CAAP;AACD,GAXc,CAAf;AAaA,QAAM,WAAA,GAAiC;AACrC,IAAA,OAAA,EAAS,MAD4B;AAErC,IAAA,UAAA,EAAY,QAFyB;AAGrC,IAAA,cAAA,EAAgB,UAHqB;AAIrC,IAAA,aAAA,EAAe,aAJsB;AAKrC,OAAG,MAAA,CAAO;AAL2B,GAAvC;AAQA,QAAM,YAAA,GAAkC;AACtC,IAAA,YADsC;AAEtC,IAAA,WAAA,EAAa,OAFyB;AAGtC,OAAG,SAHmC;AAItC,OAAG,MAAA,CAAO;AAJ4B,GAAxC;AAOA,SACE,eAAA,IAAA,CAAC,MAAA,CAAO,GAAR,EAAC;AACC,IAAA,GADD;AAEC,IAAA,IAAA,EAAK,OAFN;AAGC,IAAA,KAAA,EAAO,WAHR;AAIE,OAAG,IAJL;AAKC,IAAA,SAAA,EAAW,EAAA,CAAG,sBAAH,EAA2B,KAAA,CAAM,SAAjC,CALZ;AAOE,IAAA,QAAA,EAAA,CAAA,MAAA,GAAS,CAAT,IACC,eAAA,GAAA,CAAC,MAAA,CAAO,IAAR,EAAC;AAAY,MAAA,SAAA,EAAU,uBAAtB;AAA8C,MAAA,KAAA,EAAO,YAArD;AACE,MAAA,QAAA,EAAA,IAAI,MAAA;AADN,KAAD,CADD,EAKA,MALA;AAPF,GAAD,CADF;AAgBF,CA5EyB,CAApB;AA+EP,WAAA,CAAY,WAAZ,GAA0B,aAA1B","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport { compact } from \"@chakra-ui/object-utils\"\nimport { baseStyle } from \"./avatar\"\nimport { cloneElement } from \"react\"\n\ninterface AvatarGroupOptions {\n  /**\n   * The children of the avatar group.\n   *\n   * Ideally should be `Avatar` and `MoreIndicator` components\n   */\n  children: React.ReactNode\n  /**\n   * The space between the avatars in the group.\n   * @default \"-0.75rem\"\n   * @type SystemProps[\"margin\"]\n   */\n  spacing?: SystemProps[\"margin\"]\n  /**\n   * The maximum number of visible avatars\n   */\n  max?: number\n}\n\nexport interface AvatarGroupProps\n  extends AvatarGroupOptions,\n    Omit<HTMLChakraProps<\"div\">, \"children\">,\n    ThemingProps<\"Avatar\"> {}\n\n/**\n * AvatarGroup displays a number of avatars grouped together in a stack.\n */\nexport const AvatarGroup = forwardRef<AvatarGroupProps, \"div\">(\n  function AvatarGroup(props, ref) {\n    const styles = useMultiStyleConfig(\"Avatar\", props)\n\n    const {\n      children,\n      borderColor,\n      max,\n      spacing = \"-0.75rem\",\n      borderRadius = \"full\",\n      ...rest\n    } = omitThemingProps(props)\n\n    const validChildren = getValidChildren(children)\n\n    /**\n     * get the avatars within the max\n     */\n    const childrenWithinMax =\n      max != null ? validChildren.slice(0, max) : validChildren\n\n    /**\n     * get the remaining avatar count\n     */\n    const excess = max != null ? validChildren.length - max : 0\n\n    /**\n     * Reversing the children is a great way to avoid using zIndex\n     * to overlap the avatars\n     */\n    const reversedChildren = childrenWithinMax.reverse()\n\n    const clones = reversedChildren.map((child, index) => {\n      const isFirstAvatar = index === 0\n\n      const childProps = {\n        marginEnd: isFirstAvatar ? 0 : spacing,\n        size: props.size,\n        borderColor: child.props.borderColor ?? borderColor,\n        showBorder: true,\n      }\n\n      return cloneElement(child, compact(childProps))\n    })\n\n    const groupStyles: SystemStyleObject = {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      flexDirection: \"row-reverse\",\n      ...styles.group,\n    }\n\n    const excessStyles: SystemStyleObject = {\n      borderRadius,\n      marginStart: spacing,\n      ...baseStyle,\n      ...styles.excessLabel,\n    }\n\n    return (\n      <chakra.div\n        ref={ref}\n        role=\"group\"\n        __css={groupStyles}\n        {...rest}\n        className={cx(\"chakra-avatar__group\", props.className)}\n      >\n        {excess > 0 && (\n          <chakra.span className=\"chakra-avatar__excess\" __css={excessStyles}>\n            {`+${excess}`}\n          </chakra.span>\n        )}\n        {clones}\n      </chakra.div>\n    )\n  },\n)\n\nAvatarGroup.displayName = \"AvatarGroup\"\n","export function compact<T extends Record<any, any>>(object: T) {\n  const clone = Object.assign({}, object)\n  for (let key in clone) {\n    if (clone[key] === undefined) delete clone[key]\n  }\n  return clone\n}\n"]},"metadata":{},"sourceType":"module"}