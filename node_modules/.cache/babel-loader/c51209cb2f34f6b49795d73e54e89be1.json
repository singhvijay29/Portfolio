{"ast":null,"code":"import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n  return Boolean(!easing || typeof easing === \"string\" && easing in supportedWaapiEasing || isBezierDefinition(easing) || Array.isArray(easing) && easing.every(isWaapiSupportedEasing));\n}\n\nconst cubicBezierAsString = _ref => {\n  let [a, b, c, d] = _ref;\n  return `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n};\n\nconst supportedWaapiEasing = {\n  linear: \"linear\",\n  ease: \"ease\",\n  easeIn: \"ease-in\",\n  easeOut: \"ease-out\",\n  easeInOut: \"ease-in-out\",\n  circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n  circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n  backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n  backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99])\n};\n\nfunction mapEasingToNativeEasingWithDefault(easing) {\n  return mapEasingToNativeEasing(easing) || supportedWaapiEasing.easeOut;\n}\n\nfunction mapEasingToNativeEasing(easing) {\n  if (!easing) {\n    return undefined;\n  } else if (isBezierDefinition(easing)) {\n    return cubicBezierAsString(easing);\n  } else if (Array.isArray(easing)) {\n    return easing.map(mapEasingToNativeEasingWithDefault);\n  } else {\n    return supportedWaapiEasing[easing];\n  }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs"],"names":["isBezierDefinition","isWaapiSupportedEasing","easing","Boolean","supportedWaapiEasing","Array","isArray","every","cubicBezierAsString","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","undefined","map"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,gDAAnC;;AAEA,SAASC,sBAAT,CAAgCC,MAAhC,EAAwC;AACpC,SAAOC,OAAO,CAAC,CAACD,MAAD,IACV,OAAOA,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,IAAIE,oBAD9B,IAEXJ,kBAAkB,CAACE,MAAD,CAFP,IAGVG,KAAK,CAACC,OAAN,CAAcJ,MAAd,KAAyBA,MAAM,CAACK,KAAP,CAAaN,sBAAb,CAHhB,CAAd;AAIH;;AACD,MAAMO,mBAAmB,GAAG;AAAA,MAAC,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,CAAD;AAAA,SAAmB,gBAAeH,CAAE,KAAIC,CAAE,KAAIC,CAAE,KAAIC,CAAE,GAAtD;AAAA,CAA5B;;AACA,MAAMR,oBAAoB,GAAG;AACzBS,EAAAA,MAAM,EAAE,QADiB;AAEzBC,EAAAA,IAAI,EAAE,MAFmB;AAGzBC,EAAAA,MAAM,EAAE,SAHiB;AAIzBC,EAAAA,OAAO,EAAE,UAJgB;AAKzBC,EAAAA,SAAS,EAAE,aALc;AAMzBC,EAAAA,MAAM,EAAEV,mBAAmB,CAAC,CAAC,CAAD,EAAI,IAAJ,EAAU,IAAV,EAAgB,CAAhB,CAAD,CANF;AAOzBW,EAAAA,OAAO,EAAEX,mBAAmB,CAAC,CAAC,IAAD,EAAO,CAAP,EAAU,CAAV,EAAa,IAAb,CAAD,CAPH;AAQzBY,EAAAA,MAAM,EAAEZ,mBAAmB,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,CAAC,IAApB,CAAD,CARF;AASzBa,EAAAA,OAAO,EAAEb,mBAAmB,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAD;AATH,CAA7B;;AAWA,SAASc,kCAAT,CAA4CpB,MAA5C,EAAoD;AAChD,SAAQqB,uBAAuB,CAACrB,MAAD,CAAvB,IACJE,oBAAoB,CAACY,OADzB;AAEH;;AACD,SAASO,uBAAT,CAAiCrB,MAAjC,EAAyC;AACrC,MAAI,CAACA,MAAL,EAAa;AACT,WAAOsB,SAAP;AACH,GAFD,MAGK,IAAIxB,kBAAkB,CAACE,MAAD,CAAtB,EAAgC;AACjC,WAAOM,mBAAmB,CAACN,MAAD,CAA1B;AACH,GAFI,MAGA,IAAIG,KAAK,CAACC,OAAN,CAAcJ,MAAd,CAAJ,EAA2B;AAC5B,WAAOA,MAAM,CAACuB,GAAP,CAAWH,kCAAX,CAAP;AACH,GAFI,MAGA;AACD,WAAOlB,oBAAoB,CAACF,MAAD,CAA3B;AACH;AACJ;;AAED,SAASM,mBAAT,EAA8BP,sBAA9B,EAAsDsB,uBAAtD,EAA+EnB,oBAA/E","sourcesContent":["import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n"]},"metadata":{},"sourceType":"module"}