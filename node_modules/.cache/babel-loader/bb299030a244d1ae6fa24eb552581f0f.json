{"ast":null,"code":"'use client';\n\nimport { useBreadcrumbStyles } from \"./chunk-24NX3CUR.mjs\"; // src/breadcrumb-link.tsx\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar BreadcrumbLink = forwardRef(function BreadcrumbLink2(props, ref) {\n  const {\n    isCurrentPage,\n    as,\n    className,\n    href,\n    ...rest\n  } = props;\n  const styles = useBreadcrumbStyles();\n  const sharedProps = {\n    ref,\n    as,\n    className: cx(\"chakra-breadcrumb__link\", className),\n    ...rest\n  };\n\n  if (isCurrentPage) {\n    return /* @__PURE__ */jsx(chakra.span, {\n      \"aria-current\": \"page\",\n      __css: styles.link,\n      ...sharedProps\n    });\n  }\n\n  return /* @__PURE__ */jsx(chakra.a, {\n    __css: styles.link,\n    href,\n    ...sharedProps\n  });\n});\nBreadcrumbLink.displayName = \"BreadcrumbLink\";\nexport { BreadcrumbLink };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/breadcrumb/src/breadcrumb-link.tsx"],"names":["BreadcrumbLink"],"mappings":";;;;AAAA,SAAS,MAAT,EAAiB,UAAjB,QAAoD,mBAApD;AACA,SAAS,EAAT,QAAmB,yBAAnB;AA8BQ,SAAA,GAAA,QAAA,mBAAA;AAdD,IAAM,cAAA,GAAiB,UAAA,CAC5B,SAASA,eAAT,CAAwB,KAAxB,EAA+B,GAA/B,EAAoC;AAClC,QAAM;AAAE,IAAA,aAAF;AAAiB,IAAA,EAAjB;AAAqB,IAAA,SAArB;AAAgC,IAAA,IAAhC;AAAsC,OAAG;AAAzC,MAAkD,KAAxD;AACA,QAAM,MAAA,GAAS,mBAAA,EAAf;AAEA,QAAM,WAAA,GAAc;AAClB,IAAA,GADkB;AAElB,IAAA,EAFkB;AAGlB,IAAA,SAAA,EAAW,EAAA,CAAG,yBAAH,EAA8B,SAA9B,CAHO;AAIlB,OAAG;AAJe,GAApB;;AAOA,MAAI,aAAJ,EAAmB;AACjB,WACE,eAAA,GAAA,CAAC,MAAA,CAAO,IAAR,EAAC;AAAY,sBAAa,MAAzB;AAAgC,MAAA,KAAA,EAAO,MAAA,CAAO,IAA9C;AAAqD,SAAG;AAAxD,KAAD,CADF;AAGF;;AAEA,SAAO,eAAA,GAAA,CAAC,MAAA,CAAO,CAAR,EAAC;AAAS,IAAA,KAAA,EAAO,MAAA,CAAO,IAAvB;AAA6B,IAAA,IAA7B;AAA0C,OAAG;AAA7C,GAAD,CAAP;AACF,CAnB4B,CAAvB;AAqBP,cAAA,CAAe,WAAf,GAA6B,gBAA7B","sourcesContent":["import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useBreadcrumbStyles } from \"./breadcrumb-context\"\n\nexport interface BreadcrumbLinkProps extends HTMLChakraProps<\"a\"> {\n  /**\n   * @default false\n   */\n  isCurrentPage?: boolean\n}\n/**\n * Breadcrumb link.\n *\n * It renders a `span` when it matches the current link. Otherwise,\n * it renders an anchor tag.\n */\n\nexport const BreadcrumbLink = forwardRef<BreadcrumbLinkProps, \"a\">(\n  function BreadcrumbLink(props, ref) {\n    const { isCurrentPage, as, className, href, ...rest } = props\n    const styles = useBreadcrumbStyles()\n\n    const sharedProps = {\n      ref,\n      as,\n      className: cx(\"chakra-breadcrumb__link\", className),\n      ...rest,\n    }\n\n    if (isCurrentPage) {\n      return (\n        <chakra.span aria-current=\"page\" __css={styles.link} {...sharedProps} />\n      )\n    }\n\n    return <chakra.a __css={styles.link} href={href} {...sharedProps} />\n  },\n)\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n"]},"metadata":{},"sourceType":"module"}