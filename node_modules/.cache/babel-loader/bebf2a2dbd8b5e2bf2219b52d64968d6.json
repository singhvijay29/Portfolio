{"ast":null,"code":"'use client';\n\nimport { useUpdateEffect } from \"./chunk-6WEF4DIO.mjs\"; // src/use-focus-effect.ts\n\nimport { hasFocusWithin, focus } from \"@chakra-ui/utils\";\n\nfunction useFocusEffect(ref, options) {\n  const {\n    shouldFocus,\n    preventScroll\n  } = options;\n  useUpdateEffect(() => {\n    const node = ref.current;\n    if (!node || !shouldFocus) return;\n\n    if (!hasFocusWithin(node)) {\n      focus(node, {\n        preventScroll,\n        nextTick: true\n      });\n    }\n  }, [shouldFocus, ref, preventScroll]);\n}\n\nexport { useFocusEffect };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/hooks/src/use-focus-effect.ts"],"names":[],"mappings":";;;;AAAA,SAAS,cAAT,EAAyB,KAAzB,QAAsC,kBAAtC;;AAaO,SAAS,cAAT,CACL,GADK,EAEL,OAFK,EAGL;AACA,QAAM;AAAE,IAAA,WAAF;AAAe,IAAA;AAAf,MAAiC,OAAvC;AAEA,EAAA,eAAA,CAAgB,MAAM;AACpB,UAAM,IAAA,GAAO,GAAA,CAAI,OAAjB;AAEA,QAAI,CAAC,IAAD,IAAS,CAAC,WAAd,EAA2B;;AAE3B,QAAI,CAAC,cAAA,CAAe,IAAf,CAAL,EAA2B;AACzB,MAAA,KAAA,CAAM,IAAN,EAAY;AAAE,QAAA,aAAF;AAAiB,QAAA,QAAA,EAAU;AAA3B,OAAZ,CAAA;AACF;AACF,GARA,EAQG,CAAC,WAAD,EAAc,GAAd,EAAmB,aAAnB,CARH,CAAA;AASF","sourcesContent":["import { hasFocusWithin, focus } from \"@chakra-ui/utils\"\nimport { useUpdateEffect } from \"./use-update-effect\"\n\nexport type UseFocusEffectOptions = {\n  shouldFocus: boolean\n  preventScroll?: boolean\n}\n/**\n * React hook to focus an element conditionally\n *\n * @param ref the ref of the element to focus\n * @param options focus management options\n */\nexport function useFocusEffect<T extends HTMLElement>(\n  ref: React.RefObject<T>,\n  options: UseFocusEffectOptions,\n) {\n  const { shouldFocus, preventScroll } = options\n\n  useUpdateEffect(() => {\n    const node = ref.current\n\n    if (!node || !shouldFocus) return\n\n    if (!hasFocusWithin(node)) {\n      focus(node, { preventScroll, nextTick: true })\n    }\n  }, [shouldFocus, ref, preventScroll])\n}\n"]},"metadata":{},"sourceType":"module"}