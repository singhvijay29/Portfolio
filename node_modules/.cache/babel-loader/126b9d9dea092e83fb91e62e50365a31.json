{"ast":null,"code":"import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\n\nfunction createMotionComponent(_ref) {\n  let {\n    preloadedFeatures,\n    createVisualElement,\n    useRender,\n    useVisualState,\n    Component\n  } = _ref;\n  preloadedFeatures && loadFeatures(preloadedFeatures);\n\n  function MotionComponent(props, externalRef) {\n    /**\n     * If we need to measure the element we load this functionality in a\n     * separate class component in order to gain access to getSnapshotBeforeUpdate.\n     */\n    let MeasureLayout;\n    const configAndProps = { ...useContext(MotionConfigContext),\n      ...props,\n      layoutId: useLayoutId(props)\n    };\n    const {\n      isStatic\n    } = configAndProps;\n    const context = useCreateMotionContext(props);\n    const visualState = useVisualState(props, isStatic);\n\n    if (!isStatic && isBrowser) {\n      /**\n       * Create a VisualElement for this component. A VisualElement provides a common\n       * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n       * providing a way of rendering to these APIs outside of the React render loop\n       * for more performant animations and interactions\n       */\n      context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n      /**\n       * Load Motion gesture and animation features. These are rendered as renderless\n       * components so each feature can optionally make use of React lifecycle methods.\n       */\n\n      const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n      const isStrict = useContext(LazyContext).strict;\n\n      if (context.visualElement) {\n        MeasureLayout = context.visualElement.loadFeatures( // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n        configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n      }\n    }\n    /**\n     * The mount order and hierarchy is specific to ensure our element ref\n     * is hydrated by the time features fire their effects.\n     */\n\n\n    return jsxs(MotionContext.Provider, {\n      value: context,\n      children: [MeasureLayout && context.visualElement ? jsx(MeasureLayout, {\n        visualElement: context.visualElement,\n        ...configAndProps\n      }) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)]\n    });\n  }\n\n  const ForwardRefComponent = forwardRef(MotionComponent);\n  ForwardRefComponent[motionComponentSymbol] = Component;\n  return ForwardRefComponent;\n}\n\nfunction useLayoutId(_ref2) {\n  let {\n    layoutId\n  } = _ref2;\n  const layoutGroupId = useContext(LayoutGroupContext).id;\n  return layoutGroupId && layoutId !== undefined ? layoutGroupId + \"-\" + layoutId : layoutId;\n}\n\nexport { createMotionComponent };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/framer-motion/dist/es/motion/index.mjs"],"names":["jsxs","jsx","forwardRef","useContext","MotionConfigContext","MotionContext","useVisualElement","useMotionRef","useCreateMotionContext","loadFeatures","isBrowser","LayoutGroupContext","LazyContext","SwitchLayoutGroupContext","motionComponentSymbol","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","MotionComponent","props","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","isStatic","context","visualState","visualElement","initialLayoutGroupConfig","isStrict","strict","Provider","value","children","ForwardRefComponent","layoutGroupId","id","undefined"],"mappings":"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","sourcesContent":["import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n"]},"metadata":{},"sourceType":"module"}