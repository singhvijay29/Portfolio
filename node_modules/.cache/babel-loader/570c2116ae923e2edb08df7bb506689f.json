{"ast":null,"code":"'use client'; // src/toast.utils.ts\n\nvar findById = (arr, id) => arr.find(toast => toast.id === id);\n\nfunction findToast(toasts, id) {\n  const position = getToastPosition(toasts, id);\n  const index = position ? toasts[position].findIndex(toast => toast.id === id) : -1;\n  return {\n    position,\n    index\n  };\n}\n\nfunction getToastPosition(toasts, id) {\n  for (const [position, values] of Object.entries(toasts)) {\n    if (findById(values, id)) {\n      return position;\n    }\n  }\n}\n\nvar isVisible = (toasts, id) => !!getToastPosition(toasts, id);\n\nfunction getToastStyle(position) {\n  const isRighty = position.includes(\"right\");\n  const isLefty = position.includes(\"left\");\n  let alignItems = \"center\";\n  if (isRighty) alignItems = \"flex-end\";\n  if (isLefty) alignItems = \"flex-start\";\n  return {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems\n  };\n}\n\nfunction getToastListStyle(position) {\n  const isTopOrBottom = position === \"top\" || position === \"bottom\";\n  const margin = isTopOrBottom ? \"0 auto\" : void 0;\n  const top = position.includes(\"top\") ? \"env(safe-area-inset-top, 0px)\" : void 0;\n  const bottom = position.includes(\"bottom\") ? \"env(safe-area-inset-bottom, 0px)\" : void 0;\n  const right = !position.includes(\"left\") ? \"env(safe-area-inset-right, 0px)\" : void 0;\n  const left = !position.includes(\"right\") ? \"env(safe-area-inset-left, 0px)\" : void 0;\n  return {\n    position: \"fixed\",\n    zIndex: \"var(--toast-z-index, 5500)\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    margin,\n    top,\n    bottom,\n    right,\n    left\n  };\n}\n\nexport { findById, findToast, getToastPosition, isVisible, getToastStyle, getToastListStyle };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/toast/src/toast.utils.ts"],"names":[],"mappings":";;AAOO,IAAM,QAAA,GAAW,CAAC,GAAD,EAAsB,EAAtB,KACtB,GAAA,CAAI,IAAJ,CAAU,KAAD,IAAW,KAAA,CAAM,EAAN,KAAa,EAAjC,CADK;;AAOA,SAAS,SAAT,CAAmB,MAAnB,EAAuC,EAAvC,EAAoD;AACzD,QAAM,QAAA,GAAW,gBAAA,CAAiB,MAAjB,EAAyB,EAAzB,CAAjB;AAEA,QAAM,KAAA,GAAQ,QAAA,GACV,MAAA,CAAO,QAAP,CAAA,CAAiB,SAAjB,CAA4B,KAAD,IAAW,KAAA,CAAM,EAAN,KAAa,EAAnD,CADU,GAEV,CAAA,CAFJ;AAIA,SAAO;AACL,IAAA,QADK;AAEL,IAAA;AAFK,GAAP;AAIF;;AAMO,SAAS,gBAAT,CAA0B,MAA1B,EAA8C,EAA9C,EAA2D;AAChE,OAAA,MAAW,CAAC,QAAD,EAAW,MAAX,CAAX,IAAiC,MAAA,CAAO,OAAP,CAAe,MAAf,CAAjC,EAAyD;AACvD,QAAI,QAAA,CAAS,MAAT,EAAiB,EAAjB,CAAJ,EAA0B;AACxB,aAAO,QAAP;AACF;AACF;AACF;;AAMO,IAAM,SAAA,GAAY,CAAC,MAAD,EAAqB,EAArB,KACvB,CAAC,CAAC,gBAAA,CAAiB,MAAjB,EAAyB,EAAzB,CADG;;AAOA,SAAS,aAAT,CAAuB,QAAvB,EAAqE;AAC1E,QAAM,QAAA,GAAW,QAAA,CAAS,QAAT,CAAkB,OAAlB,CAAjB;AACA,QAAM,OAAA,GAAU,QAAA,CAAS,QAAT,CAAkB,MAAlB,CAAhB;AAEA,MAAI,UAAA,GAAa,QAAjB;AACA,MAAI,QAAJ,EAAc,UAAA,GAAa,UAAb;AACd,MAAI,OAAJ,EAAa,UAAA,GAAa,YAAb;AAEb,SAAO;AACL,IAAA,OAAA,EAAS,MADJ;AAEL,IAAA,aAAA,EAAe,QAFV;AAGL,IAAA;AAHK,GAAP;AAKF;;AAKO,SAAS,iBAAT,CACL,QADK,EAEgB;AACrB,QAAM,aAAA,GAAgB,QAAA,KAAa,KAAb,IAAsB,QAAA,KAAa,QAAzD;AACA,QAAM,MAAA,GAAS,aAAA,GAAgB,QAAhB,GAA2B,KAAA,CAA1C;AAEA,QAAM,GAAA,GAAM,QAAA,CAAS,QAAT,CAAkB,KAAlB,IACR,+BADQ,GAER,KAAA,CAFJ;AAGA,QAAM,MAAA,GAAS,QAAA,CAAS,QAAT,CAAkB,QAAlB,IACX,kCADW,GAEX,KAAA,CAFJ;AAGA,QAAM,KAAA,GAAQ,CAAC,QAAA,CAAS,QAAT,CAAkB,MAAlB,CAAD,GACV,iCADU,GAEV,KAAA,CAFJ;AAGA,QAAM,IAAA,GAAO,CAAC,QAAA,CAAS,QAAT,CAAkB,OAAlB,CAAD,GACT,gCADS,GAET,KAAA,CAFJ;AAIA,SAAO;AACL,IAAA,QAAA,EAAU,OADL;AAEL,IAAA,MAAA,EAAQ,4BAFH;AAGL,IAAA,aAAA,EAAe,MAHV;AAIL,IAAA,OAAA,EAAS,MAJJ;AAKL,IAAA,aAAA,EAAe,QALV;AAML,IAAA,MANK;AAOL,IAAA,GAPK;AAQL,IAAA,MARK;AASL,IAAA,KATK;AAUL,IAAA;AAVK,GAAP;AAYF","sourcesContent":["import type { ToastPosition } from \"./toast.placement\"\nimport type { ToastId, ToastOptions, ToastState } from \"./toast.types\"\n\n/**\n * Given an array of toasts for a specific position.\n * It returns the toast that matches the `id` passed\n */\nexport const findById = (arr: ToastOptions[], id: ToastId) =>\n  arr.find((toast) => toast.id === id)\n\n/**\n * Given the toast manager state, finds the toast that matches\n * the id and return its position and index\n */\nexport function findToast(toasts: ToastState, id: ToastId) {\n  const position = getToastPosition(toasts, id)\n\n  const index = position\n    ? toasts[position].findIndex((toast) => toast.id === id)\n    : -1\n\n  return {\n    position,\n    index,\n  }\n}\n\n/**\n * Given the toast manager state, finds the position of the toast that\n * matches the `id`\n */\nexport function getToastPosition(toasts: ToastState, id: ToastId) {\n  for (const [position, values] of Object.entries(toasts)) {\n    if (findById(values, id)) {\n      return position as ToastPosition\n    }\n  }\n}\n\n/**\n * Given the toast manager state, checks if a specific toast is\n * still in the state, which means it is still visible on screen.\n */\nexport const isVisible = (toasts: ToastState, id: ToastId) =>\n  !!getToastPosition(toasts, id)\n\n/**\n * Gets the styles to be applied to a toast's container\n * based on its position in the manager\n */\nexport function getToastStyle(position: ToastPosition): React.CSSProperties {\n  const isRighty = position.includes(\"right\")\n  const isLefty = position.includes(\"left\")\n\n  let alignItems = \"center\"\n  if (isRighty) alignItems = \"flex-end\"\n  if (isLefty) alignItems = \"flex-start\"\n\n  return {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems,\n  }\n}\n\n/**\n * Compute the style of a toast based on its position\n */\nexport function getToastListStyle(\n  position: ToastPosition,\n): React.CSSProperties {\n  const isTopOrBottom = position === \"top\" || position === \"bottom\"\n  const margin = isTopOrBottom ? \"0 auto\" : undefined\n\n  const top = position.includes(\"top\")\n    ? \"env(safe-area-inset-top, 0px)\"\n    : undefined\n  const bottom = position.includes(\"bottom\")\n    ? \"env(safe-area-inset-bottom, 0px)\"\n    : undefined\n  const right = !position.includes(\"left\")\n    ? \"env(safe-area-inset-right, 0px)\"\n    : undefined\n  const left = !position.includes(\"right\")\n    ? \"env(safe-area-inset-left, 0px)\"\n    : undefined\n\n  return {\n    position: \"fixed\",\n    zIndex: \"var(--toast-z-index, 5500)\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    margin,\n    top,\n    bottom,\n    right,\n    left,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}