{"ast":null,"code":"'use client';\n\nimport { BreadcrumbLink } from \"./chunk-UIZJRKRT.mjs\";\nimport { BreadcrumbSeparator } from \"./chunk-I4SEDIQD.mjs\";\nimport { useBreadcrumbStyles } from \"./chunk-24NX3CUR.mjs\"; // src/breadcrumb-item.tsx\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { cloneElement } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar BreadcrumbItem = forwardRef(function BreadcrumbItem2(props, ref) {\n  const {\n    isCurrentPage,\n    separator,\n    isLastChild,\n    spacing,\n    children,\n    className,\n    ...rest\n  } = props;\n  const validChildren = getValidChildren(children);\n  const clones = validChildren.map(child => {\n    if (child.type === BreadcrumbLink) {\n      return cloneElement(child, {\n        isCurrentPage\n      });\n    }\n\n    if (child.type === BreadcrumbSeparator) {\n      return cloneElement(child, {\n        spacing,\n        children: child.props.children || separator\n      });\n    }\n\n    return child;\n  });\n  const styles = useBreadcrumbStyles();\n  const itemStyles = {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    ...styles.item\n  };\n\n  const _className = cx(\"chakra-breadcrumb__list-item\", className);\n\n  return /* @__PURE__ */jsxs(chakra.li, {\n    ref,\n    className: _className,\n    ...rest,\n    __css: itemStyles,\n    children: [clones, !isLastChild && /* @__PURE__ */jsx(BreadcrumbSeparator, {\n      spacing,\n      children: separator\n    })]\n  });\n});\nBreadcrumbItem.displayName = \"BreadcrumbItem\";\nexport { BreadcrumbItem };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/breadcrumb/src/breadcrumb-item.tsx"],"names":["BreadcrumbItem"],"mappings":";;;;;;AAAA,SACE,MADF,EAEE,UAFF,QAKO,mBALP;AAMA,SAAS,gBAAT,QAAiC,iCAAjC;AACA,SAAS,EAAT,QAAmB,yBAAnB;AAIA,SAAS,YAAT,QAA6B,OAA7B;AAuDM,SAGI,GAHJ,EAAA,IAAA,QAAA,mBAAA;AAzCC,IAAM,cAAA,GAAiB,UAAA,CAC5B,SAASA,eAAT,CAAwB,KAAxB,EAA+B,GAA/B,EAAoC;AAClC,QAAM;AACJ,IAAA,aADI;AAEJ,IAAA,SAFI;AAGJ,IAAA,WAHI;AAIJ,IAAA,OAJI;AAKJ,IAAA,QALI;AAMJ,IAAA,SANI;AAOJ,OAAG;AAPC,MAQF,KARJ;AAUA,QAAM,aAAA,GAAgB,gBAAA,CAAiB,QAAjB,CAAtB;AAEA,QAAM,MAAA,GAAS,aAAA,CAAc,GAAd,CAAmB,KAAD,IAAW;AAC1C,QAAI,KAAA,CAAM,IAAN,KAAe,cAAnB,EAAmC;AACjC,aAAO,YAAA,CAAa,KAAb,EAAoB;AACzB,QAAA;AADyB,OAApB,CAAP;AAGF;;AAEA,QAAI,KAAA,CAAM,IAAN,KAAe,mBAAnB,EAAwC;AACtC,aAAO,YAAA,CAAa,KAAb,EAAoB;AACzB,QAAA,OADyB;AAEzB,QAAA,QAAA,EAAU,KAAA,CAAM,KAAN,CAAY,QAAZ,IAAwB;AAFT,OAApB,CAAP;AAIF;;AAEA,WAAO,KAAP;AACD,GAfc,CAAf;AAiBA,QAAM,MAAA,GAAS,mBAAA,EAAf;AACA,QAAM,UAAA,GAAgC;AACpC,IAAA,OAAA,EAAS,aAD2B;AAEpC,IAAA,UAAA,EAAY,QAFwB;AAGpC,OAAG,MAAA,CAAO;AAH0B,GAAtC;;AAMA,QAAM,UAAA,GAAa,EAAA,CAAG,8BAAH,EAAmC,SAAnC,CAAnB;;AAEA,SACE,eAAA,IAAA,CAAC,MAAA,CAAO,EAAR,EAAC;AAAU,IAAA,GAAV;AAAoB,IAAA,SAAA,EAAW,UAA/B;AAA4C,OAAG,IAA/C;AAAqD,IAAA,KAAA,EAAO,UAA5D;AACE,IAAA,QAAA,EAAA,CAAA,MAAA,EACA,CAAC,WAAD,IACC,eAAA,GAAA,CAAC,mBAAD,EAAC;AAAoB,MAAA,OAApB;AACE,MAAA,QAAA,EAAA;AADF,KAAD,CAFD;AADF,GAAD,CADF;AAUF,CAlD4B,CAAvB;AAoDP,cAAA,CAAe,WAAf,GAA6B,gBAA7B","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  SystemStyleObject,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useBreadcrumbStyles } from \"./breadcrumb-context\"\nimport { BreadcrumbSeparator } from \"./breadcrumb-separator\"\nimport { BreadcrumbLink } from \"./breadcrumb-link\"\nimport { cloneElement } from \"react\"\nimport { BreadcrumbItemOptions } from \"./breadcrumb-types\"\n\nexport interface BreadcrumbItemProps\n  extends BreadcrumbItemOptions,\n    HTMLChakraProps<\"li\"> {}\n\n/**\n * BreadcrumbItem is used to group a breadcrumb link.\n * It renders a `li` element to denote it belongs to an order list of links.\n *\n * @see Docs https://chakra-ui.com/breadcrumb\n */\n\nexport const BreadcrumbItem = forwardRef<BreadcrumbItemProps, \"li\">(\n  function BreadcrumbItem(props, ref) {\n    const {\n      isCurrentPage,\n      separator,\n      isLastChild,\n      spacing,\n      children,\n      className,\n      ...rest\n    } = props\n\n    const validChildren = getValidChildren(children)\n\n    const clones = validChildren.map((child) => {\n      if (child.type === BreadcrumbLink) {\n        return cloneElement(child, {\n          isCurrentPage,\n        })\n      }\n\n      if (child.type === BreadcrumbSeparator) {\n        return cloneElement(child, {\n          spacing,\n          children: child.props.children || separator,\n        })\n      }\n\n      return child\n    })\n\n    const styles = useBreadcrumbStyles()\n    const itemStyles: SystemStyleObject = {\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      ...styles.item,\n    }\n\n    const _className = cx(\"chakra-breadcrumb__list-item\", className)\n\n    return (\n      <chakra.li ref={ref} className={_className} {...rest} __css={itemStyles}>\n        {clones}\n        {!isLastChild && (\n          <BreadcrumbSeparator spacing={spacing}>\n            {separator}\n          </BreadcrumbSeparator>\n        )}\n      </chakra.li>\n    )\n  },\n)\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n"]},"metadata":{},"sourceType":"module"}