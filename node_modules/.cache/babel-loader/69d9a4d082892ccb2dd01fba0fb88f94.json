{"ast":null,"code":"'use client';\n\nimport { TRANSITION_EASINGS, withDelay } from \"./chunk-6NHXDBFO.mjs\"; // src/collapse.tsx\n\nimport { cx, warn } from \"@chakra-ui/shared-utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { forwardRef, useEffect, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\n\nvar isNumeric = value => value != null && parseInt(value.toString(), 10) > 0;\n\nvar defaultTransitions = {\n  exit: {\n    height: {\n      duration: 0.2,\n      ease: TRANSITION_EASINGS.ease\n    },\n    opacity: {\n      duration: 0.3,\n      ease: TRANSITION_EASINGS.ease\n    }\n  },\n  enter: {\n    height: {\n      duration: 0.3,\n      ease: TRANSITION_EASINGS.ease\n    },\n    opacity: {\n      duration: 0.4,\n      ease: TRANSITION_EASINGS.ease\n    }\n  }\n};\nvar variants = {\n  exit: _ref => {\n    let {\n      animateOpacity,\n      startingHeight,\n      transition,\n      transitionEnd,\n      delay\n    } = _ref;\n\n    var _a;\n\n    return { ...(animateOpacity && {\n        opacity: isNumeric(startingHeight) ? 1 : 0\n      }),\n      height: startingHeight,\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit,\n      transition: (_a = transition == null ? void 0 : transition.exit) != null ? _a : withDelay.exit(defaultTransitions.exit, delay)\n    };\n  },\n  enter: _ref2 => {\n    let {\n      animateOpacity,\n      endingHeight,\n      transition,\n      transitionEnd,\n      delay\n    } = _ref2;\n\n    var _a;\n\n    return { ...(animateOpacity && {\n        opacity: 1\n      }),\n      height: endingHeight,\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter,\n      transition: (_a = transition == null ? void 0 : transition.enter) != null ? _a : withDelay.enter(defaultTransitions.enter, delay)\n    };\n  }\n};\nvar Collapse = forwardRef((props, ref) => {\n  const {\n    in: isOpen,\n    unmountOnExit,\n    animateOpacity = true,\n    startingHeight = 0,\n    endingHeight = \"auto\",\n    style,\n    className,\n    transition,\n    transitionEnd,\n    ...rest\n  } = props;\n  const [mounted, setMounted] = useState(false);\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setMounted(true);\n    });\n    return () => clearTimeout(timeout);\n  }, []);\n  warn({\n    condition: Number(startingHeight) > 0 && !!unmountOnExit,\n    message: `startingHeight and unmountOnExit are mutually exclusive. You can't use them together`\n  });\n  const hasStartingHeight = parseFloat(startingHeight.toString()) > 0;\n  const custom = {\n    startingHeight,\n    endingHeight,\n    animateOpacity,\n    transition: !mounted ? {\n      enter: {\n        duration: 0\n      }\n    } : transition,\n    transitionEnd: {\n      enter: transitionEnd == null ? void 0 : transitionEnd.enter,\n      exit: unmountOnExit ? transitionEnd == null ? void 0 : transitionEnd.exit : { ...(transitionEnd == null ? void 0 : transitionEnd.exit),\n        display: hasStartingHeight ? \"block\" : \"none\"\n      }\n    }\n  };\n  const show = unmountOnExit ? isOpen : true;\n  const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  return /* @__PURE__ */jsx(AnimatePresence, {\n    initial: false,\n    custom,\n    children: show && /* @__PURE__ */jsx(motion.div, {\n      ref,\n      ...rest,\n      className: cx(\"chakra-collapse\", className),\n      style: {\n        overflow: \"hidden\",\n        display: \"block\",\n        ...style\n      },\n      custom,\n      variants,\n      initial: unmountOnExit ? \"exit\" : false,\n      animate,\n      exit: \"exit\"\n    })\n  });\n});\nCollapse.displayName = \"Collapse\";\nexport { Collapse };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/transition/src/collapse.tsx"],"names":[],"mappings":"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","sourcesContent":["import { cx, warn } from \"@chakra-ui/shared-utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  Variants as _Variants,\n} from \"framer-motion\"\nimport { forwardRef, useEffect, useState } from \"react\"\nimport {\n  TRANSITION_EASINGS,\n  Variants,\n  withDelay,\n  WithTransitionConfig,\n} from \"./transition-utils\"\n\nconst isNumeric = (value?: string | number) =>\n  value != null && parseInt(value.toString(), 10) > 0\n\nexport interface CollapseOptions {\n  /**\n   * If `true`, the opacity of the content will be animated\n   * @default true\n   */\n  animateOpacity?: boolean\n  /**\n   * The height you want the content in its collapsed state.\n   * @default 0\n   */\n  startingHeight?: number | string\n  /**\n   * The height you want the content in its expanded state.\n   * @default \"auto\"\n   */\n  endingHeight?: number | string\n}\n\nconst defaultTransitions = {\n  exit: {\n    height: { duration: 0.2, ease: TRANSITION_EASINGS.ease },\n    opacity: { duration: 0.3, ease: TRANSITION_EASINGS.ease },\n  },\n  enter: {\n    height: { duration: 0.3, ease: TRANSITION_EASINGS.ease },\n    opacity: { duration: 0.4, ease: TRANSITION_EASINGS.ease },\n  },\n}\n\nconst variants: Variants<CollapseOptions> = {\n  exit: ({\n    animateOpacity,\n    startingHeight,\n    transition,\n    transitionEnd,\n    delay,\n  }) => ({\n    ...(animateOpacity && { opacity: isNumeric(startingHeight) ? 1 : 0 }),\n    height: startingHeight,\n    transitionEnd: transitionEnd?.exit,\n    transition:\n      transition?.exit ?? withDelay.exit(defaultTransitions.exit, delay),\n  }),\n  enter: ({\n    animateOpacity,\n    endingHeight,\n    transition,\n    transitionEnd,\n    delay,\n  }) => ({\n    ...(animateOpacity && { opacity: 1 }),\n    height: endingHeight,\n    transitionEnd: transitionEnd?.enter,\n    transition:\n      transition?.enter ?? withDelay.enter(defaultTransitions.enter, delay),\n  }),\n}\n\nexport type ICollapse = CollapseProps\n\nexport interface CollapseProps\n  extends WithTransitionConfig<HTMLMotionProps<\"div\">>,\n    CollapseOptions {}\n\nexport const Collapse = forwardRef<HTMLDivElement, CollapseProps>(\n  (props, ref) => {\n    const {\n      in: isOpen,\n      unmountOnExit,\n      animateOpacity = true,\n      startingHeight = 0,\n      endingHeight = \"auto\",\n      style,\n      className,\n      transition,\n      transitionEnd,\n      ...rest\n    } = props\n\n    const [mounted, setMounted] = useState(false)\n    useEffect(() => {\n      const timeout = setTimeout(() => {\n        setMounted(true)\n      })\n      return () => clearTimeout(timeout)\n    }, [])\n\n    /**\n     * Warn 🚨: `startingHeight` and `unmountOnExit` are mutually exclusive\n     *\n     * If you specify a starting height, the collapsed needs to be mounted\n     * for the height to take effect.\n     */\n    warn({\n      condition: Number(startingHeight) > 0 && !!unmountOnExit,\n      message: `startingHeight and unmountOnExit are mutually exclusive. You can't use them together`,\n    })\n\n    const hasStartingHeight = parseFloat(startingHeight.toString()) > 0\n\n    const custom = {\n      startingHeight,\n      endingHeight,\n      animateOpacity,\n      transition: !mounted ? { enter: { duration: 0 } } : transition,\n      transitionEnd: {\n        enter: transitionEnd?.enter,\n        exit: unmountOnExit\n          ? transitionEnd?.exit\n          : {\n              ...transitionEnd?.exit,\n              display: hasStartingHeight ? \"block\" : \"none\",\n            },\n      },\n    }\n\n    const show = unmountOnExit ? isOpen : true\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n\n    return (\n      <AnimatePresence initial={false} custom={custom}>\n        {show && (\n          <motion.div\n            ref={ref}\n            {...rest}\n            className={cx(\"chakra-collapse\", className)}\n            style={{\n              overflow: \"hidden\",\n              display: \"block\",\n              ...style,\n            }}\n            custom={custom}\n            variants={variants as _Variants}\n            initial={unmountOnExit ? \"exit\" : false}\n            animate={animate}\n            exit=\"exit\"\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nCollapse.displayName = \"Collapse\"\n"]},"metadata":{},"sourceType":"module"}