{"ast":null,"code":"'use client';\n\nimport { useEditable } from \"./chunk-TXN5ELBN.mjs\";\nimport { EditableProvider, EditableStylesProvider } from \"./chunk-WYY72ITE.mjs\"; // src/editable.tsx\n\nimport { cx, runIfFn } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Editable = forwardRef(function Editable2(props, ref) {\n  const styles = useMultiStyleConfig(\"Editable\", props);\n  const ownProps = omitThemingProps(props);\n  const {\n    htmlProps,\n    ...context\n  } = useEditable(ownProps);\n  const {\n    isEditing,\n    onSubmit,\n    onCancel,\n    onEdit\n  } = context;\n\n  const _className = cx(\"chakra-editable\", props.className);\n\n  const children = runIfFn(props.children, {\n    isEditing,\n    onSubmit,\n    onCancel,\n    onEdit\n  });\n  return /* @__PURE__ */jsx(EditableProvider, {\n    value: context,\n    children: /* @__PURE__ */jsx(EditableStylesProvider, {\n      value: styles,\n      children: /* @__PURE__ */jsx(chakra.div, {\n        ref,\n        ...htmlProps,\n        className: _className,\n        children\n      })\n    })\n  });\n});\nEditable.displayName = \"Editable\";\nexport { Editable };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/editable/src/editable.tsx"],"names":["Editable"],"mappings":";;;;;AAAA,SAAS,EAAT,EAAa,OAAb,QAA4B,yBAA5B;AACA,SACE,MADF,EAEE,UAFF,EAIE,gBAJF,EAME,mBANF,QAOO,mBAPP;AAkEQ,SAAA,GAAA,QAAA,mBAAA;AAvBD,IAAM,QAAA,GAAW,UAAA,CAAiC,SAASA,SAAT,CACvD,KADuD,EAEvD,GAFuD,EAGvD;AACA,QAAM,MAAA,GAAS,mBAAA,CAAoB,UAApB,EAAgC,KAAhC,CAAf;AAEA,QAAM,QAAA,GAAW,gBAAA,CAAiB,KAAjB,CAAjB;AACA,QAAM;AAAE,IAAA,SAAF;AAAa,OAAG;AAAhB,MAA4B,WAAA,CAAY,QAAZ,CAAlC;AAEA,QAAM;AAAE,IAAA,SAAF;AAAa,IAAA,QAAb;AAAuB,IAAA,QAAvB;AAAiC,IAAA;AAAjC,MAA4C,OAAlD;;AAEA,QAAM,UAAA,GAAa,EAAA,CAAG,iBAAH,EAAsB,KAAA,CAAM,SAA5B,CAAnB;;AAEA,QAAM,QAAA,GAAW,OAAA,CAAQ,KAAA,CAAM,QAAd,EAAwB;AACvC,IAAA,SADuC;AAEvC,IAAA,QAFuC;AAGvC,IAAA,QAHuC;AAIvC,IAAA;AAJuC,GAAxB,CAAjB;AAOA,SACE,eAAA,GAAA,CAAC,gBAAD,EAAC;AAAiB,IAAA,KAAA,EAAO,OAAxB;AACC,IAAA,QAAA,EAAA,eAAA,GAAA,CAAC,sBAAD,EAAC;AAAuB,MAAA,KAAA,EAAO,MAA9B;AACC,MAAA,QAAA,EAAA,eAAA,GAAA,CAAC,MAAA,CAAO,GAAR,EAAC;AACC,QAAA,GADD;AAEE,WAAI,SAFN;AAGC,QAAA,SAAA,EAAW,UAHZ;AAKE,QAAA;AALF,OAAD;AADD,KAAD;AADD,GAAD,CADF;AAaD,CAjCuB,CAAjB;AAmCP,QAAA,CAAS,WAAT,GAAuB,UAAvB","sourcesContent":["import { cx, runIfFn } from \"@chakra-ui/shared-utils\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  ThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\nimport { EditableProvider, EditableStylesProvider } from \"./editable-context\"\nimport {\n  useEditable,\n  UseEditableProps,\n  UseEditableReturn,\n} from \"./use-editable\"\n\ntype RenderProps = Pick<\n  UseEditableReturn,\n  \"isEditing\" | \"onSubmit\" | \"onCancel\" | \"onEdit\"\n>\n\ntype MaybeRenderProp<P> = React.ReactNode | ((props: P) => React.ReactNode)\n\ninterface BaseEditableProps\n  extends Omit<\n    HTMLChakraProps<\"div\">,\n    \"onChange\" | \"value\" | \"defaultValue\" | \"onSubmit\" | \"onBlur\"\n  > {}\n\nexport interface EditableProps\n  extends UseEditableProps,\n    Omit<BaseEditableProps, \"children\">,\n    ThemingProps<\"Editable\"> {\n  children?: MaybeRenderProp<RenderProps>\n}\n\n/**\n * Editable\n *\n * The wrapper that provides context and logic for all editable\n * components. It renders a `div`\n *\n * @see Docs https://chakra-ui.com/docs/components/editable\n */\nexport const Editable = forwardRef<EditableProps, \"div\">(function Editable(\n  props,\n  ref,\n) {\n  const styles = useMultiStyleConfig(\"Editable\", props)\n\n  const ownProps = omitThemingProps(props)\n  const { htmlProps, ...context } = useEditable(ownProps)\n\n  const { isEditing, onSubmit, onCancel, onEdit } = context\n\n  const _className = cx(\"chakra-editable\", props.className)\n\n  const children = runIfFn(props.children, {\n    isEditing,\n    onSubmit,\n    onCancel,\n    onEdit,\n  })\n\n  return (\n    <EditableProvider value={context}>\n      <EditableStylesProvider value={styles}>\n        <chakra.div\n          ref={ref}\n          {...(htmlProps as HTMLChakraProps<\"div\">)}\n          className={_className}\n        >\n          {children}\n        </chakra.div>\n      </EditableStylesProvider>\n    </EditableProvider>\n  )\n})\n\nEditable.displayName = \"Editable\"\n"]},"metadata":{},"sourceType":"module"}