{"ast":null,"code":"'use client'; // src/env.tsx\n\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { createContext, useContext, useMemo, useReducer, useRef } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar EnvironmentContext = createContext({\n  getDocument() {\n    return document;\n  },\n\n  getWindow() {\n    return window;\n  }\n\n});\nEnvironmentContext.displayName = \"EnvironmentContext\";\n\nfunction useEnvironment() {\n  let {\n    defer\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const [, forceUpdate] = useReducer(c => c + 1, 0);\n  useSafeLayoutEffect(() => {\n    if (!defer) return;\n    forceUpdate();\n  }, [defer]);\n  return useContext(EnvironmentContext);\n}\n\nfunction EnvironmentProvider(props) {\n  const {\n    children,\n    environment: environmentProp,\n    disabled\n  } = props;\n  const ref = useRef(null);\n  const context = useMemo(() => {\n    if (environmentProp) return environmentProp;\n    return {\n      getDocument: () => {\n        var _a, _b;\n\n        return (_b = (_a = ref.current) == null ? void 0 : _a.ownerDocument) != null ? _b : document;\n      },\n      getWindow: () => {\n        var _a, _b;\n\n        return (_b = (_a = ref.current) == null ? void 0 : _a.ownerDocument.defaultView) != null ? _b : window;\n      }\n    };\n  }, [environmentProp]);\n  const showSpan = !disabled || !environmentProp;\n  return /* @__PURE__ */jsxs(EnvironmentContext.Provider, {\n    value: context,\n    children: [children, showSpan && /* @__PURE__ */jsx(\"span\", {\n      id: \"__chakra_env\",\n      hidden: true,\n      ref\n    })]\n  });\n}\n\nEnvironmentProvider.displayName = \"EnvironmentProvider\";\nexport { useEnvironment, EnvironmentProvider };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/react-env/src/env.tsx"],"names":[],"mappings":";;AAAA,SAAS,mBAAT,QAAoC,yCAApC;AACA,SAAS,aAAT,EAAwB,UAAxB,EAAoC,OAApC,EAA6C,UAA7C,EAAyD,MAAzD,QAAuE,OAAvE;AAkDI,SAEe,GAFf,EAAA,IAAA,QAAA,mBAAA;AA3CJ,IAAM,kBAAA,GAAqB,aAAA,CAA2B;AACpD,EAAA,WAAA,GAAc;AACZ,WAAO,QAAP;AACF,GAHoD;;AAIpD,EAAA,SAAA,GAAY;AACV,WAAO,MAAP;AACF;;AANoD,CAA3B,CAA3B;AASA,kBAAA,CAAmB,WAAnB,GAAiC,oBAAjC;;AAEO,SAAS,cAAT,GAA6D;AAAA,MAArC;AAAE,IAAA;AAAF,GAAqC,uEAAJ,EAAI;AAClE,QAAM,GAAG,WAAH,IAAkB,UAAA,CAAY,CAAD,IAAO,CAAA,GAAI,CAAtB,EAAyB,CAAzB,CAAxB;AAEA,EAAA,mBAAA,CAAoB,MAAM;AACxB,QAAI,CAAC,KAAL,EAAY;AACZ,IAAA,WAAA;AACF,GAHA,EAGG,CAAC,KAAD,CAHH,CAAA;AAKA,SAAO,UAAA,CAAW,kBAAX,CAAP;AACF;;AAQO,SAAS,mBAAT,CAA6B,KAA7B,EAA8D;AACnE,QAAM;AAAE,IAAA,QAAF;AAAY,IAAA,WAAA,EAAa,eAAzB;AAA0C,IAAA;AAA1C,MAAuD,KAA7D;AACA,QAAM,GAAA,GAAM,MAAA,CAAwB,IAAxB,CAAZ;AAEA,QAAM,OAAA,GAAU,OAAA,CAAqB,MAAM;AACzC,QAAI,eAAJ,EAAqB,OAAO,eAAP;AACrB,WAAO;AACL,MAAA,WAAA,EAAa,MAAG;AA3CtB,YAAA,EAAA,EAAA,EAAA;;AA2CyB,eAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,GAAA,CAAI,OAAJ,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAa,aAAb,KAAA,IAAA,GAAA,EAAA,GAA8B,QAA9B;AAA8B,OAD5C;AAEL,MAAA,SAAA,EAAW,MAAG;AA5CpB,YAAA,EAAA,EAAA,EAAA;;AA4CuB,eAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,GAAA,CAAI,OAAJ,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAa,aAAb,CAA2B,WAA3B,KAAA,IAAA,GAAA,EAAA,GAA0C,MAA1C;AAA0C;AAFtD,KAAP;AAIF,GANgB,EAMb,CAAC,eAAD,CANa,CAAhB;AAQA,QAAM,QAAA,GAAW,CAAC,QAAD,IAAa,CAAC,eAA/B;AAEA,SACE,eAAA,IAAA,CAAC,kBAAA,CAAmB,QAApB,EAAC;AAA4B,IAAA,KAAA,EAAO,OAAnC;AACE,IAAA,QAAA,EAAA,CAAA,QAAA,EACA,QAAA,IAAY,eAAA,GAAA,CAAC,MAAD,EAAC;AAAK,MAAA,EAAA,EAAG,cAAR;AAAuB,MAAA,MAAA,EAAM,IAA7B;AAA8B,MAAA;AAA9B,KAAD,CADZ;AADF,GAAD,CADF;AAMF;;AAEA,mBAAA,CAAoB,WAApB,GAAkC,qBAAlC","sourcesContent":["import { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\"\nimport { createContext, useContext, useMemo, useReducer, useRef } from \"react\"\n\ninterface Environment {\n  getWindow: () => Window\n  getDocument: () => Document\n}\n\nconst EnvironmentContext = createContext<Environment>({\n  getDocument() {\n    return document\n  },\n  getWindow() {\n    return window\n  },\n})\n\nEnvironmentContext.displayName = \"EnvironmentContext\"\n\nexport function useEnvironment({ defer }: { defer?: boolean } = {}) {\n  const [, forceUpdate] = useReducer((c) => c + 1, 0)\n\n  useSafeLayoutEffect(() => {\n    if (!defer) return\n    forceUpdate()\n  }, [defer])\n\n  return useContext(EnvironmentContext)\n}\n\nexport interface EnvironmentProviderProps {\n  children: React.ReactNode\n  disabled?: boolean\n  environment?: Environment\n}\n\nexport function EnvironmentProvider(props: EnvironmentProviderProps) {\n  const { children, environment: environmentProp, disabled } = props\n  const ref = useRef<HTMLSpanElement>(null)\n\n  const context = useMemo<Environment>(() => {\n    if (environmentProp) return environmentProp\n    return {\n      getDocument: () => ref.current?.ownerDocument ?? document,\n      getWindow: () => ref.current?.ownerDocument.defaultView ?? window,\n    }\n  }, [environmentProp])\n\n  const showSpan = !disabled || !environmentProp\n\n  return (\n    <EnvironmentContext.Provider value={context}>\n      {children}\n      {showSpan && <span id=\"__chakra_env\" hidden ref={ref} />}\n    </EnvironmentContext.Provider>\n  )\n}\n\nEnvironmentProvider.displayName = \"EnvironmentProvider\"\n"]},"metadata":{},"sourceType":"module"}