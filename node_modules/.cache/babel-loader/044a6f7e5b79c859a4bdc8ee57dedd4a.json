{"ast":null,"code":"'use client';\n\nimport { TRANSITION_EASINGS, getSlideTransition, withDelay } from \"./chunk-6NHXDBFO.mjs\"; // src/slide.tsx\n\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { forwardRef } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar defaultTransition = {\n  exit: {\n    duration: 0.15,\n    ease: TRANSITION_EASINGS.easeInOut\n  },\n  enter: {\n    type: \"spring\",\n    damping: 25,\n    stiffness: 180\n  }\n};\nvar variants = {\n  exit: _ref => {\n    let {\n      direction,\n      transition,\n      transitionEnd,\n      delay\n    } = _ref;\n\n    var _a;\n\n    const {\n      exit: exitStyles\n    } = getSlideTransition({\n      direction\n    });\n    return { ...exitStyles,\n      transition: (_a = transition == null ? void 0 : transition.exit) != null ? _a : withDelay.exit(defaultTransition.exit, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n    };\n  },\n  enter: _ref2 => {\n    let {\n      direction,\n      transitionEnd,\n      transition,\n      delay\n    } = _ref2;\n\n    var _a;\n\n    const {\n      enter: enterStyles\n    } = getSlideTransition({\n      direction\n    });\n    return { ...enterStyles,\n      transition: (_a = transition == null ? void 0 : transition.enter) != null ? _a : withDelay.enter(defaultTransition.enter, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter\n    };\n  }\n};\nvar Slide = forwardRef(function Slide2(props, ref) {\n  const {\n    direction = \"right\",\n    style,\n    unmountOnExit,\n    in: isOpen,\n    className,\n    transition,\n    transitionEnd,\n    delay,\n    motionProps,\n    ...rest\n  } = props;\n  const transitionStyles = getSlideTransition({\n    direction\n  });\n  const computedStyle = Object.assign({\n    position: \"fixed\"\n  }, transitionStyles.position, style);\n  const show = unmountOnExit ? isOpen && unmountOnExit : true;\n  const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  const custom = {\n    transitionEnd,\n    transition,\n    direction,\n    delay\n  };\n  return /* @__PURE__ */jsx(AnimatePresence, {\n    custom,\n    children: show && /* @__PURE__ */jsx(motion.div, { ...rest,\n      ref,\n      initial: \"exit\",\n      className: cx(\"chakra-slide\", className),\n      animate,\n      exit: \"exit\",\n      custom,\n      variants,\n      style: computedStyle,\n      ...motionProps\n    })\n  });\n});\nSlide.displayName = \"Slide\";\nexport { Slide };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/transition/src/slide.tsx"],"names":["Slide"],"mappings":"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","sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  MotionStyle,\n  Variants as TVariants,\n} from \"framer-motion\"\nimport { forwardRef } from \"react\"\nimport {\n  SlideDirection,\n  getSlideTransition,\n  TRANSITION_EASINGS,\n  Variants,\n  withDelay,\n  WithTransitionConfig,\n} from \"./transition-utils\"\n\nexport type { SlideDirection }\n\nconst defaultTransition = {\n  exit: {\n    duration: 0.15,\n    ease: TRANSITION_EASINGS.easeInOut,\n  },\n  enter: {\n    type: \"spring\",\n    damping: 25,\n    stiffness: 180,\n  },\n}\n\nconst variants: Variants<SlideOptions> = {\n  exit: ({ direction, transition, transitionEnd, delay }) => {\n    const { exit: exitStyles } = getSlideTransition({ direction })\n    return {\n      ...exitStyles,\n      transition:\n        transition?.exit ?? withDelay.exit(defaultTransition.exit, delay),\n      transitionEnd: transitionEnd?.exit,\n    }\n  },\n  enter: ({ direction, transitionEnd, transition, delay }) => {\n    const { enter: enterStyles } = getSlideTransition({ direction })\n    return {\n      ...enterStyles,\n      transition:\n        transition?.enter ?? withDelay.enter(defaultTransition.enter, delay),\n      transitionEnd: transitionEnd?.enter,\n    }\n  },\n}\n\nexport interface SlideOptions {\n  /**\n   * The direction to slide from\n   * @default \"right\"\n   */\n  direction?: SlideDirection\n}\n\nexport interface SlideProps\n  extends WithTransitionConfig<HTMLMotionProps<\"div\">>,\n    SlideOptions {\n  motionProps?: HTMLMotionProps<\"div\">\n}\n\nexport const Slide = forwardRef<HTMLDivElement, SlideProps>(function Slide(\n  props,\n  ref,\n) {\n  const {\n    direction = \"right\",\n    style,\n    unmountOnExit,\n    in: isOpen,\n    className,\n    transition,\n    transitionEnd,\n    delay,\n    motionProps,\n    ...rest\n  } = props\n\n  const transitionStyles = getSlideTransition({ direction })\n  const computedStyle: MotionStyle = Object.assign(\n    { position: \"fixed\" },\n    transitionStyles.position,\n    style,\n  )\n\n  const show = unmountOnExit ? isOpen && unmountOnExit : true\n  const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n\n  const custom = { transitionEnd, transition, direction, delay }\n\n  return (\n    <AnimatePresence custom={custom}>\n      {show && (\n        <motion.div\n          {...rest}\n          ref={ref}\n          initial=\"exit\"\n          className={cx(\"chakra-slide\", className)}\n          animate={animate}\n          exit=\"exit\"\n          custom={custom}\n          variants={variants as TVariants}\n          style={computedStyle}\n          {...motionProps}\n        />\n      )}\n    </AnimatePresence>\n  )\n})\n\nSlide.displayName = \"Slide\"\n"]},"metadata":{},"sourceType":"module"}