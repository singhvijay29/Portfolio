{"ast":null,"code":"import { invariant } from '../../../utils/errors.mjs';\n\nfunction resolveElements(elements, scope, selectorCache) {\n  var _a;\n\n  if (typeof elements === \"string\") {\n    let root = document;\n\n    if (scope) {\n      invariant(Boolean(scope.current), \"Scope provided, but no element detected.\");\n      root = scope.current;\n    }\n\n    if (selectorCache) {\n      (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : selectorCache[elements] = root.querySelectorAll(elements);\n      elements = selectorCache[elements];\n    } else {\n      elements = root.querySelectorAll(elements);\n    }\n  } else if (elements instanceof Element) {\n    elements = [elements];\n  }\n  /**\n   * Return an empty array\n   */\n\n\n  return Array.from(elements || []);\n}\n\nexport { resolveElements };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/framer-motion/dist/es/render/dom/utils/resolve-element.mjs"],"names":["invariant","resolveElements","elements","scope","selectorCache","_a","root","document","Boolean","current","querySelectorAll","Element","Array","from"],"mappings":"AAAA,SAASA,SAAT,QAA0B,2BAA1B;;AAEA,SAASC,eAAT,CAAyBC,QAAzB,EAAmCC,KAAnC,EAA0CC,aAA1C,EAAyD;AACrD,MAAIC,EAAJ;;AACA,MAAI,OAAOH,QAAP,KAAoB,QAAxB,EAAkC;AAC9B,QAAII,IAAI,GAAGC,QAAX;;AACA,QAAIJ,KAAJ,EAAW;AACPH,MAAAA,SAAS,CAACQ,OAAO,CAACL,KAAK,CAACM,OAAP,CAAR,EAAyB,0CAAzB,CAAT;AACAH,MAAAA,IAAI,GAAGH,KAAK,CAACM,OAAb;AACH;;AACD,QAAIL,aAAJ,EAAmB;AACf,OAACC,EAAE,GAAGD,aAAa,CAACF,QAAD,CAAnB,MAAmC,IAAnC,IAA2CG,EAAE,KAAK,KAAK,CAAvD,GAA2DA,EAA3D,GAAiED,aAAa,CAACF,QAAD,CAAb,GAA0BI,IAAI,CAACI,gBAAL,CAAsBR,QAAtB,CAA3F;AACAA,MAAAA,QAAQ,GAAGE,aAAa,CAACF,QAAD,CAAxB;AACH,KAHD,MAIK;AACDA,MAAAA,QAAQ,GAAGI,IAAI,CAACI,gBAAL,CAAsBR,QAAtB,CAAX;AACH;AACJ,GAbD,MAcK,IAAIA,QAAQ,YAAYS,OAAxB,EAAiC;AAClCT,IAAAA,QAAQ,GAAG,CAACA,QAAD,CAAX;AACH;AACD;AACJ;AACA;;;AACI,SAAOU,KAAK,CAACC,IAAN,CAAWX,QAAQ,IAAI,EAAvB,CAAP;AACH;;AAED,SAASD,eAAT","sourcesContent":["import { invariant } from '../../../utils/errors.mjs';\n\nfunction resolveElements(elements, scope, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        let root = document;\n        if (scope) {\n            invariant(Boolean(scope.current), \"Scope provided, but no element detected.\");\n            root = scope.current;\n        }\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = root.querySelectorAll(elements));\n            elements = selectorCache[elements];\n        }\n        else {\n            elements = root.querySelectorAll(elements);\n        }\n    }\n    else if (elements instanceof Element) {\n        elements = [elements];\n    }\n    /**\n     * Return an empty array\n     */\n    return Array.from(elements || []);\n}\n\nexport { resolveElements };\n"]},"metadata":{},"sourceType":"module"}