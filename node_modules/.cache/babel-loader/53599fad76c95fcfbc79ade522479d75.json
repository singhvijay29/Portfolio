{"ast":null,"code":"'use client';\n\nimport { cssVars, getBoxShadow, toTransformOrigin } from \"./chunk-6WT2JRWX.mjs\"; // src/modifiers.ts\n\nvar matchWidth = {\n  name: \"matchWidth\",\n  enabled: true,\n  phase: \"beforeWrite\",\n  requires: [\"computeStyles\"],\n  fn: _ref => {\n    let {\n      state\n    } = _ref;\n    state.styles.popper.width = `${state.rects.reference.width}px`;\n  },\n  effect: _ref2 => {\n    let {\n      state\n    } = _ref2;\n    return () => {\n      const reference = state.elements.reference;\n      state.elements.popper.style.width = `${reference.offsetWidth}px`;\n    };\n  }\n};\nvar transformOrigin = {\n  name: \"transformOrigin\",\n  enabled: true,\n  phase: \"write\",\n  fn: _ref3 => {\n    let {\n      state\n    } = _ref3;\n    setTransformOrigin(state);\n  },\n  effect: _ref4 => {\n    let {\n      state\n    } = _ref4;\n    return () => {\n      setTransformOrigin(state);\n    };\n  }\n};\n\nvar setTransformOrigin = state => {\n  state.elements.popper.style.setProperty(cssVars.transformOrigin.var, toTransformOrigin(state.placement));\n};\n\nvar positionArrow = {\n  name: \"positionArrow\",\n  enabled: true,\n  phase: \"afterWrite\",\n  fn: _ref5 => {\n    let {\n      state\n    } = _ref5;\n    setArrowStyles(state);\n  }\n};\n\nvar setArrowStyles = state => {\n  var _a;\n\n  if (!state.placement) return;\n  const overrides = getArrowStyle(state.placement);\n\n  if (((_a = state.elements) == null ? void 0 : _a.arrow) && overrides) {\n    Object.assign(state.elements.arrow.style, {\n      [overrides.property]: overrides.value,\n      width: cssVars.arrowSize.varRef,\n      height: cssVars.arrowSize.varRef,\n      zIndex: -1\n    });\n    const vars = {\n      [cssVars.arrowSizeHalf.var]: `calc(${cssVars.arrowSize.varRef} / 2 - 1px)`,\n      [cssVars.arrowOffset.var]: `calc(${cssVars.arrowSizeHalf.varRef} * -1)`\n    };\n\n    for (const property in vars) {\n      state.elements.arrow.style.setProperty(property, vars[property]);\n    }\n  }\n};\n\nvar getArrowStyle = placement => {\n  if (placement.startsWith(\"top\")) {\n    return {\n      property: \"bottom\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n\n  if (placement.startsWith(\"bottom\")) {\n    return {\n      property: \"top\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n\n  if (placement.startsWith(\"left\")) {\n    return {\n      property: \"right\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n\n  if (placement.startsWith(\"right\")) {\n    return {\n      property: \"left\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n};\n\nvar innerArrow = {\n  name: \"innerArrow\",\n  enabled: true,\n  phase: \"main\",\n  requires: [\"arrow\"],\n  fn: _ref6 => {\n    let {\n      state\n    } = _ref6;\n    setInnerArrowStyles(state);\n  },\n  effect: _ref7 => {\n    let {\n      state\n    } = _ref7;\n    return () => {\n      setInnerArrowStyles(state);\n    };\n  }\n};\n\nvar setInnerArrowStyles = state => {\n  if (!state.elements.arrow) return;\n  const inner = state.elements.arrow.querySelector(\"[data-popper-arrow-inner]\");\n  if (!inner) return;\n  const boxShadow = getBoxShadow(state.placement);\n\n  if (boxShadow) {\n    inner.style.setProperty(\"--popper-arrow-default-shadow\", boxShadow);\n  }\n\n  Object.assign(inner.style, {\n    transform: \"rotate(45deg)\",\n    background: cssVars.arrowBg.varRef,\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\",\n    zIndex: \"inherit\",\n    boxShadow: `var(--popper-arrow-shadow, var(--popper-arrow-default-shadow))`\n  });\n};\n\nexport { matchWidth, transformOrigin, positionArrow, innerArrow };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/popper/src/modifiers.ts"],"names":[],"mappings":"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","sourcesContent":["import { Placement, Modifier, State } from \"@popperjs/core\"\nimport { getBoxShadow, toTransformOrigin, cssVars } from \"./utils\"\n\n/* -------------------------------------------------------------------------------------------------\n The match width modifier sets the popper width to match the reference.\n It is useful for custom selects, autocomplete, etc.\n* -----------------------------------------------------------------------------------------------*/\n\nexport const matchWidth: Modifier<\"matchWidth\", any> = {\n  name: \"matchWidth\",\n  enabled: true,\n  phase: \"beforeWrite\",\n  requires: [\"computeStyles\"],\n  fn: ({ state }) => {\n    state.styles.popper.width = `${state.rects.reference.width}px`\n  },\n  effect:\n    ({ state }) =>\n    () => {\n      const reference = state.elements.reference as HTMLElement\n      state.elements.popper.style.width = `${reference.offsetWidth}px`\n    },\n}\n\n/* -------------------------------------------------------------------------------------------------\n  The transform origin modifier sets the css `transformOrigin` value of the popper\n  based on the dynamic placement state of the popper.\n  \n  Useful when we need to animate/transition the popper.\n* -----------------------------------------------------------------------------------------------*/\n\nexport const transformOrigin: Modifier<\"transformOrigin\", any> = {\n  name: \"transformOrigin\",\n  enabled: true,\n  phase: \"write\",\n  fn: ({ state }) => {\n    setTransformOrigin(state)\n  },\n  effect:\n    ({ state }) =>\n    () => {\n      setTransformOrigin(state)\n    },\n}\n\nconst setTransformOrigin = (state: State) => {\n  state.elements.popper.style.setProperty(\n    cssVars.transformOrigin.var,\n    toTransformOrigin(state.placement),\n  )\n}\n\n/* -------------------------------------------------------------------------------------------------\n  The position arrow modifier adds width, height and overrides the `top/left/right/bottom`\n  styles generated by popper.js to properly position the arrow\n* -----------------------------------------------------------------------------------------------*/\n\nexport const positionArrow: Modifier<\"positionArrow\", any> = {\n  name: \"positionArrow\",\n  enabled: true,\n  phase: \"afterWrite\",\n  fn: ({ state }) => {\n    setArrowStyles(state)\n  },\n}\n\nconst setArrowStyles = (state: Partial<State>) => {\n  if (!state.placement) return\n  const overrides = getArrowStyle(state.placement)\n\n  if (state.elements?.arrow && overrides) {\n    Object.assign(state.elements.arrow.style, {\n      [overrides.property]: overrides.value,\n      width: cssVars.arrowSize.varRef,\n      height: cssVars.arrowSize.varRef,\n      zIndex: -1,\n    })\n\n    const vars = {\n      [cssVars.arrowSizeHalf\n        .var]: `calc(${cssVars.arrowSize.varRef} / 2 - 1px)`,\n      [cssVars.arrowOffset.var]: `calc(${cssVars.arrowSizeHalf.varRef} * -1)`,\n    }\n\n    for (const property in vars) {\n      state.elements.arrow.style.setProperty(property, vars[property])\n    }\n  }\n}\n\nconst getArrowStyle = (placement: Placement) => {\n  if (placement.startsWith(\"top\")) {\n    return { property: \"bottom\", value: cssVars.arrowOffset.varRef }\n  }\n  if (placement.startsWith(\"bottom\")) {\n    return { property: \"top\", value: cssVars.arrowOffset.varRef }\n  }\n  if (placement.startsWith(\"left\")) {\n    return { property: \"right\", value: cssVars.arrowOffset.varRef }\n  }\n  if (placement.startsWith(\"right\")) {\n    return { property: \"left\", value: cssVars.arrowOffset.varRef }\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n  The inner arrow modifier, sets the placement styles for the inner arrow that forms\n  the popper arrow tip.\n* -----------------------------------------------------------------------------------------------*/\n\nexport const innerArrow: Modifier<\"innerArrow\", any> = {\n  name: \"innerArrow\",\n  enabled: true,\n  phase: \"main\",\n  requires: [\"arrow\"],\n  fn: ({ state }) => {\n    setInnerArrowStyles(state)\n  },\n  effect:\n    ({ state }) =>\n    () => {\n      setInnerArrowStyles(state)\n    },\n}\n\nconst setInnerArrowStyles = (state: State) => {\n  if (!state.elements.arrow) return\n\n  const inner = state.elements.arrow.querySelector(\n    \"[data-popper-arrow-inner]\",\n  ) as HTMLElement | null\n\n  if (!inner) return\n  const boxShadow = getBoxShadow(state.placement)\n  if (boxShadow) {\n    inner.style.setProperty(\"--popper-arrow-default-shadow\", boxShadow)\n  }\n\n  Object.assign(inner.style, {\n    transform: \"rotate(45deg)\",\n    background: cssVars.arrowBg.varRef,\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\",\n    zIndex: \"inherit\",\n    boxShadow: `var(--popper-arrow-shadow, var(--popper-arrow-default-shadow))`,\n  })\n}\n"]},"metadata":{},"sourceType":"module"}