{"ast":null,"code":"'use client';\n\nimport { useTabsStyles } from \"./chunk-GTRZJDIL.mjs\";\nimport { useTab } from \"./chunk-NXSBASJ3.mjs\"; // src/tab.tsx\n\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Tab = forwardRef(function Tab2(props, ref) {\n  const styles = useTabsStyles();\n  const tabProps = useTab({ ...props,\n    ref\n  });\n  const tabStyles = {\n    outline: \"0\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    ...styles.tab\n  };\n  return /* @__PURE__ */jsx(chakra.button, { ...tabProps,\n    className: cx(\"chakra-tabs__tab\", props.className),\n    __css: tabStyles\n  });\n});\nTab.displayName = \"Tab\";\nexport { Tab };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/tabs/src/tab.tsx"],"names":["Tab"],"mappings":";;;;;AAAA,SAAS,EAAT,QAAmB,yBAAnB;AACA,SAGE,MAHF,EAIE,UAJF,QAKO,mBALP;AA6BI,SAAA,GAAA,QAAA,mBAAA;AAbG,IAAM,GAAA,GAAM,UAAA,CAA+B,SAASA,IAAT,CAAa,KAAb,EAAoB,GAApB,EAAyB;AACzE,QAAM,MAAA,GAAS,aAAA,EAAf;AACA,QAAM,QAAA,GAAW,MAAA,CAAO,EAAE,GAAG,KAAL;AAAY,IAAA;AAAZ,GAAP,CAAjB;AAEA,QAAM,SAAA,GAA+B;AACnC,IAAA,OAAA,EAAS,GAD0B;AAEnC,IAAA,OAAA,EAAS,MAF0B;AAGnC,IAAA,UAAA,EAAY,QAHuB;AAInC,IAAA,cAAA,EAAgB,QAJmB;AAKnC,OAAG,MAAA,CAAO;AALyB,GAArC;AAQA,SACE,eAAA,GAAA,CAAC,MAAA,CAAO,MAAR,EAAC,EACE,GAAG,QADL;AAEC,IAAA,SAAA,EAAW,EAAA,CAAG,kBAAH,EAAuB,KAAA,CAAM,SAA7B,CAFZ;AAGC,IAAA,KAAA,EAAO;AAHR,GAAD,CADF;AAOD,CAnBkB,CAAZ;AAqBP,GAAA,CAAI,WAAJ,GAAkB,KAAlB","sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  HTMLChakraProps,\n  SystemStyleObject,\n  chakra,\n  forwardRef,\n} from \"@chakra-ui/system\"\n\nimport { useTabsStyles } from \"./tabs\"\nimport { UseTabOptions, useTab } from \"./use-tabs\"\n\nexport interface TabProps extends UseTabOptions, HTMLChakraProps<\"button\"> {}\n\n/**\n * Tab button used to activate a specific tab panel. It renders a `button`,\n * and is responsible for automatic and manual selection modes.\n */\nexport const Tab = forwardRef<TabProps, \"button\">(function Tab(props, ref) {\n  const styles = useTabsStyles()\n  const tabProps = useTab({ ...props, ref })\n\n  const tabStyles: SystemStyleObject = {\n    outline: \"0\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    ...styles.tab,\n  }\n\n  return (\n    <chakra.button\n      {...tabProps}\n      className={cx(\"chakra-tabs__tab\", props.className)}\n      __css={tabStyles}\n    />\n  )\n})\n\nTab.displayName = \"Tab\"\n"]},"metadata":{},"sourceType":"module"}