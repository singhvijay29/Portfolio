{"ast":null,"code":"'use client'; // src/link-box.tsx\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar LinkOverlay = forwardRef(function LinkOverlay2(props, ref) {\n  const {\n    isExternal,\n    target,\n    rel,\n    className,\n    ...rest\n  } = props;\n  return /* @__PURE__ */jsx(chakra.a, { ...rest,\n    ref,\n    className: cx(\"chakra-linkbox__overlay\", className),\n    rel: isExternal ? \"noopener noreferrer\" : rel,\n    target: isExternal ? \"_blank\" : target,\n    __css: {\n      position: \"static\",\n      \"&::before\": {\n        content: \"''\",\n        cursor: \"inherit\",\n        display: \"block\",\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        zIndex: 0,\n        width: \"100%\",\n        height: \"100%\"\n      }\n    }\n  });\n});\nvar LinkBox = forwardRef(function LinkBox2(props, ref) {\n  const {\n    className,\n    ...rest\n  } = props;\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    position: \"relative\",\n    ...rest,\n    className: cx(\"chakra-linkbox\", className),\n    __css: {\n      /* Elevate the links and abbreviations up */\n      \"a[href]:not(.chakra-linkbox__overlay), abbr[title]\": {\n        position: \"relative\",\n        zIndex: 1\n      }\n    }\n  });\n});\nexport { LinkOverlay, LinkBox };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/layout/src/link-box.tsx"],"names":["LinkOverlay","LinkBox"],"mappings":";;AAAA,SAAS,MAAT,EAAiB,UAAjB,QAAoD,mBAApD;AACA,SAAS,EAAT,QAAmB,yBAAnB;AAeM,SAAA,GAAA,QAAA,mBAAA;AAJC,IAAM,WAAA,GAAc,UAAA,CACzB,SAASA,YAAT,CAAqB,KAArB,EAA4B,GAA5B,EAAiC;AAC/B,QAAM;AAAE,IAAA,UAAF;AAAc,IAAA,MAAd;AAAsB,IAAA,GAAtB;AAA2B,IAAA,SAA3B;AAAsC,OAAG;AAAzC,MAAkD,KAAxD;AACA,SACE,eAAA,GAAA,CAAC,MAAA,CAAO,CAAR,EAAC,EACE,GAAG,IADL;AAEC,IAAA,GAFD;AAGC,IAAA,SAAA,EAAW,EAAA,CAAG,yBAAH,EAA8B,SAA9B,CAHZ;AAIC,IAAA,GAAA,EAAK,UAAA,GAAa,qBAAb,GAAqC,GAJ3C;AAKC,IAAA,MAAA,EAAQ,UAAA,GAAa,QAAb,GAAwB,MALjC;AAMC,IAAA,KAAA,EAAO;AACL,MAAA,QAAA,EAAU,QADL;AAEL,mBAAa;AACX,QAAA,OAAA,EAAS,IADE;AAEX,QAAA,MAAA,EAAQ,SAFG;AAGX,QAAA,OAAA,EAAS,OAHE;AAIX,QAAA,QAAA,EAAU,UAJC;AAKX,QAAA,GAAA,EAAK,CALM;AAMX,QAAA,IAAA,EAAM,CANK;AAOX,QAAA,MAAA,EAAQ,CAPG;AAQX,QAAA,KAAA,EAAO,MARI;AASX,QAAA,MAAA,EAAQ;AATG;AAFR;AANR,GAAD,CADF;AAuBF,CA1ByB,CAApB;AAqCA,IAAM,OAAA,GAAU,UAAA,CAAgC,SAASC,QAAT,CACrD,KADqD,EAErD,GAFqD,EAGrD;AACA,QAAM;AAAE,IAAA,SAAF;AAAa,OAAG;AAAhB,MAAyB,KAA/B;AAEA,SACE,eAAA,GAAA,CAAC,MAAA,CAAO,GAAR,EAAC;AACC,IAAA,GADD;AAEC,IAAA,QAAA,EAAS,UAFV;AAGE,OAAG,IAHL;AAIC,IAAA,SAAA,EAAW,EAAA,CAAG,gBAAH,EAAqB,SAArB,CAJZ;AAKC,IAAA,KAAA,EAAO;AAAA;AAEL,4DAAsD;AACpD,QAAA,QAAA,EAAU,UAD0C;AAEpD,QAAA,MAAA,EAAQ;AAF4C;AAFjD;AALR,GAAD,CADF;AAeD,CArBsB,CAAhB","sourcesContent":["import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface LinkOverlayProps extends HTMLChakraProps<\"a\"> {\n  /**\n   *  If `true`, the link will open in new tab\n   *\n   * @default false\n   */\n  isExternal?: boolean\n}\n\nexport const LinkOverlay = forwardRef<LinkOverlayProps, \"a\">(\n  function LinkOverlay(props, ref) {\n    const { isExternal, target, rel, className, ...rest } = props\n    return (\n      <chakra.a\n        {...rest}\n        ref={ref}\n        className={cx(\"chakra-linkbox__overlay\", className)}\n        rel={isExternal ? \"noopener noreferrer\" : rel}\n        target={isExternal ? \"_blank\" : target}\n        __css={{\n          position: \"static\",\n          \"&::before\": {\n            content: \"''\",\n            cursor: \"inherit\",\n            display: \"block\",\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            zIndex: 0,\n            width: \"100%\",\n            height: \"100%\",\n          },\n        }}\n      />\n    )\n  },\n)\n\nexport interface LinkBoxProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * `LinkBox` is used to wrap content areas within a link while ensuring semantic html\n *\n * @see Docs https://chakra-ui.com/docs/navigation/link-overlay\n * @see Resources https://www.sarasoueidan.com/blog/nested-links\n */\nexport const LinkBox = forwardRef<LinkBoxProps, \"div\">(function LinkBox(\n  props,\n  ref,\n) {\n  const { className, ...rest } = props\n\n  return (\n    <chakra.div\n      ref={ref}\n      position=\"relative\"\n      {...rest}\n      className={cx(\"chakra-linkbox\", className)}\n      __css={{\n        /* Elevate the links and abbreviations up */\n        \"a[href]:not(.chakra-linkbox__overlay), abbr[title]\": {\n          position: \"relative\",\n          zIndex: 1,\n        },\n      }}\n    />\n  )\n})\n"]},"metadata":{},"sourceType":"module"}