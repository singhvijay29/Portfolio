{"ast":null,"code":"'use client'; // src/box.tsx\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Box = chakra(\"div\");\nBox.displayName = \"Box\";\nvar Square = forwardRef(function Square2(props, ref) {\n  const {\n    size,\n    centerContent = true,\n    ...rest\n  } = props;\n  const styles = centerContent ? {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  } : {};\n  return /* @__PURE__ */jsx(Box, {\n    ref,\n    boxSize: size,\n    __css: { ...styles,\n      flexShrink: 0,\n      flexGrow: 0\n    },\n    ...rest\n  });\n});\nSquare.displayName = \"Square\";\nvar Circle = forwardRef(function Circle2(props, ref) {\n  const {\n    size,\n    ...rest\n  } = props;\n  return /* @__PURE__ */jsx(Square, {\n    size,\n    ref,\n    borderRadius: \"9999px\",\n    ...rest\n  });\n});\nCircle.displayName = \"Circle\";\nexport { Box, Square, Circle };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/layout/src/box.tsx"],"names":["Square","Circle"],"mappings":";;AAAA,SACE,MADF,EAEE,UAFF,QAKO,mBALP;AAiDI,SAAA,GAAA,QAAA,mBAAA;AAlCG,IAAM,GAAA,GAAM,MAAA,CAAO,KAAP,CAAZ;AAEP,GAAA,CAAI,WAAJ,GAAkB,KAAlB;AAqBO,IAAM,MAAA,GAAS,UAAA,CAA+B,SAASA,OAAT,CACnD,KADmD,EAEnD,GAFmD,EAGnD;AACA,QAAM;AAAE,IAAA,IAAF;AAAQ,IAAA,aAAA,GAAgB,IAAxB;AAA8B,OAAG;AAAjC,MAA0C,KAAhD;AAEA,QAAM,MAAA,GAA4B,aAAA,GAC9B;AAAE,IAAA,OAAA,EAAS,MAAX;AAAmB,IAAA,UAAA,EAAY,QAA/B;AAAyC,IAAA,cAAA,EAAgB;AAAzD,GAD8B,GAE9B,EAFJ;AAIA,SACE,eAAA,GAAA,CAAC,GAAD,EAAC;AACC,IAAA,GADD;AAEC,IAAA,OAAA,EAAS,IAFV;AAGC,IAAA,KAAA,EAAO,EACL,GAAG,MADE;AAEL,MAAA,UAAA,EAAY,CAFP;AAGL,MAAA,QAAA,EAAU;AAHL,KAHR;AAQE,OAAG;AARL,GAAD,CADF;AAYD,CAtBqB,CAAf;AAwBP,MAAA,CAAO,WAAP,GAAqB,QAArB;AAEO,IAAM,MAAA,GAAS,UAAA,CAA+B,SAASC,OAAT,CACnD,KADmD,EAEnD,GAFmD,EAGnD;AACA,QAAM;AAAE,IAAA,IAAF;AAAQ,OAAG;AAAX,MAAoB,KAA1B;AACA,SAAO,eAAA,GAAA,CAAC,MAAD,EAAC;AAAO,IAAA,IAAP;AAAmB,IAAA,GAAnB;AAA6B,IAAA,YAAA,EAAa,QAA1C;AAAoD,OAAG;AAAvD,GAAD,CAAP;AACD,CANqB,CAAf;AAQP,MAAA,CAAO,WAAP,GAAqB,QAArB","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  SystemStyleObject,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\n\nexport interface BoxProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * Box is the most abstract component on top of which other chakra\n * components are built. It renders a `div` element by default.\n *\n * @see Docs https://chakra-ui.com/box\n */\nexport const Box = chakra(\"div\")\n\nBox.displayName = \"Box\"\n\n/**\n * As a constraint, you can't pass size related props\n * Only `size` would be allowed\n */\ntype Omitted = \"size\" | \"boxSize\" | \"width\" | \"height\" | \"w\" | \"h\"\n\nexport interface SquareProps extends Omit<BoxProps, Omitted> {\n  /**\n   * The size (width and height) of the square\n   */\n  size?: BoxProps[\"width\"]\n  /**\n   * If `true`, the content will be centered in the square\n   *\n   * @default false\n   */\n  centerContent?: boolean\n}\n\nexport const Square = forwardRef<SquareProps, \"div\">(function Square(\n  props,\n  ref,\n) {\n  const { size, centerContent = true, ...rest } = props\n\n  const styles: SystemStyleObject = centerContent\n    ? { display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }\n    : {}\n\n  return (\n    <Box\n      ref={ref}\n      boxSize={size}\n      __css={{\n        ...styles,\n        flexShrink: 0,\n        flexGrow: 0,\n      }}\n      {...rest}\n    />\n  )\n})\n\nSquare.displayName = \"Square\"\n\nexport const Circle = forwardRef<SquareProps, \"div\">(function Circle(\n  props,\n  ref,\n) {\n  const { size, ...rest } = props\n  return <Square size={size} ref={ref} borderRadius=\"9999px\" {...rest} />\n})\n\nCircle.displayName = \"Circle\"\n"]},"metadata":{},"sourceType":"module"}