{"ast":null,"code":"'use client';\n\nimport { usePopover } from \"./chunk-A566ERKI.mjs\";\nimport { PopoverProvider, PopoverStylesProvider } from \"./chunk-Z3POGKNI.mjs\"; // src/popover.tsx\n\nimport { omitThemingProps, useMultiStyleConfig, useTheme } from \"@chakra-ui/system\";\nimport { runIfFn } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\n\nfunction Popover(props) {\n  const styles = useMultiStyleConfig(\"Popover\", props);\n  const {\n    children,\n    ...rest\n  } = omitThemingProps(props);\n  const theme = useTheme();\n  const context = usePopover({ ...rest,\n    direction: theme.direction\n  });\n  return /* @__PURE__ */jsx(PopoverProvider, {\n    value: context,\n    children: /* @__PURE__ */jsx(PopoverStylesProvider, {\n      value: styles,\n      children: runIfFn(children, {\n        isOpen: context.isOpen,\n        onClose: context.onClose,\n        forceUpdate: context.forceUpdate\n      })\n    })\n  });\n}\n\nPopover.displayName = \"Popover\";\nexport { Popover };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/popover/src/popover.tsx"],"names":[],"mappings":";;;;;AACA,SACE,gBADF,EAGE,mBAHF,EAIE,QAJF,QAKO,mBALP;AAMA,SAAS,OAAT,QAAwB,yBAAxB;AA+BM,SAAA,GAAA,QAAA,mBAAA;;AATC,SAAS,OAAT,CAAiB,KAAjB,EAAsC;AAC3C,QAAM,MAAA,GAAS,mBAAA,CAAoB,SAApB,EAA+B,KAA/B,CAAf;AAEA,QAAM;AAAE,IAAA,QAAF;AAAY,OAAG;AAAf,MAAwB,gBAAA,CAAiB,KAAjB,CAA9B;AACA,QAAM,KAAA,GAAQ,QAAA,EAAd;AACA,QAAM,OAAA,GAAU,UAAA,CAAW,EAAE,GAAG,IAAL;AAAW,IAAA,SAAA,EAAW,KAAA,CAAM;AAA5B,GAAX,CAAhB;AAEA,SACE,eAAA,GAAA,CAAC,eAAD,EAAC;AAAgB,IAAA,KAAA,EAAO,OAAvB;AACC,IAAA,QAAA,EAAA,eAAA,GAAA,CAAC,qBAAD,EAAC;AAAsB,MAAA,KAAA,EAAO,MAA7B;AACE,MAAA,QAAA,EAAA,OAAA,CAAQ,QAAR,EAAkB;AACjB,QAAA,MAAA,EAAQ,OAAA,CAAQ,MADC;AAEjB,QAAA,OAAA,EAAS,OAAA,CAAQ,OAFA;AAGjB,QAAA,WAAA,EAAa,OAAA,CAAQ;AAHJ,OAAlB;AADF,KAAD;AADD,GAAD,CADF;AAWF;;AAEA,OAAA,CAAQ,WAAR,GAAsB,SAAtB","sourcesContent":["import { MaybeRenderProp } from \"@chakra-ui/react-types\"\nimport {\n  omitThemingProps,\n  ThemingProps,\n  useMultiStyleConfig,\n  useTheme,\n} from \"@chakra-ui/system\"\nimport { runIfFn } from \"@chakra-ui/shared-utils\"\nimport { PopoverProvider, PopoverStylesProvider } from \"./popover-context\"\nimport { usePopover, UsePopoverProps } from \"./use-popover\"\n\nexport interface PopoverProps extends UsePopoverProps, ThemingProps<\"Popover\"> {\n  /**\n   * The content of the popover. It is usually the `PopoverTrigger`,\n   * and `PopoverContent`\n   */\n  children?: MaybeRenderProp<{\n    isOpen: boolean\n    onClose: () => void\n    forceUpdate: (() => void) | undefined\n  }>\n}\n\n/**\n * Popover is used to bring attention to specific user interface elements,\n * typically to suggest an action or to guide users through a new experience.\n *\n * @see Docs https://chakra-ui.com/docs/components/popover\n */\nexport function Popover(props: PopoverProps) {\n  const styles = useMultiStyleConfig(\"Popover\", props)\n\n  const { children, ...rest } = omitThemingProps(props)\n  const theme = useTheme()\n  const context = usePopover({ ...rest, direction: theme.direction })\n\n  return (\n    <PopoverProvider value={context}>\n      <PopoverStylesProvider value={styles}>\n        {runIfFn(children, {\n          isOpen: context.isOpen,\n          onClose: context.onClose,\n          forceUpdate: context.forceUpdate,\n        })}\n      </PopoverStylesProvider>\n    </PopoverProvider>\n  )\n}\n\nPopover.displayName = \"Popover\"\n"]},"metadata":{},"sourceType":"module"}