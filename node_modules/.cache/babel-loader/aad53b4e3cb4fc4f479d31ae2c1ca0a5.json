{"ast":null,"code":"'use client'; // src/skip-nav.tsx\n\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar fallbackId = \"chakra-skip-nav\";\n\nfunction getStyles(styles) {\n  return {\n    userSelect: \"none\",\n    border: \"0\",\n    height: \"1px\",\n    width: \"1px\",\n    margin: \"-1px\",\n    padding: \"0\",\n    outline: \"0\",\n    overflow: \"hidden\",\n    position: \"absolute\",\n    clip: \"rect(0 0 0 0)\",\n    ...styles,\n    _focus: {\n      clip: \"auto\",\n      width: \"auto\",\n      height: \"auto\",\n      ...styles[\"_focus\"]\n    }\n  };\n}\n\nvar SkipNavLink = forwardRef(function SkipNavLink2(props, ref) {\n  const styles = useStyleConfig(\"SkipLink\", props);\n  const {\n    id = fallbackId,\n    ...rest\n  } = omitThemingProps(props);\n  return /* @__PURE__ */jsx(chakra.a, { ...rest,\n    ref,\n    href: `#${id}`,\n    __css: getStyles(styles)\n  });\n});\nSkipNavLink.displayName = \"SkipNavLink\";\nvar SkipNavContent = forwardRef(function SkipNavContent2(props, ref) {\n  const {\n    id = fallbackId,\n    ...rest\n  } = props;\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    id,\n    tabIndex: -1,\n    style: {\n      outline: 0\n    },\n    ...rest\n  });\n});\nSkipNavContent.displayName = \"SkipNavContent\";\nexport { SkipNavLink, SkipNavContent };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/skip-nav/src/skip-nav.tsx"],"names":["SkipNavLink","SkipNavContent"],"mappings":";;AAAA,SACE,MADF,EAEE,UAFF,EAGE,gBAHF,EAME,cANF,QAQO,mBARP;AAgDM,SAAA,GAAA,QAAA,mBAAA;AAlCN,IAAM,UAAA,GAAa,iBAAnB;;AAEA,SAAS,SAAT,CAAmB,MAAnB,EAAmD;AACjD,SAAO;AACL,IAAA,UAAA,EAAY,MADP;AAEL,IAAA,MAAA,EAAQ,GAFH;AAGL,IAAA,MAAA,EAAQ,KAHH;AAIL,IAAA,KAAA,EAAO,KAJF;AAKL,IAAA,MAAA,EAAQ,MALH;AAML,IAAA,OAAA,EAAS,GANJ;AAOL,IAAA,OAAA,EAAS,GAPJ;AAQL,IAAA,QAAA,EAAU,QARL;AASL,IAAA,QAAA,EAAU,UATL;AAUL,IAAA,IAAA,EAAM,eAVD;AAWL,OAAG,MAXE;AAYL,IAAA,MAAA,EAAQ;AACN,MAAA,IAAA,EAAM,MADA;AAEN,MAAA,KAAA,EAAO,MAFD;AAGN,MAAA,MAAA,EAAQ,MAHF;AAIN,SAAG,MAAA,CAAO,QAAP;AAJG;AAZH,GAAP;AAmBF;;AAOO,IAAM,WAAA,GAAc,UAAA,CACzB,SAASA,YAAT,CAAqB,KAArB,EAA4B,GAA5B,EAAiC;AAC/B,QAAM,MAAA,GAAS,cAAA,CAAe,UAAf,EAA2B,KAA3B,CAAf;AACA,QAAM;AAAE,IAAA,EAAA,GAAK,UAAP;AAAmB,OAAG;AAAtB,MAA+B,gBAAA,CAAiB,KAAjB,CAArC;AACA,SACE,eAAA,GAAA,CAAC,MAAA,CAAO,CAAR,EAAC,EAAU,GAAG,IAAb;AAAmB,IAAA,GAAnB;AAA6B,IAAA,IAAA,EAAM,IAAI,EAAA,EAAvC;AAA6C,IAAA,KAAA,EAAO,SAAA,CAAU,MAAV;AAApD,GAAD,CADF;AAGF,CAPyB,CAApB;AAUP,WAAA,CAAY,WAAZ,GAA0B,aAA1B;AASO,IAAM,cAAA,GAAiB,UAAA,CAC5B,SAASC,eAAT,CAAwB,KAAxB,EAA+B,GAA/B,EAAoC;AAClC,QAAM;AAAE,IAAA,EAAA,GAAK,UAAP;AAAmB,OAAG;AAAtB,MAA+B,KAArC;AACA,SACE,eAAA,GAAA,CAAC,MAAA,CAAO,GAAR,EAAC;AACC,IAAA,GADD;AAEC,IAAA,EAFD;AAGC,IAAA,QAAA,EAAU,CAAA,CAHX;AAIC,IAAA,KAAA,EAAO;AAAE,MAAA,OAAA,EAAS;AAAX,KAJR;AAKE,OAAG;AALL,GAAD,CADF;AASF,CAZ4B,CAAvB;AAeP,cAAA,CAAe,WAAf,GAA6B,gBAA7B","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\n\nexport interface SkipNavLinkProps\n  extends HTMLChakraProps<\"a\">,\n    ThemingProps<\"SkipNavLink\"> {}\n\nconst fallbackId = \"chakra-skip-nav\"\n\nfunction getStyles(styles: any): SystemStyleObject {\n  return {\n    userSelect: \"none\",\n    border: \"0\",\n    height: \"1px\",\n    width: \"1px\",\n    margin: \"-1px\",\n    padding: \"0\",\n    outline: \"0\",\n    overflow: \"hidden\",\n    position: \"absolute\",\n    clip: \"rect(0 0 0 0)\",\n    ...styles,\n    _focus: {\n      clip: \"auto\",\n      width: \"auto\",\n      height: \"auto\",\n      ...styles[\"_focus\"],\n    },\n  }\n}\n\n/**\n * Renders a link that remains hidden until focused to skip to the main content.\n *\n * @see Docs https://chakra-ui.com/docs/components/skip-nav\n */\nexport const SkipNavLink = forwardRef<SkipNavLinkProps, \"a\">(\n  function SkipNavLink(props, ref) {\n    const styles = useStyleConfig(\"SkipLink\", props)\n    const { id = fallbackId, ...rest } = omitThemingProps(props)\n    return (\n      <chakra.a {...rest} ref={ref} href={`#${id}`} __css={getStyles(styles)} />\n    )\n  },\n)\n\nSkipNavLink.displayName = \"SkipNavLink\"\n\nexport interface SkipNavContentProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * Renders a div as the target for the `SkipNavLink`.\n *\n * @see Docs https://chakra-ui.com/docs/components/skip-nav\n */\nexport const SkipNavContent = forwardRef<SkipNavContentProps, \"div\">(\n  function SkipNavContent(props, ref) {\n    const { id = fallbackId, ...rest } = props\n    return (\n      <chakra.div\n        ref={ref}\n        id={id}\n        tabIndex={-1}\n        style={{ outline: 0 }}\n        {...rest}\n      />\n    )\n  },\n)\n\nSkipNavContent.displayName = \"SkipNavContent\"\n"]},"metadata":{},"sourceType":"module"}