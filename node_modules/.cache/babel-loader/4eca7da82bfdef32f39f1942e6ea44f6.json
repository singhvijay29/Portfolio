{"ast":null,"code":"// src/utils/run-if-fn.ts\nvar isFunction = value => typeof value === \"function\";\n\nfunction runIfFn(valueOrFn) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return isFunction(valueOrFn) ? valueOrFn(...args) : valueOrFn;\n}\n\nexport { runIfFn };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/theme/src/utils/run-if-fn.ts"],"names":[],"mappings":";AAAA,IAAM,UAAA,GAAc,KAAD,IACjB,OAAO,KAAP,KAAiB,UADnB;;AAGO,SAAS,OAAT,CACL,SADK,EAGF;AAAA,oCADA,IACA;AADA,IAAA,IACA;AAAA;;AACH,SAAO,UAAA,CAAW,SAAX,CAAA,GAAwB,SAAA,CAAU,GAAG,IAAb,CAAxB,GAA6C,SAApD;AACF","sourcesContent":["const isFunction = (value: any): value is Function =>\n  typeof value === \"function\"\n\nexport function runIfFn<T, U>(\n  valueOrFn: T | ((...fnArgs: U[]) => T),\n  ...args: U[]\n): T {\n  return isFunction(valueOrFn) ? valueOrFn(...args) : valueOrFn\n}\n"]},"metadata":{},"sourceType":"module"}