{"ast":null,"code":"'use client'; // src/media-query.utils.ts\n\nimport { breakpoints as defaultBreakPoints } from \"@chakra-ui/breakpoint-utils\";\n\nfunction getClosestValue(values, breakpoint) {\n  let breakpoints = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultBreakPoints;\n  let index = Object.keys(values).indexOf(breakpoint);\n\n  if (index !== -1) {\n    return values[breakpoint];\n  }\n\n  let stopIndex = breakpoints.indexOf(breakpoint);\n\n  while (stopIndex >= 0) {\n    const key = breakpoints[stopIndex];\n\n    if (values.hasOwnProperty(key)) {\n      index = stopIndex;\n      break;\n    }\n\n    stopIndex -= 1;\n  }\n\n  if (index !== -1) {\n    const key = breakpoints[index];\n    return values[key];\n  }\n\n  return void 0;\n}\n\nexport { getClosestValue };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/media-query/src/media-query.utils.ts"],"names":[],"mappings":";;AAAA,SAAS,WAAA,IAAe,kBAAxB,QAAkD,6BAAlD;;AAEO,SAAS,eAAT,CACL,MADK,EAEL,UAFK,EAIL;AAAA,MADA,WACA,uEADc,kBACd;AACA,MAAI,KAAA,GAAQ,MAAA,CAAO,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,UAA5B,CAAZ;;AAEA,MAAI,KAAA,KAAU,CAAA,CAAd,EAAkB;AAChB,WAAO,MAAA,CAAO,UAAP,CAAP;AACF;;AAEA,MAAI,SAAA,GAAY,WAAA,CAAY,OAAZ,CAAoB,UAApB,CAAhB;;AAEA,SAAO,SAAA,IAAa,CAApB,EAAuB;AACrB,UAAM,GAAA,GAAM,WAAA,CAAY,SAAZ,CAAZ;;AAEA,QAAI,MAAA,CAAO,cAAP,CAAsB,GAAtB,CAAJ,EAAgC;AAC9B,MAAA,KAAA,GAAQ,SAAR;AACA;AACF;;AACA,IAAA,SAAA,IAAa,CAAb;AACF;;AAEA,MAAI,KAAA,KAAU,CAAA,CAAd,EAAkB;AAChB,UAAM,GAAA,GAAM,WAAA,CAAY,KAAZ,CAAZ;AACA,WAAO,MAAA,CAAO,GAAP,CAAP;AACF;;AAEA,SAAO,KAAA,CAAP;AACF","sourcesContent":["import { breakpoints as defaultBreakPoints } from \"@chakra-ui/breakpoint-utils\"\n\nexport function getClosestValue<T = any>(\n  values: Record<string, T>,\n  breakpoint: string,\n  breakpoints = defaultBreakPoints,\n) {\n  let index = Object.keys(values).indexOf(breakpoint)\n\n  if (index !== -1) {\n    return values[breakpoint]\n  }\n\n  let stopIndex = breakpoints.indexOf(breakpoint)\n\n  while (stopIndex >= 0) {\n    const key = breakpoints[stopIndex]\n\n    if (values.hasOwnProperty(key)) {\n      index = stopIndex\n      break\n    }\n    stopIndex -= 1\n  }\n\n  if (index !== -1) {\n    const key = breakpoints[index]\n    return values[key]\n  }\n\n  return undefined\n}\n"]},"metadata":{},"sourceType":"module"}