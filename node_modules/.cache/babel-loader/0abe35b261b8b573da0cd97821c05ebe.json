{"ast":null,"code":"'use client';\n\nimport { usePopoverContext } from \"./chunk-Z3POGKNI.mjs\"; // src/popover-transition.tsx\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { motion } from \"framer-motion\";\nimport { jsx } from \"react/jsx-runtime\";\n\nfunction mergeVariants(variants) {\n  if (!variants) return;\n  return {\n    enter: { ...variants.enter,\n      visibility: \"visible\"\n    },\n    exit: { ...variants.exit,\n      transitionEnd: {\n        visibility: \"hidden\"\n      }\n    }\n  };\n}\n\nvar scaleFade = {\n  exit: {\n    opacity: 0,\n    scale: 0.95,\n    transition: {\n      duration: 0.1,\n      ease: [0.4, 0, 1, 1]\n    }\n  },\n  enter: {\n    scale: 1,\n    opacity: 1,\n    transition: {\n      duration: 0.15,\n      ease: [0, 0, 0.2, 1]\n    }\n  }\n};\nvar MotionSection = chakra(motion.section);\nvar PopoverTransition = forwardRef(function PopoverTransition2(props, ref) {\n  const {\n    variants = scaleFade,\n    ...rest\n  } = props;\n  const {\n    isOpen\n  } = usePopoverContext();\n  return /* @__PURE__ */jsx(MotionSection, {\n    ref,\n    variants: mergeVariants(variants),\n    initial: false,\n    animate: isOpen ? \"enter\" : \"exit\",\n    ...rest\n  });\n});\nPopoverTransition.displayName = \"PopoverTransition\";\nexport { PopoverTransition };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/popover/src/popover-transition.tsx"],"names":["PopoverTransition"],"mappings":";;;;AAAA,SAAS,MAAT,EAAkC,UAAlC,QAAoD,mBAApD;AACA,SAA0B,MAA1B,QAAiD,eAAjD;AAuEI,SAAA,GAAA,QAAA,mBAAA;;AA/CJ,SAAS,aAAT,CAAuB,QAAvB,EAAuD;AACrD,MAAI,CAAC,QAAL,EAAe;AACf,SAAO;AACL,IAAA,KAAA,EAAO,EACL,GAAG,QAAA,CAAS,KADP;AAEL,MAAA,UAAA,EAAY;AAFP,KADF;AAKL,IAAA,IAAA,EAAM,EACJ,GAAG,QAAA,CAAS,IADR;AAEJ,MAAA,aAAA,EAAe;AACb,QAAA,UAAA,EAAY;AADC;AAFX;AALD,GAAP;AAYF;;AAEA,IAAM,SAAA,GAA4B;AAChC,EAAA,IAAA,EAAM;AACJ,IAAA,OAAA,EAAS,CADL;AAEJ,IAAA,KAAA,EAAO,IAFH;AAGJ,IAAA,UAAA,EAAY;AACV,MAAA,QAAA,EAAU,GADA;AAEV,MAAA,IAAA,EAAM,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,EAAY,CAAZ;AAFI;AAHR,GAD0B;AAShC,EAAA,KAAA,EAAO;AACL,IAAA,KAAA,EAAO,CADF;AAEL,IAAA,OAAA,EAAS,CAFJ;AAGL,IAAA,UAAA,EAAY;AACV,MAAA,QAAA,EAAU,IADA;AAEV,MAAA,IAAA,EAAM,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP,EAAY,CAAZ;AAFI;AAHP;AATyB,CAAlC;AAmBA,IAAM,aAAA,GAAgB,MAAA,CAAO,MAAA,CAAO,OAAd,CAAtB;AAKO,IAAM,iBAAA,GAAoB,UAAA,CAAW,SAASA,kBAAT,CAC1C,KAD0C,EAE1C,GAF0C,EAG1C;AACA,QAAM;AAAE,IAAA,QAAA,GAAW,SAAb;AAAwB,OAAG;AAA3B,MAAoC,KAA1C;AACA,QAAM;AAAE,IAAA;AAAF,MAAa,iBAAA,EAAnB;AACA,SACE,eAAA,GAAA,CAAC,aAAD,EAAC;AACC,IAAA,GADD;AAEC,IAAA,QAAA,EAAU,aAAA,CAAc,QAAd,CAFX;AAGC,IAAA,OAAA,EAAS,KAHV;AAIC,IAAA,OAAA,EAAS,MAAA,GAAS,OAAT,GAAmB,MAJ7B;AAKE,OAAG;AALL,GAAD,CADF;AASD,CAfgC,CAA1B;AAiBP,iBAAA,CAAkB,WAAlB,GAAgC,mBAAhC","sourcesContent":["import { chakra, HTMLChakraProps, forwardRef } from \"@chakra-ui/system\"\nimport { HTMLMotionProps, motion, Variant } from \"framer-motion\"\nimport React from \"react\"\nimport { usePopoverContext } from \"./popover-context\"\n\ntype HTMLMotionChakraProps<T extends keyof React.ReactHTML> = Omit<\n  HTMLChakraProps<T>,\n  keyof HTMLMotionProps<T>\n> &\n  Omit<\n    HTMLMotionProps<T>,\n    | \"style\"\n    | \"onDrag\"\n    | \"onDragEnd\"\n    | \"onDragStart\"\n    | \"onAnimationStart\"\n    | \"variants\"\n    | \"transition\"\n    | \"children\"\n  > & {\n    variants?: MotionVariants\n  }\n\ntype MotionVariants = Partial<Record<\"enter\" | \"exit\", Variant>>\n\nfunction mergeVariants(variants?: MotionVariants): any {\n  if (!variants) return\n  return {\n    enter: {\n      ...variants.enter,\n      visibility: \"visible\",\n    },\n    exit: {\n      ...variants.exit,\n      transitionEnd: {\n        visibility: \"hidden\",\n      },\n    },\n  }\n}\n\nconst scaleFade: MotionVariants = {\n  exit: {\n    opacity: 0,\n    scale: 0.95,\n    transition: {\n      duration: 0.1,\n      ease: [0.4, 0, 1, 1],\n    },\n  },\n  enter: {\n    scale: 1,\n    opacity: 1,\n    transition: {\n      duration: 0.15,\n      ease: [0, 0, 0.2, 1],\n    },\n  },\n}\n\nconst MotionSection = chakra(motion.section)\n\nexport interface PopoverTransitionProps\n  extends HTMLMotionChakraProps<\"section\"> {}\n\nexport const PopoverTransition = forwardRef(function PopoverTransition(\n  props: PopoverTransitionProps,\n  ref: React.Ref<any>,\n) {\n  const { variants = scaleFade, ...rest } = props\n  const { isOpen } = usePopoverContext()\n  return (\n    <MotionSection\n      ref={ref}\n      variants={mergeVariants(variants)}\n      initial={false}\n      animate={isOpen ? \"enter\" : \"exit\"}\n      {...rest}\n    />\n  )\n})\n\nPopoverTransition.displayName = \"PopoverTransition\"\n"]},"metadata":{},"sourceType":"module"}