{"ast":null,"code":"'use client';\n\nimport { useCallbackRef } from \"./chunk-KA2477BY.mjs\"; // src/use-outside-click.ts\n\nimport { getOwnerDocument } from \"@chakra-ui/utils\";\nimport { useEffect, useRef } from \"react\";\n\nfunction useOutsideClick(props) {\n  const {\n    ref,\n    handler,\n    enabled = true\n  } = props;\n  const savedHandler = useCallbackRef(handler);\n  const stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false\n  });\n  const state = stateRef.current;\n  useEffect(() => {\n    if (!enabled) return;\n\n    const onPointerDown = e => {\n      if (isValidEvent(e, ref)) {\n        state.isPointerDown = true;\n      }\n    };\n\n    const onMouseUp = event => {\n      if (state.ignoreEmulatedMouseEvents) {\n        state.ignoreEmulatedMouseEvents = false;\n        return;\n      }\n\n      if (state.isPointerDown && handler && isValidEvent(event, ref)) {\n        state.isPointerDown = false;\n        savedHandler(event);\n      }\n    };\n\n    const onTouchEnd = event => {\n      state.ignoreEmulatedMouseEvents = true;\n\n      if (handler && state.isPointerDown && isValidEvent(event, ref)) {\n        state.isPointerDown = false;\n        savedHandler(event);\n      }\n    };\n\n    const doc = getOwnerDocument(ref.current);\n    doc.addEventListener(\"mousedown\", onPointerDown, true);\n    doc.addEventListener(\"mouseup\", onMouseUp, true);\n    doc.addEventListener(\"touchstart\", onPointerDown, true);\n    doc.addEventListener(\"touchend\", onTouchEnd, true);\n    return () => {\n      doc.removeEventListener(\"mousedown\", onPointerDown, true);\n      doc.removeEventListener(\"mouseup\", onMouseUp, true);\n      doc.removeEventListener(\"touchstart\", onPointerDown, true);\n      doc.removeEventListener(\"touchend\", onTouchEnd, true);\n    };\n  }, [handler, ref, savedHandler, state, enabled]);\n}\n\nfunction isValidEvent(event, ref) {\n  var _a;\n\n  const target = event.target;\n\n  if (target) {\n    const doc = getOwnerDocument(target);\n    if (!doc.contains(target)) return false;\n  }\n\n  return !((_a = ref.current) == null ? void 0 : _a.contains(target));\n}\n\nexport { useOutsideClick };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/hooks/src/use-outside-click.ts"],"names":[],"mappings":"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","sourcesContent":["import { getOwnerDocument } from \"@chakra-ui/utils\"\nimport { useEffect, useRef } from \"react\"\nimport { useCallbackRef } from \"./use-callback-ref\"\n\nexport interface UseOutsideClickProps {\n  /**\n   * Whether the hook is enabled\n   */\n  enabled?: boolean\n  /**\n   * The reference to a DOM element.\n   */\n  ref: React.RefObject<HTMLElement>\n  /**\n   * Function invoked when a click is triggered outside the referenced element.\n   */\n  handler?: (e: Event) => void\n}\n\n/**\n * Example, used in components like Dialogs and Popovers, so they can close\n * when a user clicks outside them.\n *\n * @see Docs https://chakra-ui.com/docs/hooks/use-outside-click\n */\nexport function useOutsideClick(props: UseOutsideClickProps) {\n  const { ref, handler, enabled = true } = props\n  const savedHandler = useCallbackRef(handler)\n\n  const stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false,\n  })\n\n  const state = stateRef.current\n\n  useEffect(() => {\n    if (!enabled) return\n    const onPointerDown: any = (e: PointerEvent) => {\n      if (isValidEvent(e, ref)) {\n        state.isPointerDown = true\n      }\n    }\n\n    const onMouseUp: any = (event: MouseEvent) => {\n      if (state.ignoreEmulatedMouseEvents) {\n        state.ignoreEmulatedMouseEvents = false\n        return\n      }\n\n      if (state.isPointerDown && handler && isValidEvent(event, ref)) {\n        state.isPointerDown = false\n        savedHandler(event)\n      }\n    }\n\n    const onTouchEnd = (event: TouchEvent) => {\n      state.ignoreEmulatedMouseEvents = true\n      if (handler && state.isPointerDown && isValidEvent(event, ref)) {\n        state.isPointerDown = false\n        savedHandler(event)\n      }\n    }\n\n    const doc = getOwnerDocument(ref.current)\n    doc.addEventListener(\"mousedown\", onPointerDown, true)\n    doc.addEventListener(\"mouseup\", onMouseUp, true)\n    doc.addEventListener(\"touchstart\", onPointerDown, true)\n    doc.addEventListener(\"touchend\", onTouchEnd, true)\n\n    return () => {\n      doc.removeEventListener(\"mousedown\", onPointerDown, true)\n      doc.removeEventListener(\"mouseup\", onMouseUp, true)\n      doc.removeEventListener(\"touchstart\", onPointerDown, true)\n      doc.removeEventListener(\"touchend\", onTouchEnd, true)\n    }\n  }, [handler, ref, savedHandler, state, enabled])\n}\n\nfunction isValidEvent(event: Event, ref: React.RefObject<HTMLElement>) {\n  const target = event.target as HTMLElement\n\n  if (target) {\n    const doc = getOwnerDocument(target)\n    if (!doc.contains(target)) return false\n  }\n\n  return !ref.current?.contains(target)\n}\n"]},"metadata":{},"sourceType":"module"}