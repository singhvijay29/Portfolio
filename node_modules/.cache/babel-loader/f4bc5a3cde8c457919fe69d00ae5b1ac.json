{"ast":null,"code":"'use client'; // src/color-mode-context.ts\n\nimport { createContext, useContext } from \"react\";\nvar ColorModeContext = createContext({});\nColorModeContext.displayName = \"ColorModeContext\";\n\nfunction useColorMode() {\n  const context = useContext(ColorModeContext);\n\n  if (context === void 0) {\n    throw new Error(\"useColorMode must be used within a ColorModeProvider\");\n  }\n\n  return context;\n}\n\nfunction useColorModeValue(light, dark) {\n  const {\n    colorMode\n  } = useColorMode();\n  return colorMode === \"dark\" ? dark : light;\n}\n\nexport { ColorModeContext, useColorMode, useColorModeValue };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/color-mode/src/color-mode-context.ts"],"names":[],"mappings":";;AAAA,SAAS,aAAT,EAAwB,UAAxB,QAA0C,OAA1C;AAGO,IAAM,gBAAA,GAAmB,aAAA,CAAc,EAAd,CAAzB;AAEP,gBAAA,CAAiB,WAAjB,GAA+B,kBAA/B;;AAMO,SAAS,YAAT,GAAwB;AAC7B,QAAM,OAAA,GAAU,UAAA,CAAW,gBAAX,CAAhB;;AACA,MAAI,OAAA,KAAY,KAAA,CAAhB,EAA2B;AACzB,UAAM,IAAI,KAAJ,CAAU,sDAAV,CAAN;AACF;;AACA,SAAO,OAAP;AACF;;AAcO,SAAS,iBAAT,CACL,KADK,EAEL,IAFK,EAGL;AACA,QAAM;AAAE,IAAA;AAAF,MAAgB,YAAA,EAAtB;AACA,SAAO,SAAA,KAAc,MAAd,GAAuB,IAAvB,GAA8B,KAArC;AACF","sourcesContent":["import { createContext, useContext } from \"react\"\nimport { ColorModeContextType } from \"./color-mode-types\"\n\nexport const ColorModeContext = createContext({} as ColorModeContextType)\n\nColorModeContext.displayName = \"ColorModeContext\"\n\n/**\n * React hook that reads from `ColorModeProvider` context\n * Returns the color mode and function to toggle it\n */\nexport function useColorMode() {\n  const context = useContext(ColorModeContext)\n  if (context === undefined) {\n    throw new Error(\"useColorMode must be used within a ColorModeProvider\")\n  }\n  return context\n}\n\n/**\n * Change value based on color mode.\n *\n * @param light the light mode value\n * @param dark the dark mode value\n *\n * @example\n *\n * ```js\n * const Icon = useColorModeValue(MoonIcon, SunIcon)\n * ```\n */\nexport function useColorModeValue<TLight = unknown, TDark = unknown>(\n  light: TLight,\n  dark: TDark,\n) {\n  const { colorMode } = useColorMode()\n  return colorMode === \"dark\" ? dark : light\n}\n"]},"metadata":{},"sourceType":"module"}