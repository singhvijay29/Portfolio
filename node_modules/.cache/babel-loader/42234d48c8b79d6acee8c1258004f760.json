{"ast":null,"code":"'use client';\n\nimport { BreadcrumbStylesProvider } from \"./chunk-24NX3CUR.mjs\"; // src/breadcrumb.tsx\n\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\";\nimport { cloneElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Breadcrumb = forwardRef(function Breadcrumb2(props, ref) {\n  const styles = useMultiStyleConfig(\"Breadcrumb\", props);\n  const ownProps = omitThemingProps(props);\n  const {\n    children,\n    spacing = \"0.5rem\",\n    separator = \"/\",\n    className,\n    listProps,\n    ...rest\n  } = ownProps;\n  const validChildren = getValidChildren(children);\n  const count = validChildren.length;\n  const clones = validChildren.map((child, index) => cloneElement(child, {\n    separator,\n    spacing,\n    isLastChild: count === index + 1\n  }));\n\n  const _className = cx(\"chakra-breadcrumb\", className);\n\n  return /* @__PURE__ */jsx(chakra.nav, {\n    ref,\n    \"aria-label\": \"breadcrumb\",\n    className: _className,\n    __css: styles.container,\n    ...rest,\n    children: /* @__PURE__ */jsx(BreadcrumbStylesProvider, {\n      value: styles,\n      children: /* @__PURE__ */jsx(chakra.ol, {\n        className: \"chakra-breadcrumb__list\",\n        ...listProps,\n        __css: {\n          display: \"flex\",\n          alignItems: \"center\",\n          ...styles.list\n        },\n        children: clones\n      })\n    })\n  });\n});\nBreadcrumb.displayName = \"Breadcrumb\";\nexport { Breadcrumb };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/breadcrumb/src/breadcrumb.tsx"],"names":["Breadcrumb"],"mappings":";;;;AAAA,SAAS,EAAT,QAAmB,yBAAnB;AACA,SAAS,gBAAT,QAAiC,iCAAjC;AACA,SACE,MADF,EAEE,UAFF,EAIE,gBAJF,EAME,mBANF,QAOO,mBAPP;AAQA,SAAS,YAAT,QAA6B,OAA7B;AAsDU,SAAA,GAAA,QAAA,mBAAA;AApCH,IAAM,UAAA,GAAa,UAAA,CACxB,SAASA,WAAT,CAAoB,KAApB,EAA2B,GAA3B,EAAgC;AAC9B,QAAM,MAAA,GAAS,mBAAA,CAAoB,YAApB,EAAkC,KAAlC,CAAf;AACA,QAAM,QAAA,GAAW,gBAAA,CAAiB,KAAjB,CAAjB;AAEA,QAAM;AACJ,IAAA,QADI;AAEJ,IAAA,OAAA,GAAU,QAFN;AAGJ,IAAA,SAAA,GAAY,GAHR;AAIJ,IAAA,SAJI;AAKJ,IAAA,SALI;AAMJ,OAAG;AANC,MAOF,QAPJ;AASA,QAAM,aAAA,GAAgB,gBAAA,CAAiB,QAAjB,CAAtB;AACA,QAAM,KAAA,GAAQ,aAAA,CAAc,MAA5B;AAEA,QAAM,MAAA,GAAS,aAAA,CAAc,GAAd,CAAkB,CAAC,KAAD,EAAQ,KAAR,KAC/B,YAAA,CAAa,KAAb,EAAoB;AAClB,IAAA,SADkB;AAElB,IAAA,OAFkB;AAGlB,IAAA,WAAA,EAAa,KAAA,KAAU,KAAA,GAAQ;AAHb,GAApB,CADa,CAAf;;AAQA,QAAM,UAAA,GAAa,EAAA,CAAG,mBAAH,EAAwB,SAAxB,CAAnB;;AAEA,SACE,eAAA,GAAA,CAAC,MAAA,CAAO,GAAR,EAAC;AACC,IAAA,GADD;AAEC,kBAAW,YAFZ;AAGC,IAAA,SAAA,EAAW,UAHZ;AAIC,IAAA,KAAA,EAAO,MAAA,CAAO,SAJf;AAKE,OAAG,IALL;AAOC,IAAA,QAAA,EAAA,eAAA,GAAA,CAAC,wBAAD,EAAC;AAAyB,MAAA,KAAA,EAAO,MAAhC;AACC,MAAA,QAAA,EAAA,eAAA,GAAA,CAAC,MAAA,CAAO,EAAR,EAAC;AACC,QAAA,SAAA,EAAU,yBADX;AAEE,WAAG,SAFL;AAGC,QAAA,KAAA,EAAO;AACL,UAAA,OAAA,EAAS,MADJ;AAEL,UAAA,UAAA,EAAY,QAFP;AAGL,aAAG,MAAA,CAAO;AAHL,SAHR;AASE,QAAA,QAAA,EAAA;AATF,OAAD;AADD,KAAD;AAPD,GAAD,CADF;AAuBF,CAlDwB,CAAnB;AAqDP,UAAA,CAAW,WAAX,GAAyB,YAAzB","sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  ThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cloneElement } from \"react\"\nimport { BreadcrumbStylesProvider } from \"./breadcrumb-context\"\nimport { BreadcrumbOptions } from \"./breadcrumb-types\"\n\nexport interface BreadcrumbProps\n  extends HTMLChakraProps<\"nav\">,\n    BreadcrumbOptions,\n    ThemingProps<\"Breadcrumb\"> {\n  listProps?: HTMLChakraProps<\"ol\">\n}\n\n/**\n * Breadcrumb is used to render a breadcrumb navigation landmark.\n * It renders a `nav` element with `aria-label` set to `Breadcrumb`\n *\n * @see Docs https://chakra-ui.com/breadcrumb\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/breadcrumb/\n */\nexport const Breadcrumb = forwardRef<BreadcrumbProps, \"nav\">(\n  function Breadcrumb(props, ref) {\n    const styles = useMultiStyleConfig(\"Breadcrumb\", props)\n    const ownProps = omitThemingProps(props)\n\n    const {\n      children,\n      spacing = \"0.5rem\",\n      separator = \"/\",\n      className,\n      listProps,\n      ...rest\n    } = ownProps\n\n    const validChildren = getValidChildren(children)\n    const count = validChildren.length\n\n    const clones = validChildren.map((child, index) =>\n      cloneElement(child, {\n        separator,\n        spacing,\n        isLastChild: count === index + 1,\n      }),\n    )\n\n    const _className = cx(\"chakra-breadcrumb\", className)\n\n    return (\n      <chakra.nav\n        ref={ref}\n        aria-label=\"breadcrumb\"\n        className={_className}\n        __css={styles.container}\n        {...rest}\n      >\n        <BreadcrumbStylesProvider value={styles}>\n          <chakra.ol\n            className=\"chakra-breadcrumb__list\"\n            {...listProps}\n            __css={{\n              display: \"flex\",\n              alignItems: \"center\",\n              ...styles.list,\n            }}\n          >\n            {clones}\n          </chakra.ol>\n        </BreadcrumbStylesProvider>\n      </chakra.nav>\n    )\n  },\n)\n\nBreadcrumb.displayName = \"Breadcrumb\"\n"]},"metadata":{},"sourceType":"module"}