{"ast":null,"code":"'use client';\n\nimport { useAccordionContext } from \"./chunk-74QY6M57.mjs\";\nimport { useAccordionItemContext, useAccordionStyles } from \"./chunk-RUEU7BLR.mjs\"; // src/accordion-panel.tsx\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { Collapse } from \"@chakra-ui/transition\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar AccordionPanel = forwardRef(function AccordionPanel2(props, ref) {\n  const {\n    className,\n    motionProps,\n    ...rest\n  } = props;\n  const {\n    reduceMotion\n  } = useAccordionContext();\n  const {\n    getPanelProps,\n    isOpen\n  } = useAccordionItemContext();\n  const panelProps = getPanelProps(rest, ref);\n\n  const _className = cx(\"chakra-accordion__panel\", className);\n\n  const styles = useAccordionStyles();\n\n  if (!reduceMotion) {\n    delete panelProps.hidden;\n  }\n\n  const child = /* @__PURE__ */jsx(chakra.div, { ...panelProps,\n    __css: styles.panel,\n    className: _className\n  });\n\n  if (!reduceMotion) {\n    return /* @__PURE__ */jsx(Collapse, {\n      in: isOpen,\n      ...motionProps,\n      children: child\n    });\n  }\n\n  return child;\n});\nAccordionPanel.displayName = \"AccordionPanel\";\nexport { AccordionPanel };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/accordion/src/accordion-panel.tsx"],"names":["AccordionPanel"],"mappings":";;;;;AAAA,SAAS,MAAT,EAAiB,UAAjB,QAAoD,mBAApD;AACA,SAAS,QAAT,QAAwC,uBAAxC;AACA,SAAS,EAAT,QAAmB,yBAAnB;AAsCM,SAAA,GAAA,QAAA,mBAAA;AAlBC,IAAM,cAAA,GAAiB,UAAA,CAC5B,SAASA,eAAT,CAAwB,KAAxB,EAA+B,GAA/B,EAAoC;AAClC,QAAM;AAAE,IAAA,SAAF;AAAa,IAAA,WAAb;AAA0B,OAAG;AAA7B,MAAsC,KAA5C;AAEA,QAAM;AAAE,IAAA;AAAF,MAAmB,mBAAA,EAAzB;AACA,QAAM;AAAE,IAAA,aAAF;AAAiB,IAAA;AAAjB,MAA4B,uBAAA,EAAlC;AAGA,QAAM,UAAA,GAAa,aAAA,CAAc,IAAd,EAAoB,GAApB,CAAnB;;AAEA,QAAM,UAAA,GAAa,EAAA,CAAG,yBAAH,EAA8B,SAA9B,CAAnB;;AACA,QAAM,MAAA,GAAS,kBAAA,EAAf;;AAEA,MAAI,CAAC,YAAL,EAAmB;AACjB,WAAO,UAAA,CAAW,MAAlB;AACF;;AAEA,QAAM,KAAA,GACJ,eAAA,GAAA,CAAC,MAAA,CAAO,GAAR,EAAC,EAAY,GAAG,UAAf;AAA2B,IAAA,KAAA,EAAO,MAAA,CAAO,KAAzC;AAAgD,IAAA,SAAA,EAAW;AAA3D,GAAD,CADF;;AAIA,MAAI,CAAC,YAAL,EAAmB;AACjB,WACE,eAAA,GAAA,CAAC,QAAD,EAAC;AAAS,MAAA,EAAA,EAAI,MAAb;AAAsB,SAAG,WAAzB;AACE,MAAA,QAAA,EAAA;AADF,KAAD,CADF;AAKF;;AAEA,SAAO,KAAP;AACF,CA9B4B,CAAvB;AAiCP,cAAA,CAAe,WAAf,GAA6B,gBAA7B","sourcesContent":["import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { Collapse, CollapseProps } from \"@chakra-ui/transition\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  useAccordionItemContext,\n  useAccordionStyles,\n} from \"./accordion-context\"\nimport { useAccordionContext } from \"./use-accordion\"\n\nexport interface AccordionPanelProps extends HTMLChakraProps<\"div\"> {\n  /**\n   * The properties passed to the underlying `Collapse` component.\n   */\n  motionProps?: CollapseProps\n}\n\n/**\n * Accordion panel that holds the content for each accordion.\n * It shows and hides based on the state login from the `AccordionItem`.\n *\n * It uses the `Collapse` component to animate its height.\n */\nexport const AccordionPanel = forwardRef<AccordionPanelProps, \"div\">(\n  function AccordionPanel(props, ref) {\n    const { className, motionProps, ...rest } = props\n\n    const { reduceMotion } = useAccordionContext()\n    const { getPanelProps, isOpen } = useAccordionItemContext()\n\n    // remove `hidden` prop, 'coz we're using height animation\n    const panelProps = getPanelProps(rest, ref)\n\n    const _className = cx(\"chakra-accordion__panel\", className)\n    const styles = useAccordionStyles()\n\n    if (!reduceMotion) {\n      delete panelProps.hidden\n    }\n\n    const child = (\n      <chakra.div {...panelProps} __css={styles.panel} className={_className} />\n    )\n\n    if (!reduceMotion) {\n      return (\n        <Collapse in={isOpen} {...motionProps}>\n          {child}\n        </Collapse>\n      )\n    }\n\n    return child\n  },\n)\n\nAccordionPanel.displayName = \"AccordionPanel\"\n"]},"metadata":{},"sourceType":"module"}