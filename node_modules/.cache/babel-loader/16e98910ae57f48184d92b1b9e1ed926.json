{"ast":null,"code":"\"use client\"; // src/react.tsx\n\nimport _objectSpread from \"/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _toPropertyKey from \"/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js\";\nimport { useEffect } from \"react\"; // package.json\n\nvar name = \"@vercel/analytics\";\nvar version = \"1.3.1\"; // src/queue.ts\n\nvar initQueue = function initQueue() {\n  if (window.va) return;\n\n  window.va = function a() {\n    for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n      params[_key] = arguments[_key];\n    }\n\n    (window.vaq = window.vaq || []).push(params);\n  };\n}; // src/utils.ts\n\n\nfunction isBrowser() {\n  return typeof window !== \"undefined\";\n}\n\nfunction detectEnvironment() {\n  try {\n    var env = process.env.NODE_ENV;\n\n    if (env === \"development\" || env === \"test\") {\n      return \"development\";\n    }\n  } catch (e) {}\n\n  return \"production\";\n}\n\nfunction setMode() {\n  var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"auto\";\n\n  if (mode === \"auto\") {\n    window.vam = detectEnvironment();\n    return;\n  }\n\n  window.vam = mode;\n}\n\nfunction getMode() {\n  var mode = isBrowser() ? window.vam : detectEnvironment();\n  return mode || \"production\";\n}\n\nfunction isProduction() {\n  return getMode() === \"production\";\n}\n\nfunction isDevelopment() {\n  return getMode() === \"development\";\n}\n\nfunction removeKey(key, _ref) {\n  var _ = _ref[key],\n      rest = _objectWithoutProperties(_ref, [key].map(_toPropertyKey));\n\n  return rest;\n}\n\nfunction parseProperties(properties, options) {\n  if (!properties) return void 0;\n  var props = properties;\n  var errorProperties = [];\n\n  for (var _i = 0, _Object$entries = Object.entries(properties); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n        key = _Object$entries$_i[0],\n        value = _Object$entries$_i[1];\n\n    if (typeof value === \"object\" && value !== null) {\n      if (options.strip) {\n        props = removeKey(key, props);\n      } else {\n        errorProperties.push(key);\n      }\n    }\n  }\n\n  if (errorProperties.length > 0 && !options.strip) {\n    throw Error(\"The following properties are not valid: \".concat(errorProperties.join(\", \"), \". Only strings, numbers, booleans, and null are allowed.\"));\n  }\n\n  return props;\n} // src/generic.ts\n\n\nvar DEV_SCRIPT_URL = \"https://va.vercel-scripts.com/v1/script.debug.js\";\nvar PROD_SCRIPT_URL = \"/_vercel/insights/script.js\";\n\nfunction inject() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    debug: true\n  };\n\n  var _a;\n\n  if (!isBrowser()) return;\n  setMode(props.mode);\n  initQueue();\n\n  if (props.beforeSend) {\n    (_a = window.va) == null ? void 0 : _a.call(window, \"beforeSend\", props.beforeSend);\n  }\n\n  var src = props.scriptSrc || (isDevelopment() ? DEV_SCRIPT_URL : PROD_SCRIPT_URL);\n  if (document.head.querySelector(\"script[src*=\\\"\".concat(src, \"\\\"]\"))) return;\n  var script = document.createElement(\"script\");\n  script.src = src;\n  script.defer = true;\n  script.dataset.sdkn = name + (props.framework ? \"/\".concat(props.framework) : \"\");\n  script.dataset.sdkv = version;\n\n  if (props.disableAutoTrack) {\n    script.dataset.disableAutoTrack = \"1\";\n  }\n\n  if (props.endpoint) {\n    script.dataset.endpoint = props.endpoint;\n  }\n\n  if (props.dsn) {\n    script.dataset.dsn = props.dsn;\n  }\n\n  script.onerror = function () {\n    var errorMessage = isDevelopment() ? \"Please check if any ad blockers are enabled and try again.\" : \"Be sure to enable Web Analytics for your project and deploy again. See https://vercel.com/docs/analytics/quickstart for more information.\";\n    console.log(\"[Vercel Web Analytics] Failed to load script from \".concat(src, \". \").concat(errorMessage));\n  };\n\n  if (isDevelopment() && props.debug === false) {\n    script.dataset.debug = \"false\";\n  }\n\n  document.head.appendChild(script);\n}\n\nfunction track(name2, properties, options) {\n  var _a, _b;\n\n  if (!isBrowser()) {\n    var msg = \"[Vercel Web Analytics] Please import `track` from `@vercel/analytics/server` when using this function in a server environment\";\n\n    if (isProduction()) {\n      console.warn(msg);\n    } else {\n      throw new Error(msg);\n    }\n\n    return;\n  }\n\n  if (!properties) {\n    (_a = window.va) == null ? void 0 : _a.call(window, \"event\", {\n      name: name2,\n      options: options\n    });\n    return;\n  }\n\n  try {\n    var props = parseProperties(properties, {\n      strip: isProduction()\n    });\n    (_b = window.va) == null ? void 0 : _b.call(window, \"event\", {\n      name: name2,\n      data: props,\n      options: options\n    });\n  } catch (err) {\n    if (err instanceof Error && isDevelopment()) {\n      console.error(err);\n    }\n  }\n}\n\nfunction pageview(_ref2) {\n  var route = _ref2.route,\n      path = _ref2.path;\n\n  var _a;\n\n  (_a = window.va) == null ? void 0 : _a.call(window, \"pageview\", {\n    route: route,\n    path: path\n  });\n} // src/react.tsx\n\n\nfunction Analytics(props) {\n  useEffect(function () {\n    inject(_objectSpread(_objectSpread({\n      framework: props.framework || \"react\"\n    }, props.route !== void 0 && {\n      disableAutoTrack: true\n    }), props));\n  }, []);\n  useEffect(function () {\n    if (props.route && props.path) {\n      pageview({\n        route: props.route,\n        path: props.path\n      });\n    }\n  }, [props.route, props.path]);\n  return null;\n}\n\nexport { Analytics, track };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@vercel/analytics/src/react.tsx","/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@vercel/analytics/package.json","/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@vercel/analytics/src/queue.ts","/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@vercel/analytics/src/utils.ts","/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@vercel/analytics/src/generic.ts"],"names":["name"],"mappings":"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","sourcesContent":["import { useEffect } from 'react';\nimport { inject, track, pageview } from './generic';\nimport type { AnalyticsProps } from './types';\n\n/**\n * Injects the Vercel Web Analytics script into the page head and starts tracking page views. Read more in our [documentation](https://vercel.com/docs/concepts/analytics/package).\n * @param [props] - Analytics options.\n * @param [props.mode] - The mode to use for the analytics script. Defaults to `auto`.\n *  - `auto` - Automatically detect the environment.  Uses `production` if the environment cannot be determined.\n *  - `production` - Always use the production script. (Sends events to the server)\n *  - `development` - Always use the development script. (Logs events to the console)\n * @param [props.debug] - Whether to enable debug logging in development. Defaults to `true`.\n * @param [props.beforeSend] - A middleware function to modify events before they are sent. Should return the event object or `null` to cancel the event.\n * @example\n * ```js\n * import { Analytics } from '@vercel/analytics/react';\n *\n * export default function App() {\n *  return (\n *   <div>\n *    <Analytics />\n *    <h1>My App</h1>\n *  </div>\n * );\n * }\n * ```\n */\nfunction Analytics(\n  props: AnalyticsProps & {\n    framework?: string;\n    path?: string | null;\n  }\n): null {\n  useEffect(() => {\n    inject({\n      framework: props.framework || 'react',\n      ...(props.route !== undefined && { disableAutoTrack: true }),\n      ...props,\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- only run once\n  }, []);\n\n  useEffect(() => {\n    if (props.route && props.path) {\n      pageview({\n        route: props.route,\n        path: props.path,\n      });\n    }\n  }, [props.route, props.path]);\n\n  return null;\n}\n\nexport { track, Analytics };\nexport type { AnalyticsProps };\n","{\n  \"name\": \"@vercel/analytics\",\n  \"version\": \"1.3.1\",\n  \"description\": \"Gain real-time traffic insights with Vercel Web Analytics\",\n  \"keywords\": [\n    \"analytics\",\n    \"vercel\"\n  ],\n  \"repository\": {\n    \"url\": \"github:vercel/analytics\",\n    \"directory\": \"packages/web\"\n  },\n  \"license\": \"MPL-2.0\",\n  \"exports\": {\n    \"./package.json\": \"./package.json\",\n    \".\": {\n      \"browser\": \"./dist/index.mjs\",\n      \"import\": \"./dist/index.mjs\",\n      \"require\": \"./dist/index.js\"\n    },\n    \"./react\": {\n      \"browser\": \"./dist/react/index.mjs\",\n      \"import\": \"./dist/react/index.mjs\",\n      \"require\": \"./dist/react/index.js\"\n    },\n    \"./next\": {\n      \"browser\": \"./dist/next/index.mjs\",\n      \"import\": \"./dist/next/index.mjs\",\n      \"require\": \"./dist/next/index.js\"\n    },\n    \"./server\": {\n      \"node\": \"./dist/server/index.js\",\n      \"edge-light\": \"./dist/server/index.mjs\",\n      \"import\": \"./dist/server/index.mjs\",\n      \"require\": \"./dist/server/index.js\",\n      \"default\": \"./dist/server/index.js\"\n    }\n  },\n  \"main\": \"./dist/index.mjs\",\n  \"types\": \"./dist/index.d.ts\",\n  \"typesVersions\": {\n    \"*\": {\n      \"*\": [\n        \"dist/index.d.ts\"\n      ],\n      \"react\": [\n        \"dist/react/index.d.ts\"\n      ],\n      \"server\": [\n        \"dist/server/index.d.ts\"\n      ],\n      \"next\": [\n        \"dist/next/index.d.ts\"\n      ]\n    }\n  },\n  \"scripts\": {\n    \"build\": \"tsup\",\n    \"dev\": \"tsup --watch\",\n    \"lint\": \"eslint .\",\n    \"lint-fix\": \"eslint . --fix\",\n    \"test\": \"jest\",\n    \"type-check\": \"tsc --noEmit\"\n  },\n  \"eslintConfig\": {\n    \"extends\": [\n      \"@vercel/eslint-config\"\n    ],\n    \"rules\": {\n      \"tsdoc/syntax\": \"off\"\n    },\n    \"ignorePatterns\": [\n      \"jest.setup.ts\"\n    ]\n  },\n  \"dependencies\": {\n    \"server-only\": \"^0.0.1\"\n  },\n  \"devDependencies\": {\n    \"@swc/core\": \"^1.3.66\",\n    \"@swc/jest\": \"^0.2.26\",\n    \"@testing-library/jest-dom\": \"^5.16.5\",\n    \"@testing-library/react\": \"^14.0.0\",\n    \"@types/jest\": \"^29.5.2\",\n    \"@types/node\": \"^20.3.1\",\n    \"@types/react\": \"^18.2.14\",\n    \"@types/testing-library__jest-dom\": \"^5.14.6\",\n    \"@vercel/eslint-config\": \"workspace:0.0.0\",\n    \"jest\": \"^29.5.0\",\n    \"jest-environment-jsdom\": \"^29.5.0\",\n    \"react\": \"^18.2.0\",\n    \"react-dom\": \"^18.2.0\",\n    \"tsup\": \"7.1.0\"\n  },\n  \"peerDependencies\": {\n    \"next\": \">= 13\",\n    \"react\": \"^18 || ^19\"\n  },\n  \"peerDependenciesMeta\": {\n    \"next\": {\n      \"optional\": true\n    },\n    \"react\": {\n      \"optional\": true\n    }\n  }\n}\n","export const initQueue = (): void => {\n  // initialize va until script is loaded\n  if (window.va) return;\n\n  window.va = function a(...params): void {\n    (window.vaq = window.vaq || []).push(params);\n  };\n};\n","import type { AllowedPropertyValues, Mode } from './types';\n\nexport function isBrowser(): boolean {\n  return typeof window !== 'undefined';\n}\n\nfunction detectEnvironment(): 'development' | 'production' {\n  try {\n    const env = process.env.NODE_ENV;\n    if (env === 'development' || env === 'test') {\n      return 'development';\n    }\n  } catch (e) {\n    // do nothing, this is okay\n  }\n  return 'production';\n}\n\nexport function setMode(mode: Mode = 'auto'): void {\n  if (mode === 'auto') {\n    window.vam = detectEnvironment();\n    return;\n  }\n\n  window.vam = mode;\n}\n\nexport function getMode(): Mode {\n  const mode = isBrowser() ? window.vam : detectEnvironment();\n  return mode || 'production';\n}\n\nexport function isProduction(): boolean {\n  return getMode() === 'production';\n}\n\nexport function isDevelopment(): boolean {\n  return getMode() === 'development';\n}\n\nfunction removeKey(\n  key: string,\n  { [key]: _, ...rest }\n): Record<string, unknown> {\n  return rest;\n}\n\nexport function parseProperties(\n  properties: Record<string, unknown> | undefined,\n  options: {\n    strip?: boolean;\n  }\n): Error | Record<string, AllowedPropertyValues> | undefined {\n  if (!properties) return undefined;\n  let props = properties;\n  const errorProperties: string[] = [];\n  for (const [key, value] of Object.entries(properties)) {\n    if (typeof value === 'object' && value !== null) {\n      if (options.strip) {\n        props = removeKey(key, props);\n      } else {\n        errorProperties.push(key);\n      }\n    }\n  }\n\n  if (errorProperties.length > 0 && !options.strip) {\n    throw Error(\n      `The following properties are not valid: ${errorProperties.join(\n        ', '\n      )}. Only strings, numbers, booleans, and null are allowed.`\n    );\n  }\n  return props as Record<string, AllowedPropertyValues>;\n}\n\nexport function computeRoute(\n  pathname: string | null,\n  pathParams: Record<string, string | string[]> | null\n): string | null {\n  if (!pathname || !pathParams) {\n    return pathname;\n  }\n\n  let result = pathname;\n  try {\n    const entries = Object.entries(pathParams);\n    // simple keys must be handled first\n    for (const [key, value] of entries) {\n      if (!Array.isArray(value)) {\n        const matcher = turnValueToRegExp(value);\n        if (matcher.test(result)) {\n          result = result.replace(matcher, `/[${key}]`);\n        }\n      }\n    }\n    // array values next\n    for (const [key, value] of entries) {\n      if (Array.isArray(value)) {\n        const matcher = turnValueToRegExp(value.join('/'));\n        if (matcher.test(result)) {\n          result = result.replace(matcher, `/[...${key}]`);\n        }\n      }\n    }\n    return result;\n  } catch (e) {\n    return pathname;\n  }\n}\n\nfunction turnValueToRegExp(value: string): RegExp {\n  return new RegExp(`/${escapeRegExp(value)}(?=[/?#]|$)`);\n}\n\nfunction escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n","import { name as packageName, version } from '../package.json';\nimport { initQueue } from './queue';\nimport type {\n  AllowedPropertyValues,\n  AnalyticsProps,\n  FlagsDataInput,\n} from './types';\nimport {\n  isBrowser,\n  parseProperties,\n  setMode,\n  isDevelopment,\n  isProduction,\n} from './utils';\n\nexport const DEV_SCRIPT_URL =\n  'https://va.vercel-scripts.com/v1/script.debug.js';\nexport const PROD_SCRIPT_URL = '/_vercel/insights/script.js';\n\n/**\n * Injects the Vercel Web Analytics script into the page head and starts tracking page views. Read more in our [documentation](https://vercel.com/docs/concepts/analytics/package).\n * @param [props] - Analytics options.\n * @param [props.mode] - The mode to use for the analytics script. Defaults to `auto`.\n *  - `auto` - Automatically detect the environment.  Uses `production` if the environment cannot be determined.\n *  - `production` - Always use the production script. (Sends events to the server)\n *  - `development` - Always use the development script. (Logs events to the console)\n * @param [props.debug] - Whether to enable debug logging in development. Defaults to `true`.\n * @param [props.beforeSend] - A middleware function to modify events before they are sent. Should return the event object or `null` to cancel the event.\n * @param [props.dsn] - The DSN of the project to send events to. Only required when self-hosting.\n */\nfunction inject(\n  props: AnalyticsProps & {\n    framework?: string;\n  } = {\n    debug: true,\n  }\n): void {\n  if (!isBrowser()) return;\n\n  setMode(props.mode);\n\n  initQueue();\n\n  if (props.beforeSend) {\n    window.va?.('beforeSend', props.beforeSend);\n  }\n\n  const src =\n    props.scriptSrc || (isDevelopment() ? DEV_SCRIPT_URL : PROD_SCRIPT_URL);\n\n  if (document.head.querySelector(`script[src*=\"${src}\"]`)) return;\n\n  const script = document.createElement('script');\n  script.src = src;\n  script.defer = true;\n  script.dataset.sdkn =\n    packageName + (props.framework ? `/${props.framework}` : '');\n  script.dataset.sdkv = version;\n\n  if (props.disableAutoTrack) {\n    script.dataset.disableAutoTrack = '1';\n  }\n  if (props.endpoint) {\n    script.dataset.endpoint = props.endpoint;\n  }\n  if (props.dsn) {\n    script.dataset.dsn = props.dsn;\n  }\n\n  script.onerror = (): void => {\n    const errorMessage = isDevelopment()\n      ? 'Please check if any ad blockers are enabled and try again.'\n      : 'Be sure to enable Web Analytics for your project and deploy again. See https://vercel.com/docs/analytics/quickstart for more information.';\n\n    // eslint-disable-next-line no-console -- Logging to console is intentional\n    console.log(\n      `[Vercel Web Analytics] Failed to load script from ${src}. ${errorMessage}`\n    );\n  };\n\n  if (isDevelopment() && props.debug === false) {\n    script.dataset.debug = 'false';\n  }\n\n  document.head.appendChild(script);\n}\n\n/**\n * Tracks a custom event. Please refer to the [documentation](https://vercel.com/docs/concepts/analytics/custom-events) for more information on custom events.\n * @param name - The name of the event.\n * * Examples: `Purchase`, `Click Button`, or `Play Video`.\n * @param [properties] - Additional properties of the event. Nested objects are not supported. Allowed values are `string`, `number`, `boolean`, and `null`.\n */\nfunction track(\n  name: string,\n  properties?: Record<string, AllowedPropertyValues>,\n  options?: {\n    flags?: FlagsDataInput;\n  }\n): void {\n  if (!isBrowser()) {\n    const msg =\n      '[Vercel Web Analytics] Please import `track` from `@vercel/analytics/server` when using this function in a server environment';\n\n    if (isProduction()) {\n      // eslint-disable-next-line no-console -- Show warning in production\n      console.warn(msg);\n    } else {\n      throw new Error(msg);\n    }\n\n    return;\n  }\n\n  if (!properties) {\n    window.va?.('event', { name, options });\n    return;\n  }\n\n  try {\n    const props = parseProperties(properties, {\n      strip: isProduction(),\n    });\n\n    window.va?.('event', {\n      name,\n      data: props,\n      options,\n    });\n  } catch (err) {\n    if (err instanceof Error && isDevelopment()) {\n      // eslint-disable-next-line no-console -- Logging to console is intentional\n      console.error(err);\n    }\n  }\n}\n\nfunction pageview({ route, path }: { route?: string; path?: string }): void {\n  window.va?.('pageview', {\n    route,\n    path,\n  });\n}\n\nexport { inject, track, pageview };\nexport type { AnalyticsProps };\n\n// eslint-disable-next-line import/no-default-export -- Default export is intentional\nexport default {\n  inject,\n  track,\n};\n"]},"metadata":{},"sourceType":"module"}