{"ast":null,"code":"'use client'; // src/button-spinner.tsx\n\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\n\nfunction ButtonSpinner(props) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = /* @__PURE__ */jsx(Spinner, {\n      color: \"currentColor\",\n      width: \"1em\",\n      height: \"1em\"\n    }),\n    className,\n    __css,\n    ...rest\n  } = props;\n\n  const _className = cx(\"chakra-button__spinner\", className);\n\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  const spinnerStyles = useMemo(() => ({\n    display: \"flex\",\n    alignItems: \"center\",\n    position: label ? \"relative\" : \"absolute\",\n    [marginProp]: label ? spacing : 0,\n    fontSize: \"1em\",\n    lineHeight: \"normal\",\n    ...__css\n  }), [__css, label, marginProp, spacing]);\n  return /* @__PURE__ */jsx(chakra.div, {\n    className: _className,\n    ...rest,\n    __css: spinnerStyles,\n    children\n  });\n}\n\nButtonSpinner.displayName = \"ButtonSpinner\";\nexport { ButtonSpinner };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/@chakra-ui/button/src/button-spinner.tsx"],"names":[],"mappings":";;AAAA,SAAS,OAAT,QAAwB,oBAAxB;AACA,SAAS,MAAT,QAA2D,mBAA3D;AACA,SAAS,EAAT,QAAmB,yBAAnB;AACA,SAAS,OAAT,QAAwB,OAAxB;AAYe,SAAA,GAAA,QAAA,mBAAA;;AALR,SAAS,aAAT,CAAuB,KAAvB,EAAkD;AACvD,QAAM;AACJ,IAAA,KADI;AAEJ,IAAA,SAFI;AAGJ,IAAA,OAAA,GAAU,QAHN;AAIJ,IAAA,QAAA,GAAW,eAAA,GAAA,CAAC,OAAD,EAAC;AAAQ,MAAA,KAAA,EAAM,cAAd;AAA6B,MAAA,KAAA,EAAM,KAAnC;AAAyC,MAAA,MAAA,EAAO;AAAhD,KAAD,CAJP;AAKJ,IAAA,SALI;AAMJ,IAAA,KANI;AAOJ,OAAG;AAPC,MAQF,KARJ;;AAUA,QAAM,UAAA,GAAa,EAAA,CAAG,wBAAH,EAA6B,SAA7B,CAAnB;;AAEA,QAAM,UAAA,GAAa,SAAA,KAAc,OAAd,GAAwB,WAAxB,GAAsC,aAAzD;AAEA,QAAM,aAAA,GAAmC,OAAA,CACvC,OAAO;AACL,IAAA,OAAA,EAAS,MADJ;AAEL,IAAA,UAAA,EAAY,QAFP;AAGL,IAAA,QAAA,EAAU,KAAA,GAAQ,UAAR,GAAqB,UAH1B;AAIL,KAAC,UAAD,GAAc,KAAA,GAAQ,OAAR,GAAkB,CAJ3B;AAKL,IAAA,QAAA,EAAU,KALL;AAML,IAAA,UAAA,EAAY,QANP;AAOL,OAAG;AAPE,GAAP,CADuC,EAUvC,CAAC,KAAD,EAAQ,KAAR,EAAe,UAAf,EAA2B,OAA3B,CAVuC,CAAzC;AAaA,SACE,eAAA,GAAA,CAAC,MAAA,CAAO,GAAR,EAAC;AAAW,IAAA,SAAA,EAAW,UAAtB;AAAmC,OAAG,IAAtC;AAA4C,IAAA,KAAA,EAAO,aAAnD;AACE,IAAA;AADF,GAAD,CADF;AAKF;;AACA,aAAA,CAAc,WAAd,GAA4B,eAA5B","sourcesContent":["import { Spinner } from \"@chakra-ui/spinner\"\nimport { chakra, HTMLChakraProps, SystemStyleObject } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useMemo } from \"react\"\nimport { ButtonSpinnerOptions } from \"./button-types\"\n\ninterface ButtonSpinnerProps\n  extends HTMLChakraProps<\"div\">,\n    ButtonSpinnerOptions {}\n\nexport function ButtonSpinner(props: ButtonSpinnerProps) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = <Spinner color=\"currentColor\" width=\"1em\" height=\"1em\" />,\n    className,\n    __css,\n    ...rest\n  } = props\n\n  const _className = cx(\"chakra-button__spinner\", className)\n\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\"\n\n  const spinnerStyles: SystemStyleObject = useMemo(\n    () => ({\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\",\n      [marginProp]: label ? spacing : 0,\n      fontSize: \"1em\",\n      lineHeight: \"normal\",\n      ...__css,\n    }),\n    [__css, label, marginProp, spacing],\n  )\n\n  return (\n    <chakra.div className={_className} {...rest} __css={spinnerStyles}>\n      {children}\n    </chakra.div>\n  )\n}\nButtonSpinner.displayName = \"ButtonSpinner\"\n"]},"metadata":{},"sourceType":"module"}