{"ast":null,"code":"const checkStringStartsWith = token => key => typeof key === \"string\" && key.startsWith(token);\n\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\n\nconst isCSSVariableToken = value => {\n  const startsWithToken = startsAsVariableToken(value);\n  if (!startsWithToken) return false; // Ensure any comments are stripped from the value as this can harm performance of the regex.\n\n  return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\n\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\nexport { isCSSVariableName, isCSSVariableToken };","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs"],"names":["checkStringStartsWith","token","key","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","value","startsWithToken","singleCssVariableRegex","test","split","trim"],"mappings":"AAAA,MAAMA,qBAAqB,GAAIC,KAAD,IAAYC,GAAD,IAAS,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,CAACC,UAAJ,CAAeF,KAAf,CAA7E;;AACA,MAAMG,iBAAiB,GAAGJ,qBAAqB,CAAC,IAAD,CAA/C;AACA,MAAMK,qBAAqB,GAAGL,qBAAqB,CAAC,QAAD,CAAnD;;AACA,MAAMM,kBAAkB,GAAIC,KAAD,IAAW;AAClC,QAAMC,eAAe,GAAGH,qBAAqB,CAACE,KAAD,CAA7C;AACA,MAAI,CAACC,eAAL,EACI,OAAO,KAAP,CAH8B,CAIlC;;AACA,SAAOC,sBAAsB,CAACC,IAAvB,CAA4BH,KAAK,CAACI,KAAN,CAAY,IAAZ,EAAkB,CAAlB,EAAqBC,IAArB,EAA5B,CAAP;AACH,CAND;;AAOA,MAAMH,sBAAsB,GAAG,qFAA/B;AAEA,SAASL,iBAAT,EAA4BE,kBAA5B","sourcesContent":["const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n"]},"metadata":{},"sourceType":"module"}