{"ast":null,"code":"import { assignRef } from './assignRef';\nimport { createCallbackRef } from './createRef';\n/**\n * Merges two or more refs together providing a single interface to set their value\n * @param {RefObject|Ref} refs\n * @returns {MutableRefObject} - a new ref, which translates all changes to {refs}\n *\n * @see {@link useMergeRefs} to be used in ReactComponents\n * @example\n * const Component = React.forwardRef((props, ref) => {\n *   const ownRef = useRef();\n *   const domRef = mergeRefs([ref, ownRef]); // ðŸ‘ˆ merge together\n *   return <div ref={domRef}>...</div>\n * }\n */\n\nexport function mergeRefs(refs) {\n  return createCallbackRef(function (newValue) {\n    return refs.forEach(function (ref) {\n      return assignRef(ref, newValue);\n    });\n  });\n}","map":{"version":3,"sources":["/Users/vijay-chace/Desktop/Portfolio/Portfolio/node_modules/use-callback-ref/dist/es2015/mergeRef.js"],"names":["assignRef","createCallbackRef","mergeRefs","refs","newValue","forEach","ref"],"mappings":"AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,iBAAT,QAAkC,aAAlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AAC5B,SAAOF,iBAAiB,CAAC,UAAUG,QAAV,EAAoB;AAAE,WAAOD,IAAI,CAACE,OAAL,CAAa,UAAUC,GAAV,EAAe;AAAE,aAAON,SAAS,CAACM,GAAD,EAAMF,QAAN,CAAhB;AAAkC,KAAhE,CAAP;AAA2E,GAAlG,CAAxB;AACH","sourcesContent":["import { assignRef } from './assignRef';\nimport { createCallbackRef } from './createRef';\n/**\n * Merges two or more refs together providing a single interface to set their value\n * @param {RefObject|Ref} refs\n * @returns {MutableRefObject} - a new ref, which translates all changes to {refs}\n *\n * @see {@link useMergeRefs} to be used in ReactComponents\n * @example\n * const Component = React.forwardRef((props, ref) => {\n *   const ownRef = useRef();\n *   const domRef = mergeRefs([ref, ownRef]); // ðŸ‘ˆ merge together\n *   return <div ref={domRef}>...</div>\n * }\n */\nexport function mergeRefs(refs) {\n    return createCallbackRef(function (newValue) { return refs.forEach(function (ref) { return assignRef(ref, newValue); }); });\n}\n"]},"metadata":{},"sourceType":"module"}